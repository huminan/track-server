

HI-TECH Software PIC PRO Macro Assembler V9.80 build 6738 
                                                                                               Tue Jan 30 15:08:37 2018

HI-TECH Software Omniscient Code Generator (PRO mode) build 6738
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,delta=2
    19                           	psect	text1189,local,class=CODE,delta=2
    20                           	psect	text1190,local,class=CODE,delta=2
    21                           	psect	text1202,local,class=CODE,delta=2
    22                           	psect	text1203,local,class=CODE,delta=2
    23                           	psect	text1204,local,class=CODE,delta=2
    24                           	psect	text1208,local,class=CODE,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text1211,local,class=CODE,delta=2
    27                           	psect	text1227,local,class=CODE,delta=2
    28                           	psect	text1230,local,class=CODE,delta=2
    29                           	psect	text1245,local,class=CODE,delta=2
    30                           	psect	pa_nodes,global,class=CODE,delta=2
    31                           	dabs	1,0x7E,2
    32  000A                     	;#
    33                           
    34                           	psect	config
    35  2007  3B32               	dw	15154	;#
    36                           
    37                           	psect	idataBANK1
    38  0000                     __pidataBANK1:	
    39                           
    40                           	psect	strings
    41  0017                     __pstrings:	
    42  0017                     stringtab:	
    43                           ;	global	stringdir,stringtab,__stringbase
    44                           
    45                           
    46                           ;	String table - string pointers are 1 byte each
    47  0017  1BFF               	btfsc	btemp+1,7
    48  0018  2821               	ljmp	stringcode
    49  0019  1383               	bcf	3,7
    50  001A  187F               	btfsc	btemp+1,0
    51  001B  1783               	bsf	3,7
    52  001C  0800               	movf	0,w
    53  001D  0A84               	incf	4,f
    54  001E  1903               	skipnz
    55  001F  0AFF               	incf	btemp+1,f
    56  0020  0008               	return
    57  0021                     stringcode:	
    58  0021                     stringdir:	
    59  0021  3000               	movlw	high stringdir
    60  0022  008A               	movwf	10
    61  0023  0804               	movf	4,w
    62  0024  0A84               	incf	4,f
    63  0025  0782               	addwf	2,f
    64  0026                     __stringbase:	
    65  0026  3400               	retlw	0
    66  0027                     _CODE:	
    67  0027  343F               	retlw	63
    68  0028  3406               	retlw	6
    69  0029  345B               	retlw	91
    70  002A  344F               	retlw	79
    71  002B  3466               	retlw	102
    72  002C  346D               	retlw	109
    73  002D  347D               	retlw	125
    74  002E  3407               	retlw	7
    75  002F  34EF               	retlw	239
    76  0030  346F               	retlw	111
    77  0031                     exp@coeff:	
    78  0031  3400               	retlw	0
    79  0032  3480               	retlw	128
    80  0033  343F               	retlw	63
    81  0034  3472               	retlw	114
    82  0035  3431               	retlw	49
    83  0036  343F               	retlw	63
    84  0037  34FE               	retlw	254
    85  0038  3475               	retlw	117
    86  0039  343E               	retlw	62
    87  003A  3458               	retlw	88
    88  003B  3463               	retlw	99
    89  003C  343D               	retlw	61
    90  003D  3495               	retlw	149
    91  003E  341D               	retlw	29
    92  003F  343C               	retlw	60
    93  0040  34C5               	retlw	197
    94  0041  34AE               	retlw	174
    95  0042  343A               	retlw	58
    96  0043  3479               	retlw	121
    97  0044  3421               	retlw	33
    98  0045  3439               	retlw	57
    99  0046  3494               	retlw	148
   100  0047  3480               	retlw	128
   101  0048  3437               	retlw	55
   102  0049  3493               	retlw	147
   103  004A  34A7               	retlw	167
   104  004B  3435               	retlw	53
   105  004C  3456               	retlw	86
   106  004D  3415               	retlw	21
   107  004E  3434               	retlw	52
   108  004F                     log@coeff:	
   109  004F  3400               	retlw	0
   110  0050  3400               	retlw	0
   111  0051  3400               	retlw	0
   112  0052  3400               	retlw	0
   113  0053  3480               	retlw	128
   114  0054  343F               	retlw	63
   115  0055  34F0               	retlw	240
   116  0056  34FF               	retlw	255
   117  0057  34BE               	retlw	190
   118  0058  34E2               	retlw	226
   119  0059  34A9               	retlw	169
   120  005A  343E               	retlw	62
   121  005B  3483               	retlw	131
   122  005C  3476               	retlw	118
   123  005D  34BE               	retlw	190
   124  005E  34AE               	retlw	174
   125  005F  342B               	retlw	43
   126  0060  343E               	retlw	62
   127  0061  343C               	retlw	60
   128  0062  34C3               	retlw	195
   129  0063  34BD               	retlw	189
   130  0064  34D2               	retlw	210
   131  0065  3413               	retlw	19
   132  0066  343D               	retlw	61
   133  0067  3478               	retlw	120
   134  0068  34D3               	retlw	211
   135  0069  34BB               	retlw	187
   136  0005                     _PORTA	set	5
   137  0008                     _PORTD	set	8
   138  001A                     _RCREG	set	26
   139  0001                     _TMR0	set	1
   140  0019                     _TXREG	set	25
   141  00C3                     _ADDEN	set	195
   142  00C4                     _CREN	set	196
   143  00C2                     _FERR	set	194
   144  005F                     _GIE	set	95
   145  00C1                     _OERR	set	193
   146  005E                     _PEIE	set	94
   147  003A                     _RC2	set	58
   148  003B                     _RC3	set	59
   149  0065                     _RCIF	set	101
   150  0048                     _RE0	set	72
   151  0049                     _RE1	set	73
   152  004A                     _RE2	set	74
   153  00C6                     _RX9	set	198
   154  00C0                     _RX9D	set	192
   155  00C7                     _SPEN	set	199
   156  00C5                     _SREN	set	197
   157  005D                     _T0IE	set	93
   158  005A                     _T0IF	set	90
   159  0081                     _OPTION	set	129
   160  0099                     _SPBRG	set	153
   161  0085                     _TRISA	set	133
   162  0086                     _TRISB	set	134
   163  0087                     _TRISC	set	135
   164  0088                     _TRISD	set	136
   165  0089                     _TRISE	set	137
   166  04C2                     _BRGH	set	1218
   167  04C7                     _CSRC	set	1223
   168  0465                     _RCIE	set	1125
   169  04C4                     _SYNC	set	1220
   170  04C1                     _TRMT	set	1217
   171  04C6                     _TX9	set	1222
   172  04C0                     _TX9D	set	1216
   173  04C5                     _TXEN	set	1221
   174  006A                     STR_11:	
   175  006A  3441               	retlw	65	;'A'
   176  006B  3454               	retlw	84	;'T'
   177  006C  342B               	retlw	43	;'+'
   178  006D  3443               	retlw	67	;'C'
   179  006E  3457               	retlw	87	;'W'
   180  006F  344A               	retlw	74	;'J'
   181  0070  3441               	retlw	65	;'A'
   182  0071  3450               	retlw	80	;'P'
   183  0072  343D               	retlw	61	;'='
   184  0073  3422               	retlw	34	;'"'
   185  0074  3464               	retlw	100	;'d'
   186  0075  3465               	retlw	101	;'e'
   187  0076  3465               	retlw	101	;'e'
   188  0077  3474               	retlw	116	;'t'
   189  0078  3422               	retlw	34	;'"'
   190  0079  342C               	retlw	44	;','
   191  007A  3422               	retlw	34	;'"'
   192  007B  3431               	retlw	49	;'1'
   193  007C  3437               	retlw	55	;'7'
   194  007D  3432               	retlw	50	;'2'
   195  007E  3432               	retlw	50	;'2'
   196  007F  3431               	retlw	49	;'1'
   197  0080  3430               	retlw	48	;'0'
   198  0081  3430               	retlw	48	;'0'
   199  0082  3438               	retlw	56	;'8'
   200  0083  3436               	retlw	54	;'6'
   201  0084  3422               	retlw	34	;'"'
   202  0085  340D               	retlw	13
   203  0086  340A               	retlw	10
   204  0087  3400               	retlw	0
   205  0088                     STR_14:	
   206  0088  3441               	retlw	65	;'A'
   207  0089  3454               	retlw	84	;'T'
   208  008A  342B               	retlw	43	;'+'
   209  008B  3443               	retlw	67	;'C'
   210  008C  3449               	retlw	73	;'I'
   211  008D  3450               	retlw	80	;'P'
   212  008E  3453               	retlw	83	;'S'
   213  008F  3445               	retlw	69	;'E'
   214  0090  3452               	retlw	82	;'R'
   215  0091  3456               	retlw	86	;'V'
   216  0092  3445               	retlw	69	;'E'
   217  0093  3452               	retlw	82	;'R'
   218  0094  343D               	retlw	61	;'='
   219  0095  3431               	retlw	49	;'1'
   220  0096  342C               	retlw	44	;','
   221  0097  3431               	retlw	49	;'1'
   222  0098  3435               	retlw	53	;'5'
   223  0099  3439               	retlw	57	;'9'
   224  009A  3432               	retlw	50	;'2'
   225  009B  340D               	retlw	13
   226  009C  340A               	retlw	10
   227  009D  3400               	retlw	0
   228  009E                     STR_16:	
   229  009E  3441               	retlw	65	;'A'
   230  009F  3454               	retlw	84	;'T'
   231  00A0  342B               	retlw	43	;'+'
   232  00A1  3443               	retlw	67	;'C'
   233  00A2  3449               	retlw	73	;'I'
   234  00A3  3450               	retlw	80	;'P'
   235  00A4  3453               	retlw	83	;'S'
   236  00A5  3454               	retlw	84	;'T'
   237  00A6  344F               	retlw	79	;'O'
   238  00A7  343D               	retlw	61	;'='
   239  00A8  3433               	retlw	51	;'3'
   240  00A9  3430               	retlw	48	;'0'
   241  00AA  3430               	retlw	48	;'0'
   242  00AB  340D               	retlw	13
   243  00AC  340A               	retlw	10
   244  00AD  3400               	retlw	0
   245  00AE                     STR_5:	
   246  00AE  3441               	retlw	65	;'A'
   247  00AF  3454               	retlw	84	;'T'
   248  00B0  342B               	retlw	43	;'+'
   249  00B1  3443               	retlw	67	;'C'
   250  00B2  3457               	retlw	87	;'W'
   251  00B3  344D               	retlw	77	;'M'
   252  00B4  344F               	retlw	79	;'O'
   253  00B5  3444               	retlw	68	;'D'
   254  00B6  3445               	retlw	69	;'E'
   255  00B7  343D               	retlw	61	;'='
   256  00B8  3431               	retlw	49	;'1'
   257  00B9  340D               	retlw	13
   258  00BA  340A               	retlw	10
   259  00BB  3400               	retlw	0
   260  00BC                     STR_9:	
   261  00BC  3441               	retlw	65	;'A'
   262  00BD  3454               	retlw	84	;'T'
   263  00BE  342B               	retlw	43	;'+'
   264  00BF  3443               	retlw	67	;'C'
   265  00C0  3449               	retlw	73	;'I'
   266  00C1  3450               	retlw	80	;'P'
   267  00C2  344D               	retlw	77	;'M'
   268  00C3  3455               	retlw	85	;'U'
   269  00C4  3458               	retlw	88	;'X'
   270  00C5  343D               	retlw	61	;'='
   271  00C6  3431               	retlw	49	;'1'
   272  00C7  340D               	retlw	13
   273  00C8  340A               	retlw	10
   274  00C9  3400               	retlw	0
   275  00CA                     STR_13:	
   276  00CA  3441               	retlw	65	;'A'
   277  00CB  3454               	retlw	84	;'T'
   278  00CC  342B               	retlw	43	;'+'
   279  00CD  3443               	retlw	67	;'C'
   280  00CE  3449               	retlw	73	;'I'
   281  00CF  3446               	retlw	70	;'F'
   282  00D0  3453               	retlw	83	;'S'
   283  00D1  3452               	retlw	82	;'R'
   284  00D2  340D               	retlw	13
   285  00D3  340A               	retlw	10
   286  00D4  3400               	retlw	0
   287  00D5                     STR_7:	
   288  00D5  3441               	retlw	65	;'A'
   289  00D6  3454               	retlw	84	;'T'
   290  00D7  342B               	retlw	43	;'+'
   291  00D8  3452               	retlw	82	;'R'
   292  00D9  3453               	retlw	83	;'S'
   293  00DA  3454               	retlw	84	;'T'
   294  00DB  340D               	retlw	13
   295  00DC  340A               	retlw	10
   296  00DD  3400               	retlw	0
   297  00DE                     STR_3:	
   298  00DE  3441               	retlw	65	;'A'
   299  00DF  3454               	retlw	84	;'T'
   300  00E0  3445               	retlw	69	;'E'
   301  00E1  3430               	retlw	48	;'0'
   302  00E2  340D               	retlw	13
   303  00E3  340A               	retlw	10
   304  00E4  3400               	retlw	0
   305  00E5                     STR_1:	
   306  00E5  3441               	retlw	65	;'A'
   307  00E6  3454               	retlw	84	;'T'
   308  00E7  340D               	retlw	13
   309  00E8  340A               	retlw	10
   310  00E9  3400               	retlw	0
   311  00EA                     STR_2:	
   312  00EA  344F               	retlw	79	;'O'
   313  00EB  344B               	retlw	75	;'K'
   314  00EC  3400               	retlw	0
   315  00EA                     
   316                           	psect	cinit
   317  1776                     start_initialization:	
   318                           
   319                           ; Clear objects allocated to BANK0
   320  1776  01EF               	clrf	__pbssBANK0& (0+127)
   321                           
   322                           ; Clear objects allocated to BANK1
   323  1777  1383               	bcf	3,7	;select IRP bank0
   324  1778  30DF               	movlw	low __pbssBANK1
   325  1779  0084               	movwf	4
   326  177A  30ED               	movlw	low (__pbssBANK1+14)
   327  177B  120A  158A  2002   	fcall	clear_ram
      +       160A  118A         
   328                           
   329                           ; Clear objects allocated to BANK3
   330  1780  1783               	bsf	3,7	;select IRP bank2
   331  1781  3090               	movlw	low __pbssBANK3
   332  1782  0084               	movwf	4
   333  1783  30D9               	movlw	low (__pbssBANK3+73)
   334  1784  120A  158A  2002   	fcall	clear_ram
      +       160A  118A         
   335                           
   336                           ; Clear objects allocated to BANK2
   337  1789  3010               	movlw	low __pbssBANK2
   338  178A  0084               	movwf	4
   339  178B  3042               	movlw	low (__pbssBANK2+50)
   340  178C  120A  158A  2002   	fcall	clear_ram
   341                           
   342                           ; Initialize objects allocated to BANK1
   343  178F  1683               	bsf	3,5	;RP0=1, select bank1
   344                           
   345                           ;initializer for _first_time
   346  1790  3001               	movlw	1
   347  1791  00ED               	movwf	__pdataBANK1& (0+127)
   348  1792                     end_of_initialization:	
   349                           ;End of C runtime variable initialization code
   350                           
   351  1792  0183               	clrf	3
   352  1793  120A  118A  2EB7   	ljmp	_main	;jump to C main() function
   353                           
   354                           	psect	bssBANK0
   355  006F                     __pbssBANK0:	
   356  006F                     _WifiRcvCnt:	
   357  006F                     	ds	1
   358                           
   359                           	psect	bssBANK1
   360  00DF                     __pbssBANK1:	
   361  00DF                     _arr_rcv_who:	
   362  00DF                     	ds	2
   363  00E1                     _gps_location:	
   364  00E1                     	ds	2
   365  00E3                     _sec_cnt:	
   366  00E3                     	ds	2
   367  00E5                     _LatiRcvCnt:	
   368  00E5                     	ds	1
   369  00E6                     _LenRcvCnt:	
   370  00E6                     	ds	1
   371  00E7                     _LongiRcvCnt:	
   372  00E7                     	ds	1
   373  00E8                     _WhoRcvCnt:	
   374  00E8                     	ds	1
   375  00E9                     _config_ok:	
   376  00E9                     	ds	1
   377  00EA                     _pos:	
   378  00EA                     	ds	1
   379  00EB                     _timer0_cnt:	
   380  00EB                     	ds	1
   381  00EC                     _val_rcv_len:	
   382  00EC                     	ds	1
   383                           
   384                           	psect	dataBANK1
   385  00ED                     __pdataBANK1:	
   386  00ED                     _first_time:	
   387  00ED                     	ds	1
   388                           
   389                           	psect	bssBANK3
   390  0190                     __pbssBANK3:	
   391  0190                     _arr_rcv_section1:	
   392  0190                     	ds	10
   393  019A                     _arr_rcv_section2:	
   394  019A                     	ds	10
   395  01A4                     _val_rcv_lati:	
   396  01A4                     	ds	4
   397  01A8                     _val_rcv_longi:	
   398  01A8                     	ds	4
   399  01AC                     _digitron1:	
   400  01AC                     	ds	14
   401  01BA                     _digitron2:	
   402  01BA                     	ds	14
   403  01C8                     _digitron3:	
   404  01C8                     	ds	14
   405  01D6                     _arr_rcv_len:	
   406  01D6                     	ds	3
   407                           
   408                           	psect	bssBANK2
   409  0110                     __pbssBANK2:	
   410  0110                     _rcv_wifi:	
   411  0110                     	ds	50
   412                           
   413                           	psect	clrtext
   414  0802                     clear_ram:	
   415                           ;	Called with FSR containing the base address, and
   416                           ;	W with the last address+1
   417                           
   418  0802  0064               	clrwdt	;clear the watchdog before getting into this loop
   419  0803                     clrloop:	
   420  0803  0180               	clrf	0	;clear RAM location pointed to by FSR
   421  0804  0A84               	incf	4,f	;increment pointer
   422  0805  0604               	xorwf	4,w	;XOR with final address
   423  0806  1903               	btfsc	3,2	;have we reached the end yet?
   424  0807  3400               	retlw	0	;all done for this memory range, return
   425  0808  0604               	xorwf	4,w	;XOR again to restore value
   426  0809  2803               	goto	clrloop	;do the next byte
   427                           
   428                           	psect	cstackBANK3
   429  01D9                     __pcstackBANK3:	
   430  01D9                     ??_queueArray_init:	
   431  01D9                     ??_Digitron_Send_8bit:	
   432                           ; 0 bytes @ 0x0
   433                           
   434  01D9                     ??_delay_us:	
   435                           ; 0 bytes @ 0x0
   436                           
   437  01D9                     ??_initUART:	
   438                           ; 0 bytes @ 0x0
   439                           
   440  01D9                     ??_Init_Timer0:	
   441                           ; 0 bytes @ 0x0
   442                           
   443  01D9                     ??_Interrupt_Gross:	
   444                           ; 0 bytes @ 0x0
   445                           
   446  01D9                     ??_DelaySec:	
   447                           ; 0 bytes @ 0x0
   448                           
   449  01D9                     ??_CleanWifiRcv:	
   450                           ; 0 bytes @ 0x0
   451                           
   452  01D9                     ??_UART_1SendOneByte:	
   453                           ; 0 bytes @ 0x0
   454                           
   455  01D9                     ?_strchr:	
   456                           ; 0 bytes @ 0x0
   457                           
   458  01D9                     ?_strlen:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  01D9                     Digitron_Send_8bit@dat:	
   462                           ; 2 bytes @ 0x0
   463                           
   464  01D9                     UART_1SendOneByte@c:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  01D9                     CleanWifiRcv@i:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  01D9                     delay_us@usec:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  01D9                     Interrupt_Gross@mov:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  01D9                     strlen@s:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  01D9                     strchr@chr:	
   480                           ; 2 bytes @ 0x0
   481                           
   482                           
   483                           ; 2 bytes @ 0x0
   484  01D9                     	ds	1
   485  01DA                     ??_Uart_1SendStr:	
   486  01DA                     Digitron_Send_8bit@i:	
   487                           ; 0 bytes @ 0x1
   488                           
   489  01DA                     Uart_1SendStr@data_at:	
   490                           ; 1 bytes @ 0x1
   491                           
   492  01DA                     DelaySec@sec:	
   493                           ; 1 bytes @ 0x1
   494                           
   495  01DA                     delay_us@i:	
   496                           ; 1 bytes @ 0x1
   497                           
   498                           
   499                           ; 1 bytes @ 0x1
   500  01DA                     	ds	1
   501  01DB                     ??_strlen:	
   502  01DB                     ??_strchr:	
   503                           ; 0 bytes @ 0x2
   504                           
   505  01DB                     delay_us@j:	
   506                           ; 0 bytes @ 0x2
   507                           
   508  01DB                     strchr@ptr:	
   509                           ; 1 bytes @ 0x2
   510                           
   511                           
   512                           ; 1 bytes @ 0x2
   513  01DB                     	ds	1
   514  01DC                     ?_Digitron_Command:	
   515  01DC                     Digitron_Command@com:	
   516                           ; 0 bytes @ 0x3
   517                           
   518  01DC                     queueArray_init@Q:	
   519                           ; 1 bytes @ 0x3
   520                           
   521                           
   522                           ; 1 bytes @ 0x3
   523  01DC                     	ds	1
   524  01DD                     ??_Digitron_Command:	
   525  01DD                     Digitron_Command@device:	
   526                           ; 0 bytes @ 0x4
   527                           
   528  01DD                     queueArray_init@i:	
   529                           ; 1 bytes @ 0x4
   530                           
   531  01DD                     strlen@cp:	
   532                           ; 1 bytes @ 0x4
   533                           
   534                           
   535                           ; 2 bytes @ 0x4
   536  01DD                     	ds	1
   537  01DE                     ??_Digitron_Display:	
   538  01DE                     queueArray_init@j:	
   539                           ; 0 bytes @ 0x5
   540                           
   541                           
   542                           ; 1 bytes @ 0x5
   543  01DE                     	ds	1
   544  01DF                     ?_strncmp:	
   545  01DF                     strncmp@s2:	
   546                           ; 2 bytes @ 0x6
   547                           
   548                           
   549                           ; 1 bytes @ 0x6
   550  01DF                     	ds	1
   551  01E0                     strncmp@len:	
   552                           
   553                           ; 2 bytes @ 0x7
   554  01E0                     	ds	1
   555  01E1                     Digitron_Display@que:	
   556                           
   557                           ; 1 bytes @ 0x8
   558  01E1                     	ds	1
   559  01E2                     ??_strncmp:	
   560  01E2                     Digitron_Display@num:	
   561                           ; 0 bytes @ 0x9
   562                           
   563                           
   564                           ; 1 bytes @ 0x9
   565  01E2                     	ds	1
   566  01E3                     Digitron_Display@fro:	
   567                           
   568                           ; 1 bytes @ 0xA
   569  01E3                     	ds	1
   570  01E4                     Digitron_Display@j:	
   571  01E4                     strncmp@s1:	
   572                           ; 1 bytes @ 0xB
   573                           
   574                           
   575                           ; 1 bytes @ 0xB
   576  01E4                     	ds	1
   577  01E5                     ?_strstr:	
   578  01E5                     Digitron_Display@i:	
   579                           ; 1 bytes @ 0xC
   580                           
   581  01E5                     strstr@s2:	
   582                           ; 1 bytes @ 0xC
   583                           
   584                           
   585                           ; 1 bytes @ 0xC
   586  01E5                     	ds	1
   587  01E6                     ??_strstr:	
   588  01E6                     ??_Init_Digitrons:	
   589                           ; 0 bytes @ 0xD
   590                           
   591  01E6                     strstr@s1:	
   592                           ; 0 bytes @ 0xD
   593                           
   594                           
   595                           ; 1 bytes @ 0xD
   596  01E6                     	ds	1
   597  01E7                     ??_Match:	
   598  01E7                     Match@a:	
   599                           ; 0 bytes @ 0xE
   600                           
   601                           
   602                           ; 1 bytes @ 0xE
   603  01E7                     	ds	1
   604  01E8                     ?_Send_ATComm:	
   605  01E8                     Send_ATComm@ret:	
   606                           ; 1 bytes @ 0xF
   607                           
   608                           
   609                           ; 1 bytes @ 0xF
   610  01E8                     	ds	1
   611  01E9                     Send_ATComm@delay:	
   612                           
   613                           ; 1 bytes @ 0x10
   614  01E9                     	ds	1
   615  01EA                     Send_ATComm@wait:	
   616                           
   617                           ; 1 bytes @ 0x11
   618  01EA                     	ds	1
   619  01EB                     ??_Send_ATComm:	
   620  01EB                     Send_ATComm@comm:	
   621                           ; 0 bytes @ 0x12
   622                           
   623                           
   624                           ; 1 bytes @ 0x12
   625  01EB                     	ds	1
   626  01EC                     Send_ATComm@i:	
   627                           
   628                           ; 1 bytes @ 0x13
   629  01EC                     	ds	1
   630  01ED                     ??_main:	
   631                           
   632                           	psect	cstackBANK1
   633  00A0                     __pcstackBANK1:	
   634                           ; 0 bytes @ 0x14
   635                           
   636  00A0                     ?_pow:	
   637  00A0                     pow@x:	
   638                           ; 3 bytes @ 0x0
   639                           
   640                           
   641                           ; 3 bytes @ 0x0
   642  00A0                     	ds	3
   643  00A3                     pow@y:	
   644                           
   645                           ; 3 bytes @ 0x3
   646  00A3                     	ds	3
   647  00A6                     _pow$3688:	
   648                           
   649                           ; 3 bytes @ 0x6
   650  00A6                     	ds	3
   651  00A9                     pow@sign:	
   652                           
   653                           ; 1 bytes @ 0x9
   654  00A9                     	ds	1
   655  00AA                     pow@yi:	
   656                           
   657                           ; 4 bytes @ 0xA
   658  00AA                     	ds	4
   659  00AE                     _Calc_DistanceLevel$3685:	
   660                           
   661                           ; 3 bytes @ 0xE
   662  00AE                     	ds	3
   663  00B1                     _Calc_DistanceLevel$3686:	
   664                           
   665                           ; 3 bytes @ 0x11
   666  00B1                     	ds	3
   667  00B4                     _Calc_DistanceLevel$3687:	
   668                           
   669                           ; 3 bytes @ 0x14
   670  00B4                     	ds	3
   671  00B7                     Calc_DistanceLevel@t:	
   672                           
   673                           ; 2 bytes @ 0x17
   674  00B7                     	ds	2
   675  00B9                     Calc_DistanceLevel@level:	
   676                           
   677                           ; 1 bytes @ 0x19
   678  00B9                     	ds	1
   679  00BA                     Distance_Update@dat:	
   680                           
   681                           ; 2 bytes @ 0x1A
   682  00BA                     	ds	2
   683  00BC                     Distance_Update@mask:	
   684                           
   685                           ; 2 bytes @ 0x1C
   686  00BC                     	ds	2
   687  00BE                     Distance_Update@mask_2829:	
   688                           
   689                           ; 2 bytes @ 0x1E
   690  00BE                     	ds	2
   691  00C0                     Distance_Update@mask_2831:	
   692                           
   693                           ; 2 bytes @ 0x20
   694  00C0                     	ds	2
   695  00C2                     Distance_Update@dat_2828:	
   696                           
   697                           ; 2 bytes @ 0x22
   698  00C2                     	ds	2
   699  00C4                     Distance_Update@dat_2830:	
   700                           
   701                           ; 2 bytes @ 0x24
   702  00C4                     	ds	2
   703  00C6                     Distance_Update@level:	
   704                           
   705                           ; 1 bytes @ 0x26
   706  00C6                     	ds	1
   707  00C7                     ??_Pos_meet:	
   708                           
   709                           ; 0 bytes @ 0x27
   710  00C7                     	ds	3
   711  00CA                     Pos_meet@arr_rcv_lati:	
   712                           
   713                           ; 6 bytes @ 0x2A
   714  00CA                     	ds	6
   715  00D0                     Pos_meet@arr_rcv_longi:	
   716                           
   717                           ; 6 bytes @ 0x30
   718  00D0                     	ds	6
   719  00D6                     Pos_meet@pos:	
   720                           
   721                           ; 1 bytes @ 0x36
   722  00D6                     	ds	1
   723  00D7                     Pos_meet@i:	
   724                           
   725                           ; 1 bytes @ 0x37
   726  00D7                     	ds	1
   727  00D8                     Pos_meet@j:	
   728                           
   729                           ; 1 bytes @ 0x38
   730  00D8                     	ds	1
   731  00D9                     Pos_meet@i_2817:	
   732                           
   733                           ; 1 bytes @ 0x39
   734  00D9                     	ds	1
   735  00DA                     Pos_meet@j_2818:	
   736                           
   737                           ; 1 bytes @ 0x3A
   738  00DA                     	ds	1
   739  00DB                     ??_SerialService:	
   740                           
   741                           ; 0 bytes @ 0x3B
   742  00DB                     	ds	4
   743                           
   744                           	psect	cstackCOMMON
   745  0070                     __pcstackCOMMON:	
   746  0070                     ?_queueArray_init:	
   747  0070                     ?_Digitron_Display:	
   748                           ; 0 bytes @ 0x0
   749                           
   750  0070                     ?_Digitron_Send_8bit:	
   751                           ; 0 bytes @ 0x0
   752                           
   753  0070                     ?_queueArray_in:	
   754                           ; 0 bytes @ 0x0
   755                           
   756  0070                     ?_delay_us:	
   757                           ; 0 bytes @ 0x0
   758                           
   759  0070                     ?_initUART:	
   760                           ; 0 bytes @ 0x0
   761                           
   762  0070                     ?_Init_Timer0:	
   763                           ; 0 bytes @ 0x0
   764                           
   765  0070                     ?_Interrupt_Gross:	
   766                           ; 0 bytes @ 0x0
   767                           
   768  0070                     ?_DelaySec:	
   769                           ; 0 bytes @ 0x0
   770                           
   771  0070                     ?_CleanWifiRcv:	
   772                           ; 0 bytes @ 0x0
   773                           
   774  0070                     ?_Uart_1SendStr:	
   775                           ; 0 bytes @ 0x0
   776                           
   777  0070                     ?_Match:	
   778                           ; 0 bytes @ 0x0
   779                           
   780  0070                     ?_Pos_meet:	
   781                           ; 1 bit 
   782                           
   783  0070                     ?_Distance_Update:	
   784                           ; 0 bytes @ 0x0
   785                           
   786  0070                     ?_CleanGpsRcv:	
   787                           ; 0 bytes @ 0x0
   788                           
   789  0070                     ??_CleanGpsRcv:	
   790                           ; 0 bytes @ 0x0
   791                           
   792  0070                     ?_isdigit:	
   793                           ; 0 bytes @ 0x0
   794                           
   795  0070                     ??_isdigit:	
   796                           ; 1 bit 
   797                           
   798  0070                     ?_Register_SendData:	
   799                           ; 0 bytes @ 0x0
   800                           
   801  0070                     ?_Init_Digitrons:	
   802                           ; 0 bytes @ 0x0
   803                           
   804  0070                     ?_Digitron_Update:	
   805                           ; 0 bytes @ 0x0
   806                           
   807  0070                     ?_main:	
   808                           ; 0 bytes @ 0x0
   809                           
   810  0070                     ?_UART_1SendOneByte:	
   811                           ; 0 bytes @ 0x0
   812                           
   813  0070                     ?_SerialService:	
   814                           ; 0 bytes @ 0x0
   815                           
   816  0070                     ?___ftge:	
   817                           ; 0 bytes @ 0x0
   818                           
   819  0070                     ?i1_Digitron_Display:	
   820                           ; 1 bit 
   821                           
   822  0070                     ?i1_Digitron_Send_8bit:	
   823                           ; 0 bytes @ 0x0
   824                           
   825  0070                     ??i1_Digitron_Send_8bit:	
   826                           ; 0 bytes @ 0x0
   827                           
   828  0070                     ?i1_delay_us:	
   829                           ; 0 bytes @ 0x0
   830                           
   831  0070                     ??i1_delay_us:	
   832                           ; 0 bytes @ 0x0
   833                           
   834  0070                     ?_Calc_DistanceLevel:	
   835                           ; 0 bytes @ 0x0
   836                           
   837  0070                     ?___wmul:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ?___lwdiv:	
   841                           ; 2 bytes @ 0x0
   842                           
   843  0070                     ?___ftpack:	
   844                           ; 2 bytes @ 0x0
   845                           
   846  0070                     ?_frexp:	
   847                           ; 3 bytes @ 0x0
   848                           
   849  0070                     ?___ftneg:	
   850                           ; 3 bytes @ 0x0
   851                           
   852  0070                     ?___lmul:	
   853                           ; 3 bytes @ 0x0
   854                           
   855  0070                     CleanGpsRcv@i:	
   856                           ; 4 bytes @ 0x0
   857                           
   858  0070                     queueArray_in@buf:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0070                     _isdigit$3171:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0070                     i1Digitron_Send_8bit@dat:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  0070                     i1delay_us@usec:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0070                     Register_SendData@dat:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0070                     ___wmul@multiplier:	
   874                           ; 2 bytes @ 0x0
   875                           
   876  0070                     ___lwdiv@divisor:	
   877                           ; 2 bytes @ 0x0
   878                           
   879  0070                     ___ftneg@f1:	
   880                           ; 2 bytes @ 0x0
   881                           
   882  0070                     ___ftge@ff1:	
   883                           ; 3 bytes @ 0x0
   884                           
   885  0070                     frexp@value:	
   886                           ; 3 bytes @ 0x0
   887                           
   888  0070                     ___ftpack@arg:	
   889                           ; 3 bytes @ 0x0
   890                           
   891  0070                     ___lmul@multiplier:	
   892                           ; 3 bytes @ 0x0
   893                           
   894                           
   895                           ; 4 bytes @ 0x0
   896  0070                     	ds	1
   897  0071                     ??_queueArray_in:	
   898  0071                     isdigit@c:	
   899                           ; 0 bytes @ 0x1
   900                           
   901  0071                     i1Digitron_Send_8bit@i:	
   902                           ; 1 bytes @ 0x1
   903                           
   904  0071                     i1delay_us@i:	
   905                           ; 1 bytes @ 0x1
   906                           
   907                           
   908                           ; 1 bytes @ 0x1
   909  0071                     	ds	1
   910  0072                     Register_SendData@length:	
   911  0072                     i1delay_us@j:	
   912                           ; 1 bytes @ 0x2
   913                           
   914  0072                     ___wmul@multiplicand:	
   915                           ; 1 bytes @ 0x2
   916                           
   917  0072                     ___lwdiv@dividend:	
   918                           ; 2 bytes @ 0x2
   919                           
   920                           
   921                           ; 2 bytes @ 0x2
   922  0072                     	ds	1
   923  0073                     ??_Register_SendData:	
   924  0073                     ??___ftneg:	
   925                           ; 0 bytes @ 0x3
   926                           
   927  0073                     ?i1_Digitron_Command:	
   928                           ; 0 bytes @ 0x3
   929                           
   930  0073                     Register_SendData@i:	
   931                           ; 0 bytes @ 0x3
   932                           
   933  0073                     frexp@eptr:	
   934                           ; 1 bytes @ 0x3
   935                           
   936  0073                     ___ftpack@exp:	
   937                           ; 1 bytes @ 0x3
   938                           
   939  0073                     i1Digitron_Command@com:	
   940                           ; 1 bytes @ 0x3
   941                           
   942  0073                     ___ftge@ff2:	
   943                           ; 1 bytes @ 0x3
   944                           
   945                           
   946                           ; 3 bytes @ 0x3
   947  0073                     	ds	1
   948  0074                     ??_frexp:	
   949  0074                     ??___wmul:	
   950                           ; 0 bytes @ 0x4
   951                           
   952  0074                     ??___lwdiv:	
   953                           ; 0 bytes @ 0x4
   954                           
   955  0074                     ??i1_Digitron_Command:	
   956                           ; 0 bytes @ 0x4
   957                           
   958  0074                     ___ftpack@sign:	
   959                           ; 0 bytes @ 0x4
   960                           
   961  0074                     i1Digitron_Command@device:	
   962                           ; 1 bytes @ 0x4
   963                           
   964  0074                     ___wmul@product:	
   965                           ; 1 bytes @ 0x4
   966                           
   967  0074                     ___lwdiv@quotient:	
   968                           ; 2 bytes @ 0x4
   969                           
   970  0074                     ___lmul@multiplicand:	
   971                           ; 2 bytes @ 0x4
   972                           
   973                           
   974                           ; 4 bytes @ 0x4
   975  0074                     	ds	1
   976  0075                     ??___ftpack:	
   977  0075                     ??i1_Digitron_Display:	
   978                           ; 0 bytes @ 0x5
   979                           
   980                           
   981                           ; 0 bytes @ 0x5
   982  0075                     	ds	1
   983  0076                     ??___ftge:	
   984  0076                     ?_atoi:	
   985                           ; 0 bytes @ 0x6
   986                           
   987  0076                     queueArray_in@i:	
   988                           ; 2 bytes @ 0x6
   989                           
   990  0076                     ___lwdiv@counter:	
   991                           ; 1 bytes @ 0x6
   992                           
   993                           
   994                           ; 1 bytes @ 0x6
   995  0076                     	ds	1
   996  0077                     queueArray_in@Q:	
   997                           
   998                           ; 1 bytes @ 0x7
   999  0077                     	ds	1
  1000  0078                     ??_atoi:	
  1001  0078                     ??___lmul:	
  1002                           ; 0 bytes @ 0x8
  1003                           
  1004  0078                     ?___ftdiv:	
  1005                           ; 0 bytes @ 0x8
  1006                           
  1007  0078                     ?___awtoft:	
  1008                           ; 3 bytes @ 0x8
  1009                           
  1010  0078                     ?___lltoft:	
  1011                           ; 3 bytes @ 0x8
  1012                           
  1013  0078                     ?___fttol:	
  1014                           ; 3 bytes @ 0x8
  1015                           
  1016  0078                     i1Digitron_Display@que:	
  1017                           ; 4 bytes @ 0x8
  1018                           
  1019  0078                     ___awtoft@c:	
  1020                           ; 1 bytes @ 0x8
  1021                           
  1022  0078                     ___ftdiv@f2:	
  1023                           ; 2 bytes @ 0x8
  1024                           
  1025  0078                     ___fttol@f1:	
  1026                           ; 3 bytes @ 0x8
  1027                           
  1028  0078                     ___lmul@product:	
  1029                           ; 3 bytes @ 0x8
  1030                           
  1031  0078                     ___lltoft@c:	
  1032                           ; 4 bytes @ 0x8
  1033                           
  1034                           
  1035                           ; 4 bytes @ 0x8
  1036  0078                     	ds	1
  1037  0079                     i1Digitron_Display@num:	
  1038                           
  1039                           ; 1 bytes @ 0x9
  1040  0079                     	ds	1
  1041  007A                     atoi@sign:	
  1042  007A                     i1Digitron_Display@fro:	
  1043                           ; 1 bytes @ 0xA
  1044                           
  1045                           
  1046                           ; 1 bytes @ 0xA
  1047  007A                     	ds	1
  1048  007B                     ??___awtoft:	
  1049  007B                     ___awtoft@sign:	
  1050                           ; 0 bytes @ 0xB
  1051                           
  1052  007B                     i1Digitron_Display@j:	
  1053                           ; 1 bytes @ 0xB
  1054                           
  1055  007B                     atoi@a:	
  1056                           ; 1 bytes @ 0xB
  1057                           
  1058  007B                     ___ftdiv@f1:	
  1059                           ; 2 bytes @ 0xB
  1060                           
  1061                           
  1062                           ; 3 bytes @ 0xB
  1063  007B                     	ds	1
  1064  007C                     ??___altoft:	
  1065  007C                     ??___lltoft:	
  1066                           ; 0 bytes @ 0xC
  1067                           
  1068  007C                     ___altoft@exp:	
  1069                           ; 0 bytes @ 0xC
  1070                           
  1071  007C                     ___lltoft@exp:	
  1072                           ; 1 bytes @ 0xC
  1073                           
  1074  007C                     i1Digitron_Display@i:	
  1075                           ; 1 bytes @ 0xC
  1076                           
  1077                           
  1078                           ; 1 bytes @ 0xC
  1079  007C                     	ds	1
  1080  007D                     ??_Digitron_Update:	
  1081  007D                     atoi@s:	
  1082                           ; 0 bytes @ 0xD
  1083                           
  1084  007D                     ___altoft@sign:	
  1085                           ; 1 bytes @ 0xD
  1086                           
  1087                           
  1088                           ; 1 bytes @ 0xD
  1089  007D                     	ds	1
  1090  007E                     ??_Distance_Update:	
  1091  007E                     ??_pow:	
  1092                           ; 0 bytes @ 0xE
  1093                           
  1094  007E                     ??_exp:	
  1095                           ; 0 bytes @ 0xE
  1096                           
  1097  007E                     ??_log:	
  1098                           ; 0 bytes @ 0xE
  1099                           
  1100  007E                     ??_floor:	
  1101                           ; 0 bytes @ 0xE
  1102                           
  1103  007E                     ??_Calc_DistanceLevel:	
  1104                           ; 0 bytes @ 0xE
  1105                           
  1106  007E                     ??___ftsub:	
  1107                           ; 0 bytes @ 0xE
  1108                           
  1109                           
  1110                           	psect	cstackBANK0
  1111  0020                     __pcstackBANK0:	
  1112                           ; 0 bytes @ 0xE
  1113                           
  1114  0020                     ??___ftdiv:	
  1115  0020                     ??___fttol:	
  1116                           ; 0 bytes @ 0x0
  1117                           
  1118  0020                     ?___ftmul:	
  1119                           ; 0 bytes @ 0x0
  1120                           
  1121  0020                     ?_atol:	
  1122                           ; 3 bytes @ 0x0
  1123                           
  1124  0020                     ___ftmul@f1:	
  1125                           ; 4 bytes @ 0x0
  1126                           
  1127  0020                     Digitron_Update@order_num:	
  1128                           ; 3 bytes @ 0x0
  1129                           
  1130                           
  1131                           ; 4 bytes @ 0x0
  1132  0020                     	ds	3
  1133  0023                     ___ftdiv@cntr:	
  1134  0023                     ___fttol@sign1:	
  1135                           ; 1 bytes @ 0x3
  1136                           
  1137  0023                     ___ftmul@f2:	
  1138                           ; 1 bytes @ 0x3
  1139                           
  1140                           
  1141                           ; 3 bytes @ 0x3
  1142  0023                     	ds	1
  1143  0024                     ??_atol:	
  1144  0024                     Digitron_Update@rider:	
  1145                           ; 0 bytes @ 0x4
  1146                           
  1147  0024                     ___ftdiv@f3:	
  1148                           ; 1 bytes @ 0x4
  1149                           
  1150  0024                     ___fttol@lval:	
  1151                           ; 3 bytes @ 0x4
  1152                           
  1153                           
  1154                           ; 4 bytes @ 0x4
  1155  0024                     	ds	1
  1156  0025                     Digitron_Update@i:	
  1157                           
  1158                           ; 1 bytes @ 0x5
  1159  0025                     	ds	1
  1160  0026                     ??___ftmul:	
  1161                           
  1162                           ; 0 bytes @ 0x6
  1163  0026                     	ds	1
  1164  0027                     ___ftdiv@exp:	
  1165                           
  1166                           ; 1 bytes @ 0x7
  1167  0027                     	ds	1
  1168  0028                     atol@sign:	
  1169  0028                     ___ftdiv@sign:	
  1170                           ; 1 bytes @ 0x8
  1171                           
  1172  0028                     ___fttol@exp1:	
  1173                           ; 1 bytes @ 0x8
  1174                           
  1175                           
  1176                           ; 1 bytes @ 0x8
  1177  0028                     	ds	1
  1178  0029                     ?___altoft:	
  1179  0029                     ___ftmul@exp:	
  1180                           ; 3 bytes @ 0x9
  1181                           
  1182  0029                     atol@a:	
  1183                           ; 1 bytes @ 0x9
  1184                           
  1185  0029                     ___altoft@c:	
  1186                           ; 4 bytes @ 0x9
  1187                           
  1188                           
  1189                           ; 4 bytes @ 0x9
  1190  0029                     	ds	1
  1191  002A                     ___ftmul@f3_as_product:	
  1192                           
  1193                           ; 3 bytes @ 0xA
  1194  002A                     	ds	3
  1195  002D                     atol@s:	
  1196  002D                     ___ftmul@cntr:	
  1197                           ; 1 bytes @ 0xD
  1198                           
  1199                           
  1200                           ; 1 bytes @ 0xD
  1201  002D                     	ds	1
  1202  002E                     atol@c:	
  1203  002E                     ___ftmul@sign:	
  1204                           ; 1 bytes @ 0xE
  1205                           
  1206                           
  1207                           ; 1 bytes @ 0xE
  1208  002E                     	ds	1
  1209  002F                     ?___ftadd:	
  1210  002F                     ___ftadd@f1:	
  1211                           ; 3 bytes @ 0xF
  1212                           
  1213                           
  1214                           ; 3 bytes @ 0xF
  1215  002F                     	ds	3
  1216  0032                     ___ftadd@f2:	
  1217                           
  1218                           ; 3 bytes @ 0x12
  1219  0032                     	ds	3
  1220  0035                     ??___ftadd:	
  1221                           
  1222                           ; 0 bytes @ 0x15
  1223  0035                     	ds	3
  1224  0038                     ___ftadd@sign:	
  1225                           
  1226                           ; 1 bytes @ 0x18
  1227  0038                     	ds	1
  1228  0039                     ___ftadd@exp2:	
  1229                           
  1230                           ; 1 bytes @ 0x19
  1231  0039                     	ds	1
  1232  003A                     ___ftadd@exp1:	
  1233                           
  1234                           ; 1 bytes @ 0x1A
  1235  003A                     	ds	1
  1236  003B                     ?_floor:	
  1237  003B                     ?_ldexp:	
  1238                           ; 3 bytes @ 0x1B
  1239                           
  1240  003B                     ?___ftsub:	
  1241                           ; 3 bytes @ 0x1B
  1242                           
  1243  003B                     ___ftsub@f2:	
  1244                           ; 3 bytes @ 0x1B
  1245                           
  1246  003B                     floor@x:	
  1247                           ; 3 bytes @ 0x1B
  1248                           
  1249  003B                     ldexp@value:	
  1250                           ; 3 bytes @ 0x1B
  1251                           
  1252                           
  1253                           ; 3 bytes @ 0x1B
  1254  003B                     	ds	3
  1255  003E                     ldexp@newexp:	
  1256  003E                     ___ftsub@f1:	
  1257                           ; 2 bytes @ 0x1E
  1258                           
  1259  003E                     floor@i:	
  1260                           ; 3 bytes @ 0x1E
  1261                           
  1262                           
  1263                           ; 3 bytes @ 0x1E
  1264  003E                     	ds	2
  1265  0040                     ??_ldexp:	
  1266                           
  1267                           ; 0 bytes @ 0x20
  1268  0040                     	ds	1
  1269  0041                     floor@expon:	
  1270                           
  1271                           ; 2 bytes @ 0x21
  1272  0041                     	ds	1
  1273  0042                     _ldexp$3469:	
  1274                           
  1275                           ; 3 bytes @ 0x22
  1276  0042                     	ds	3
  1277  0045                     ?_eval_poly:	
  1278  0045                     eval_poly@x:	
  1279                           ; 3 bytes @ 0x25
  1280                           
  1281                           
  1282                           ; 3 bytes @ 0x25
  1283  0045                     	ds	3
  1284  0048                     eval_poly@d:	
  1285                           
  1286                           ; 1 bytes @ 0x28
  1287  0048                     	ds	1
  1288  0049                     eval_poly@n:	
  1289                           
  1290                           ; 2 bytes @ 0x29
  1291  0049                     	ds	2
  1292  004B                     ??_eval_poly:	
  1293                           
  1294                           ; 0 bytes @ 0x2B
  1295  004B                     	ds	2
  1296  004D                     eval_poly@res:	
  1297                           
  1298                           ; 3 bytes @ 0x2D
  1299  004D                     	ds	3
  1300  0050                     ?_log:	
  1301  0050                     log@x:	
  1302                           ; 3 bytes @ 0x30
  1303                           
  1304                           
  1305                           ; 3 bytes @ 0x30
  1306  0050                     	ds	3
  1307  0053                     log@exp:	
  1308                           
  1309                           ; 2 bytes @ 0x33
  1310  0053                     	ds	2
  1311  0055                     ?_exp:	
  1312  0055                     exp@x:	
  1313                           ; 3 bytes @ 0x35
  1314                           
  1315                           
  1316                           ; 3 bytes @ 0x35
  1317  0055                     	ds	3
  1318  0058                     _exp$3416:	
  1319                           
  1320                           ; 3 bytes @ 0x38
  1321  0058                     	ds	3
  1322  005B                     exp@exp:	
  1323                           
  1324                           ; 2 bytes @ 0x3B
  1325  005B                     	ds	2
  1326  005D                     exp@sign:	
  1327                           
  1328                           ; 1 bytes @ 0x3D
  1329  005D                     	ds	1
  1330  005E                     ?_sqrt:	
  1331  005E                     sqrt@y:	
  1332                           ; 3 bytes @ 0x3E
  1333                           
  1334                           
  1335                           ; 3 bytes @ 0x3E
  1336  005E                     	ds	3
  1337  0061                     ??_sqrt:	
  1338                           
  1339                           ; 0 bytes @ 0x41
  1340  0061                     	ds	3
  1341  0064                     sqrt@z:	
  1342                           
  1343                           ; 3 bytes @ 0x44
  1344  0064                     	ds	3
  1345  0067                     sqrt@i:	
  1346                           
  1347                           ; 1 bytes @ 0x47
  1348  0067                     	ds	1
  1349  0068                     sqrt@q:	
  1350                           
  1351                           ; 3 bytes @ 0x48
  1352  0068                     	ds	3
  1353  006B                     sqrt@x:	
  1354                           
  1355                           ; 3 bytes @ 0x4B
  1356  006B                     	ds	3
  1357  006E                     SerialService@tmp:	
  1358                           
  1359                           ; 1 bytes @ 0x4E
  1360  006E                     	ds	1
  1361                           
  1362                           	psect	maintext
  1363  06B7                     __pmaintext:	
  1364 ;;Data sizes: Strings 131, constant 67, data 1, bss 138, persistent 0 stack 0
  1365 ;;Auto spaces:   Size  Autos    Used
  1366 ;; COMMON          14     14      14
  1367 ;; BANK0           80     79      80
  1368 ;; BANK1           80     63      78
  1369 ;; BANK3           96     20      93
  1370 ;; BANK2           96      0      50
  1371 ;;
  1372 ;; Pointer list with targets:
  1373 ;; i1Digitron_Display@que	PTR struct . size(1) Largest target is 14
  1374 ;;		 -> digitron3(BANK3[14]), digitron2(BANK3[14]), digitron1(BANK3[14]), 
  1375 ;;
  1376 ;; ?_frexp	PTR struct . size(1) Largest target is 0
  1377 ;;
  1378 ;; ?_ldexp	PTR struct . size(1) Largest target is 0
  1379 ;;
  1380 ;; ?_eval_poly	PTR struct . size(1) Largest target is 0
  1381 ;;
  1382 ;; ?_floor	PTR struct . size(1) Largest target is 0
  1383 ;;
  1384 ;; ?___awtoft	float  size(1) Largest target is 0
  1385 ;;
  1386 ;; ?___ftpack	float  size(1) Largest target is 0
  1387 ;;
  1388 ;; ?_strchr	PTR unsigned char  size(1) Largest target is 50
  1389 ;;		 -> NULL(NULL[0]), rcv_wifi(BANK2[50]), 
  1390 ;;
  1391 ;; ?_strncmp	int  size(1) Largest target is 10
  1392 ;;		 -> Analyze_GpsData@lo(COMMON[10]), Analyze_GpsData@la(COMMON[10]), 
  1393 ;;
  1394 ;; ?___ftsub	float  size(1) Largest target is 0
  1395 ;;
  1396 ;; ?_exp	float  size(1) Largest target is 0
  1397 ;;
  1398 ;; ?_log	float  size(1) Largest target is 0
  1399 ;;
  1400 ;; ?___lltoft	float  size(1) Largest target is 0
  1401 ;;
  1402 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1403 ;;
  1404 ;; ?___ftmul	float  size(1) Largest target is 0
  1405 ;;
  1406 ;; ?___ftneg	float  size(1) Largest target is 0
  1407 ;;
  1408 ;; ?___ftdiv	float  size(1) Largest target is 0
  1409 ;;
  1410 ;; ?___lmul	unsigned long  size(1) Largest target is 0
  1411 ;;
  1412 ;; ?___fttol	long  size(1) Largest target is 0
  1413 ;;
  1414 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1415 ;;
  1416 ;; ?___altoft	float  size(1) Largest target is 0
  1417 ;;
  1418 ;; ?___ftadd	float  size(1) Largest target is 0
  1419 ;;
  1420 ;; ?_sqrt	float  size(1) Largest target is 0
  1421 ;;
  1422 ;; ?_pow	float  size(1) Largest target is 0
  1423 ;;
  1424 ;; ?_atol	long  size(1) Largest target is 0
  1425 ;;
  1426 ;; ?_strstr	PTR unsigned char  size(1) Largest target is 50
  1427 ;;		 -> NULL(NULL[0]), rcv_wifi(BANK2[50]), 
  1428 ;;
  1429 ;; ?_atoi	int  size(1) Largest target is 0
  1430 ;;
  1431 ;; ?_strlen	unsigned int  size(2) Largest target is 50
  1432 ;;		 -> Analyze_GpsData@info(BANK0[50]), rcv_wifi(BANK2[50]), STR_17(CODE[3]), STR_15(CODE[3]), 
  1433 ;;		 -> STR_12(CODE[3]), STR_10(CODE[3]), STR_8(CODE[3]), STR_6(CODE[3]), 
  1434 ;;		 -> STR_4(CODE[3]), STR_2(CODE[3]), 
  1435 ;;
  1436 ;; eval_poly@d	PTR const  size(1) Largest target is 30
  1437 ;;		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 
  1438 ;;
  1439 ;; frexp@eptr	PTR int  size(1) Largest target is 2
  1440 ;;		 -> log@exp(BANK0[2]), floor@expon(BANK0[2]), 
  1441 ;;
  1442 ;; strncmp@s2	PTR const unsigned char  size(1) Largest target is 3
  1443 ;;		 -> STR_17(CODE[3]), STR_15(CODE[3]), STR_12(CODE[3]), STR_10(CODE[3]), 
  1444 ;;		 -> STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 
  1445 ;;
  1446 ;; strncmp@s1	PTR const unsigned char  size(1) Largest target is 50
  1447 ;;		 -> NULL(NULL[0]), rcv_wifi(BANK2[50]), 
  1448 ;;
  1449 ;; strchr@ptr	PTR const unsigned char  size(1) Largest target is 50
  1450 ;;		 -> NULL(NULL[0]), rcv_wifi(BANK2[50]), 
  1451 ;;
  1452 ;; sp__strchr	PTR unsigned char  size(1) Largest target is 50
  1453 ;;		 -> NULL(NULL[0]), rcv_wifi(BANK2[50]), 
  1454 ;;
  1455 ;; strstr@s2	PTR const unsigned char  size(1) Largest target is 3
  1456 ;;		 -> STR_17(CODE[3]), STR_15(CODE[3]), STR_12(CODE[3]), STR_10(CODE[3]), 
  1457 ;;		 -> STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 
  1458 ;;
  1459 ;; strstr@s1	PTR const unsigned char  size(1) Largest target is 50
  1460 ;;		 -> NULL(NULL[0]), rcv_wifi(BANK2[50]), 
  1461 ;;
  1462 ;; strlen@s	PTR const unsigned char  size(2) Largest target is 50
  1463 ;;		 -> Analyze_GpsData@info(BANK0[50]), rcv_wifi(BANK2[50]), STR_17(CODE[3]), STR_15(CODE[3]), 
  1464 ;;		 -> STR_12(CODE[3]), STR_10(CODE[3]), STR_8(CODE[3]), STR_6(CODE[3]), 
  1465 ;;		 -> STR_4(CODE[3]), STR_2(CODE[3]), 
  1466 ;;
  1467 ;; strlen@cp	PTR const unsigned char  size(2) Largest target is 50
  1468 ;;		 -> Analyze_GpsData@info(BANK0[50]), rcv_wifi(BANK2[50]), STR_17(CODE[3]), STR_15(CODE[3]), 
  1469 ;;		 -> STR_12(CODE[3]), STR_10(CODE[3]), STR_8(CODE[3]), STR_6(CODE[3]), 
  1470 ;;		 -> STR_4(CODE[3]), STR_2(CODE[3]), 
  1471 ;;
  1472 ;; atol@s	PTR const unsigned char  size(1) Largest target is 6
  1473 ;;		 -> Pos_meet@arr_rcv_longi(BANK1[6]), Pos_meet@arr_rcv_lati(BANK1[6]), 
  1474 ;;
  1475 ;; atoi@s	PTR const unsigned char  size(1) Largest target is 3
  1476 ;;		 -> arr_rcv_len(BANK3[3]), Get_GpsDataLen@len_arr(COMMON[3]), 
  1477 ;;
  1478 ;; queueArray_in@buf	PTR unsigned char  size(1) Largest target is 4
  1479 ;;		 -> Digitron_Update@order_num(BANK0[4]), 
  1480 ;;
  1481 ;; queueArray_in@Q	PTR struct . size(1) Largest target is 14
  1482 ;;		 -> digitron3(BANK3[14]), digitron2(BANK3[14]), digitron1(BANK3[14]), 
  1483 ;;
  1484 ;; queueArray_init@Q	PTR struct . size(1) Largest target is 14
  1485 ;;		 -> digitron3(BANK3[14]), digitron2(BANK3[14]), digitron1(BANK3[14]), 
  1486 ;;
  1487 ;; sp__strstr	PTR unsigned char  size(1) Largest target is 50
  1488 ;;		 -> NULL(NULL[0]), rcv_wifi(BANK2[50]), 
  1489 ;;
  1490 ;; Match@a	PTR const unsigned char  size(1) Largest target is 3
  1491 ;;		 -> STR_17(CODE[3]), STR_15(CODE[3]), STR_12(CODE[3]), STR_10(CODE[3]), 
  1492 ;;		 -> STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 
  1493 ;;
  1494 ;; sp__mid	PTR unsigned char  size(1) Largest target is 50
  1495 ;;		 -> Analyze_GpsData@lo(COMMON[10]), Analyze_GpsData@la(COMMON[10]), Analyze_GpsData@info(BANK0[50]), Get_GpsDataLen@
      +len_arr(COMMON[3]), 
  1496 ;;		 -> NULL(NULL[0]), 
  1497 ;;
  1498 ;; Send_ATComm@ret	PTR const unsigned char  size(1) Largest target is 3
  1499 ;;		 -> STR_17(CODE[3]), STR_15(CODE[3]), STR_12(CODE[3]), STR_10(CODE[3]), 
  1500 ;;		 -> STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 
  1501 ;;
  1502 ;; Send_ATComm@comm	PTR const unsigned char  size(1) Largest target is 30
  1503 ;;		 -> STR_16(CODE[16]), STR_14(CODE[22]), STR_11(CODE[30]), STR_9(CODE[14]), 
  1504 ;;		 -> STR_7(CODE[9]), STR_5(CODE[14]), STR_3(CODE[7]), STR_1(CODE[5]), 
  1505 ;;
  1506 ;; Uart_1SendStr@data_at	PTR const unsigned char  size(1) Largest target is 30
  1507 ;;		 -> STR_16(CODE[16]), STR_14(CODE[22]), STR_13(CODE[11]), STR_11(CODE[30]), 
  1508 ;;		 -> STR_9(CODE[14]), STR_7(CODE[9]), STR_5(CODE[14]), STR_3(CODE[7]), 
  1509 ;;		 -> STR_1(CODE[5]), 
  1510 ;;
  1511 ;; Digitron_Display@que	PTR struct . size(1) Largest target is 14
  1512 ;;		 -> digitron3(BANK3[14]), digitron2(BANK3[14]), digitron1(BANK3[14]), 
  1513 ;;
  1514 ;;
  1515 ;; Critical Paths under _main in COMMON
  1516 ;;
  1517 ;;   None.
  1518 ;;
  1519 ;; Critical Paths under _SerialService in COMMON
  1520 ;;
  1521 ;;   _Pos_meet->_atoi
  1522 ;;   _Pos_meet->_Digitron_Update
  1523 ;;   _Calc_DistanceLevel->___altoft
  1524 ;;   _exp->___ftdiv
  1525 ;;   _sqrt->___altoft
  1526 ;;   _Digitron_Update->i1_Digitron_Display
  1527 ;;   i1_Digitron_Display->i1_Digitron_Command
  1528 ;;   _floor->___altoft
  1529 ;;   i1_Digitron_Command->i1_delay_us
  1530 ;;   ___lltoft->___ftpack
  1531 ;;   ___altoft->___fttol
  1532 ;;   ___awtoft->___ftpack
  1533 ;;   ___ftmul->___awtoft
  1534 ;;   ___ftdiv->___ftpack
  1535 ;;   ___ftadd->___altoft
  1536 ;;   _atol->___lmul
  1537 ;;   _atoi->___wmul
  1538 ;;   ___fttol->___ftpack
  1539 ;;
  1540 ;; Critical Paths under _main in BANK0
  1541 ;;
  1542 ;;   None.
  1543 ;;
  1544 ;; Critical Paths under _SerialService in BANK0
  1545 ;;
  1546 ;;   _Calc_DistanceLevel->_sqrt
  1547 ;;   _pow->_sqrt
  1548 ;;   _exp->_log
  1549 ;;   _log->_eval_poly
  1550 ;;   _sqrt->_exp
  1551 ;;   _eval_poly->_ldexp
  1552 ;;   _floor->___ftadd
  1553 ;;   ___ftsub->___ftadd
  1554 ;;   _ldexp->___ftadd
  1555 ;;   ___altoft->___fttol
  1556 ;;   ___ftadd->___ftmul
  1557 ;;
  1558 ;; Critical Paths under _main in BANK1
  1559 ;;
  1560 ;;   None.
  1561 ;;
  1562 ;; Critical Paths under _SerialService in BANK1
  1563 ;;
  1564 ;;   _SerialService->_Pos_meet
  1565 ;;   _Pos_meet->_Distance_Update
  1566 ;;   _Distance_Update->_Calc_DistanceLevel
  1567 ;;   _Calc_DistanceLevel->_pow
  1568 ;;
  1569 ;; Critical Paths under _main in BANK3
  1570 ;;
  1571 ;;   _main->_Send_ATComm
  1572 ;;   _Send_ATComm->_Match
  1573 ;;   _Init_Digitrons->_Digitron_Display
  1574 ;;   _Match->_strstr
  1575 ;;   _Digitron_Display->_Digitron_Command
  1576 ;;   _strstr->_strncmp
  1577 ;;   _Uart_1SendStr->_UART_1SendOneByte
  1578 ;;   _Digitron_Command->_delay_us
  1579 ;;   _strncmp->_strlen
  1580 ;;
  1581 ;; Critical Paths under _SerialService in BANK3
  1582 ;;
  1583 ;;   None.
  1584 ;;
  1585 ;; Critical Paths under _main in BANK2
  1586 ;;
  1587 ;;   None.
  1588 ;;
  1589 ;; Critical Paths under _SerialService in BANK2
  1590 ;;
  1591 ;;   None.
  1592 ;;
  1593 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1594 ;;
  1595 ;;
  1596 ;;Call Graph Tables:
  1597 ;;
  1598 ;; ---------------------------------------------------------------------------------
  1599 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1600 ;; ---------------------------------------------------------------------------------
  1601 ;; (0) _main                                                 0     0      0    1863
  1602 ;;                     _Init_Digitrons
  1603 ;;                           _initUART
  1604 ;;                        _Init_Timer0
  1605 ;;                    _Interrupt_Gross
  1606 ;;                           _DelaySec
  1607 ;;                       _CleanWifiRcv
  1608 ;;                        _Send_ATComm
  1609 ;;                      _Uart_1SendStr
  1610 ;; ---------------------------------------------------------------------------------
  1611 ;; (1) _Send_ATComm                                          5     2      3     824
  1612 ;;                                             15 BANK3      5     2      3
  1613 ;;                      _Uart_1SendStr
  1614 ;;                           _DelaySec
  1615 ;;                              _Match
  1616 ;;                       _CleanWifiRcv
  1617 ;; ---------------------------------------------------------------------------------
  1618 ;; (1) _Init_Digitrons                                       0     0      0     859
  1619 ;;                    _queueArray_init
  1620 ;;                   _Digitron_Display
  1621 ;; ---------------------------------------------------------------------------------
  1622 ;; (2) _Match                                                1     1      0     510
  1623 ;;                                             14 BANK3      1     1      0
  1624 ;;                             _strstr
  1625 ;; ---------------------------------------------------------------------------------
  1626 ;; (2) _Digitron_Display                                     8     8      0     657
  1627 ;;                                              5 BANK3      8     8      0
  1628 ;;                   _Digitron_Command
  1629 ;;                 _Digitron_Send_8bit
  1630 ;; ---------------------------------------------------------------------------------
  1631 ;; (3) _strstr                                               2     1      1     488
  1632 ;;                                             12 BANK3      2     1      1
  1633 ;;                             _strlen
  1634 ;;                            _strncmp
  1635 ;;                             _strchr
  1636 ;; ---------------------------------------------------------------------------------
  1637 ;; (1) _Uart_1SendStr                                        1     1      0      67
  1638 ;;                                              1 BANK3      1     1      0
  1639 ;;                  _UART_1SendOneByte
  1640 ;; ---------------------------------------------------------------------------------
  1641 ;; (3) _Digitron_Command                                     2     1      1     227
  1642 ;;                                              3 BANK3      2     1      1
  1643 ;;                           _delay_us
  1644 ;;                 _Digitron_Send_8bit
  1645 ;; ---------------------------------------------------------------------------------
  1646 ;; (4) _strchr                                               3     1      2      88
  1647 ;;                                              0 BANK3      3     1      2
  1648 ;; ---------------------------------------------------------------------------------
  1649 ;; (4) _strncmp                                              6     3      3     134
  1650 ;;                                              6 BANK3      6     3      3
  1651 ;;                             _strlen (ARG)
  1652 ;; ---------------------------------------------------------------------------------
  1653 ;; (4) _strlen                                               6     4      2      89
  1654 ;;                                              0 BANK3      6     4      2
  1655 ;; ---------------------------------------------------------------------------------
  1656 ;; (2) _UART_1SendOneByte                                    1     1      0      22
  1657 ;;                                              0 BANK3      1     1      0
  1658 ;; ---------------------------------------------------------------------------------
  1659 ;; (2) _CleanWifiRcv                                         1     1      0      69
  1660 ;;                                              0 BANK3      1     1      0
  1661 ;; ---------------------------------------------------------------------------------
  1662 ;; (2) _DelaySec                                             2     2      0      22
  1663 ;;                                              0 BANK3      2     2      0
  1664 ;; ---------------------------------------------------------------------------------
  1665 ;; (1) _Interrupt_Gross                                      1     1      0      22
  1666 ;;                                              0 BANK3      1     1      0
  1667 ;; ---------------------------------------------------------------------------------
  1668 ;; (1) _Init_Timer0                                          0     0      0       0
  1669 ;; ---------------------------------------------------------------------------------
  1670 ;; (1) _initUART                                             0     0      0       0
  1671 ;; ---------------------------------------------------------------------------------
  1672 ;; (4) _delay_us                                             3     3      0     114
  1673 ;;                                              0 BANK3      3     3      0
  1674 ;; ---------------------------------------------------------------------------------
  1675 ;; (3) _Digitron_Send_8bit                                   2     2      0      69
  1676 ;;                                              0 BANK3      2     2      0
  1677 ;; ---------------------------------------------------------------------------------
  1678 ;; (2) _queueArray_init                                      6     6      0     202
  1679 ;;                                              0 BANK3      6     6      0
  1680 ;; ---------------------------------------------------------------------------------
  1681 ;; Estimated maximum stack depth 4
  1682 ;; ---------------------------------------------------------------------------------
  1683 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1684 ;; ---------------------------------------------------------------------------------
  1685 ;; (5) _SerialService                                        5     5      0   22365
  1686 ;;                                             78 BANK0      1     1      0
  1687 ;;                                             59 BANK1      4     4      0
  1688 ;;                           _Pos_meet
  1689 ;; ---------------------------------------------------------------------------------
  1690 ;; (6) _Pos_meet                                            20    20      0   22188
  1691 ;;                                             39 BANK1     20    20      0
  1692 ;;                               _atoi
  1693 ;;                               _atol
  1694 ;;                    _Distance_Update
  1695 ;;                    _Digitron_Update
  1696 ;;                        _CleanGpsRcv
  1697 ;; ---------------------------------------------------------------------------------
  1698 ;; (7) _Distance_Update                                     13    13      0   17808
  1699 ;;                                             26 BANK1     13    13      0
  1700 ;;                 _Calc_DistanceLevel
  1701 ;;                  _Register_SendData
  1702 ;; ---------------------------------------------------------------------------------
  1703 ;; (8) _Calc_DistanceLevel                                  12    12      0   17525
  1704 ;;                                             14 BANK1     12    12      0
  1705 ;;                           ___altoft
  1706 ;;                                _pow
  1707 ;;                            ___ftadd
  1708 ;;                               _sqrt
  1709 ;;                            ___fttol
  1710 ;;                            ___lwdiv
  1711 ;; ---------------------------------------------------------------------------------
  1712 ;; (9) _pow                                                 14     8      6   13461
  1713 ;;                                              0 BANK1     14     8      6
  1714 ;;                             ___ftge
  1715 ;;                            ___fttol
  1716 ;;                           ___lltoft
  1717 ;;                            ___ftneg
  1718 ;;                                _log
  1719 ;;                            ___ftmul
  1720 ;;                                _exp
  1721 ;;                               _sqrt (ARG)
  1722 ;; ---------------------------------------------------------------------------------
  1723 ;; (10) _exp                                                 9     6      3    7707
  1724 ;;                                             53 BANK0      9     6      3
  1725 ;;                             ___ftge
  1726 ;;                            ___ftneg
  1727 ;;                            ___ftmul
  1728 ;;                              _floor
  1729 ;;                            ___fttol
  1730 ;;                           ___awtoft
  1731 ;;                            ___ftsub
  1732 ;;                          _eval_poly
  1733 ;;                              _ldexp
  1734 ;;                            ___ftdiv
  1735 ;;                                _log (ARG)
  1736 ;; ---------------------------------------------------------------------------------
  1737 ;; (10) _log                                                 5     2      3    4171
  1738 ;;                                             48 BANK0      5     2      3
  1739 ;;                             ___ftge
  1740 ;;                              _frexp
  1741 ;;                            ___ftmul
  1742 ;;                            ___ftadd
  1743 ;;                          _eval_poly
  1744 ;;                           ___awtoft
  1745 ;; ---------------------------------------------------------------------------------
  1746 ;; (9) _sqrt                                                19    16      3    2139
  1747 ;;                                             62 BANK0     16    13      3
  1748 ;;                             ___ftge
  1749 ;;                            ___ftmul
  1750 ;;                            ___ftsub
  1751 ;;                            ___fttol (ARG)
  1752 ;;                           ___lltoft (ARG)
  1753 ;;                            ___ftneg (ARG)
  1754 ;;                                _log (ARG)
  1755 ;;                                _exp (ARG)
  1756 ;;                           ___altoft (ARG)
  1757 ;; ---------------------------------------------------------------------------------
  1758 ;; (7) _Digitron_Update                                      7     7      0    2757
  1759 ;;                                             13 COMMON     1     1      0
  1760 ;;                                              0 BANK0      6     6      0
  1761 ;;                      _queueArray_in
  1762 ;;                 i1_Digitron_Display
  1763 ;; ---------------------------------------------------------------------------------
  1764 ;; (8) i1_Digitron_Display                                   8     8      0    2155
  1765 ;;                                              5 COMMON     8     8      0
  1766 ;;                 i1_Digitron_Command
  1767 ;;               i1_Digitron_Send_8bit
  1768 ;; ---------------------------------------------------------------------------------
  1769 ;; (11) _eval_poly                                          11     5      6    1762
  1770 ;;                                             37 BANK0     11     5      6
  1771 ;;                            ___ftmul
  1772 ;;                            ___ftadd
  1773 ;;                              _ldexp (ARG)
  1774 ;; ---------------------------------------------------------------------------------
  1775 ;; (11) _floor                                               8     5      3    2259
  1776 ;;                                             27 BANK0      8     5      3
  1777 ;;                              _frexp
  1778 ;;                             ___ftge
  1779 ;;                            ___fttol
  1780 ;;                           ___altoft
  1781 ;;                            ___ftadd
  1782 ;; ---------------------------------------------------------------------------------
  1783 ;; (10) ___ftsub                                             6     0      6    1094
  1784 ;;                                             27 BANK0      6     0      6
  1785 ;;                            ___ftadd
  1786 ;;                           ___awtoft (ARG)
  1787 ;; ---------------------------------------------------------------------------------
  1788 ;; (9) i1_Digitron_Command                                   2     1      1     744
  1789 ;;                                              3 COMMON     2     1      1
  1790 ;;                         i1_delay_us
  1791 ;;               i1_Digitron_Send_8bit
  1792 ;; ---------------------------------------------------------------------------------
  1793 ;; (11) _ldexp                                              10     5      5     453
  1794 ;;                                             27 BANK0     10     5      5
  1795 ;;                             ___ftge
  1796 ;;                            ___ftneg
  1797 ;;                            ___ftmul (ARG)
  1798 ;;                            ___ftadd (ARG)
  1799 ;; ---------------------------------------------------------------------------------
  1800 ;; (10) ___lltoft                                            5     1      4     278
  1801 ;;                                              8 COMMON     5     1      4
  1802 ;;                           ___ftpack
  1803 ;; ---------------------------------------------------------------------------------
  1804 ;; (12) ___altoft                                            6     2      4     347
  1805 ;;                                             12 COMMON     2     2      0
  1806 ;;                                              9 BANK0      4     0      4
  1807 ;;                           ___ftpack
  1808 ;;                            ___fttol (ARG)
  1809 ;; ---------------------------------------------------------------------------------
  1810 ;; (11) ___awtoft                                            4     1      3     300
  1811 ;;                                              8 COMMON     4     1      3
  1812 ;;                           ___ftpack
  1813 ;; ---------------------------------------------------------------------------------
  1814 ;; (10) ___ftmul                                            15     9      6     535
  1815 ;;                                              0 BANK0     15     9      6
  1816 ;;                           ___ftpack
  1817 ;;                              _frexp (ARG)
  1818 ;;                           ___awtoft (ARG)
  1819 ;; ---------------------------------------------------------------------------------
  1820 ;; (11) ___ftdiv                                            15     9      6     489
  1821 ;;                                              8 COMMON     6     0      6
  1822 ;;                                              0 BANK0      9     9      0
  1823 ;;                           ___ftpack
  1824 ;; ---------------------------------------------------------------------------------
  1825 ;; (11) ___ftadd                                            12     6      6    1049
  1826 ;;                                             15 BANK0     12     6      6
  1827 ;;                           ___ftpack
  1828 ;;                           ___altoft (ARG)
  1829 ;;                            ___fttol (ARG)
  1830 ;;                            ___ftmul (ARG)
  1831 ;;                              _frexp (ARG)
  1832 ;;                           ___awtoft (ARG)
  1833 ;; ---------------------------------------------------------------------------------
  1834 ;; (7) _atol                                                15    11      4     480
  1835 ;;                                              0 BANK0     15    11      4
  1836 ;;                             ___lmul
  1837 ;;                            _isdigit
  1838 ;; ---------------------------------------------------------------------------------
  1839 ;; (7) _atoi                                                 8     6      2     388
  1840 ;;                                              6 COMMON     8     6      2
  1841 ;;                             ___wmul
  1842 ;;                            _isdigit
  1843 ;; ---------------------------------------------------------------------------------
  1844 ;; (10) i1_delay_us                                          3     3      0     373
  1845 ;;                                              0 COMMON     3     3      0
  1846 ;; ---------------------------------------------------------------------------------
  1847 ;; (9) i1_Digitron_Send_8bit                                 2     2      0     225
  1848 ;;                                              0 COMMON     2     2      0
  1849 ;; ---------------------------------------------------------------------------------
  1850 ;; (12) _frexp                                               6     2      4     224
  1851 ;;                                              0 COMMON     6     2      4
  1852 ;; ---------------------------------------------------------------------------------
  1853 ;; (10) ___ftge                                              6     0      6     136
  1854 ;;                                              0 COMMON     6     0      6
  1855 ;; ---------------------------------------------------------------------------------
  1856 ;; (12) ___ftneg                                             3     0      3      45
  1857 ;;                                              0 COMMON     3     0      3
  1858 ;; ---------------------------------------------------------------------------------
  1859 ;; (9) ___fttol                                             13     9      4     252
  1860 ;;                                              8 COMMON     4     0      4
  1861 ;;                                              0 BANK0      9     9      0
  1862 ;;                           ___ftpack (ARG)
  1863 ;; ---------------------------------------------------------------------------------
  1864 ;; (8) ___lmul                                              12     4      8      92
  1865 ;;                                              0 COMMON    12     4      8
  1866 ;; ---------------------------------------------------------------------------------
  1867 ;; (12) ___ftpack                                            8     3      5     209
  1868 ;;                                              0 COMMON     8     3      5
  1869 ;; ---------------------------------------------------------------------------------
  1870 ;; (9) ___lwdiv                                              7     3      4     162
  1871 ;;                                              0 COMMON     7     3      4
  1872 ;; ---------------------------------------------------------------------------------
  1873 ;; (8) ___wmul                                               6     2      4      92
  1874 ;;                                              0 COMMON     6     2      4
  1875 ;; ---------------------------------------------------------------------------------
  1876 ;; (8) _isdigit                                              2     2      0      68
  1877 ;;                                              0 COMMON     2     2      0
  1878 ;; ---------------------------------------------------------------------------------
  1879 ;; (7) _CleanGpsRcv                                          1     1      0     273
  1880 ;;                                              0 COMMON     1     1      0
  1881 ;; ---------------------------------------------------------------------------------
  1882 ;; (8) _queueArray_in                                        8     7      1     398
  1883 ;;                                              0 COMMON     8     7      1
  1884 ;; ---------------------------------------------------------------------------------
  1885 ;; (8) _Register_SendData                                    4     1      3      69
  1886 ;;                                              0 COMMON     4     1      3
  1887 ;; ---------------------------------------------------------------------------------
  1888 ;; Estimated maximum stack depth 12
  1889 ;; ---------------------------------------------------------------------------------
  1890 ;; Call Graph Graphs:
  1891 ;; _main (ROOT)
  1892 ;;   _Init_Digitrons
  1893 ;;     _queueArray_init
  1894 ;;     _Digitron_Display
  1895 ;;       _Digitron_Command
  1896 ;;         _delay_us
  1897 ;;         _Digitron_Send_8bit
  1898 ;;       _Digitron_Send_8bit
  1899 ;;   _initUART
  1900 ;;   _Init_Timer0
  1901 ;;   _Interrupt_Gross
  1902 ;;   _DelaySec
  1903 ;;   _CleanWifiRcv
  1904 ;;   _Send_ATComm
  1905 ;;     _Uart_1SendStr
  1906 ;;       _UART_1SendOneByte
  1907 ;;     _DelaySec
  1908 ;;     _Match
  1909 ;;       _strstr
  1910 ;;         _strlen
  1911 ;;         _strncmp
  1912 ;;           _strlen (ARG)
  1913 ;;         _strchr
  1914 ;;     _CleanWifiRcv
  1915 ;;   _Uart_1SendStr
  1916 ;;     _UART_1SendOneByte
  1917 ;;
  1918 ;; _SerialService (ROOT)
  1919 ;;   _Pos_meet
  1920 ;;     _atoi
  1921 ;;       ___wmul
  1922 ;;       _isdigit
  1923 ;;     _atol
  1924 ;;       ___lmul
  1925 ;;       _isdigit
  1926 ;;     _Distance_Update
  1927 ;;       _Calc_DistanceLevel
  1928 ;;         ___altoft
  1929 ;;           ___ftpack
  1930 ;;           ___fttol (ARG)
  1931 ;;             ___ftpack (ARG)
  1932 ;;         _pow
  1933 ;;           ___ftge
  1934 ;;           ___fttol
  1935 ;;             ___ftpack (ARG)
  1936 ;;           ___lltoft
  1937 ;;             ___ftpack
  1938 ;;           ___ftneg
  1939 ;;           _log
  1940 ;;             ___ftge
  1941 ;;             _frexp
  1942 ;;             ___ftmul
  1943 ;;               ___ftpack
  1944 ;;               _frexp (ARG)
  1945 ;;               ___awtoft (ARG)
  1946 ;;                 ___ftpack
  1947 ;;             ___ftadd
  1948 ;;               ___ftpack
  1949 ;;               ___altoft (ARG)
  1950 ;;                 ___ftpack
  1951 ;;                 ___fttol (ARG)
  1952 ;;                   ___ftpack (ARG)
  1953 ;;               ___fttol (ARG)
  1954 ;;                 ___ftpack (ARG)
  1955 ;;               ___ftmul (ARG)
  1956 ;;                 ___ftpack
  1957 ;;                 _frexp (ARG)
  1958 ;;                 ___awtoft (ARG)
  1959 ;;                   ___ftpack
  1960 ;;               _frexp (ARG)
  1961 ;;               ___awtoft (ARG)
  1962 ;;                 ___ftpack
  1963 ;;             _eval_poly
  1964 ;;               ___ftmul
  1965 ;;                 ___ftpack
  1966 ;;                 _frexp (ARG)
  1967 ;;                 ___awtoft (ARG)
  1968 ;;                   ___ftpack
  1969 ;;               ___ftadd
  1970 ;;                 ___ftpack
  1971 ;;                 ___altoft (ARG)
  1972 ;;                   ___ftpack
  1973 ;;                   ___fttol (ARG)
  1974 ;;                     ___ftpack (ARG)
  1975 ;;                 ___fttol (ARG)
  1976 ;;                   ___ftpack (ARG)
  1977 ;;                 ___ftmul (ARG)
  1978 ;;                   ___ftpack
  1979 ;;                   _frexp (ARG)
  1980 ;;                   ___awtoft (ARG)
  1981 ;;                     ___ftpack
  1982 ;;                 _frexp (ARG)
  1983 ;;                 ___awtoft (ARG)
  1984 ;;                   ___ftpack
  1985 ;;               _ldexp (ARG)
  1986 ;;                 ___ftge
  1987 ;;                 ___ftneg
  1988 ;;                 ___ftmul (ARG)
  1989 ;;                   ___ftpack
  1990 ;;                   _frexp (ARG)
  1991 ;;                   ___awtoft (ARG)
  1992 ;;                     ___ftpack
  1993 ;;                 ___ftadd (ARG)
  1994 ;;                   ___ftpack
  1995 ;;                   ___altoft (ARG)
  1996 ;;                     ___ftpack
  1997 ;;                     ___fttol (ARG)
  1998 ;;                       ___ftpack (ARG)
  1999 ;;                   ___fttol (ARG)
  2000 ;;                     ___ftpack (ARG)
  2001 ;;                   ___ftmul (ARG)
  2002 ;;                     ___ftpack
  2003 ;;                     _frexp (ARG)
  2004 ;;                     ___awtoft (ARG)
  2005 ;;                       ___ftpack
  2006 ;;                   _frexp (ARG)
  2007 ;;                   ___awtoft (ARG)
  2008 ;;                     ___ftpack
  2009 ;;             ___awtoft
  2010 ;;               ___ftpack
  2011 ;;           ___ftmul
  2012 ;;             ___ftpack
  2013 ;;             _frexp (ARG)
  2014 ;;             ___awtoft (ARG)
  2015 ;;               ___ftpack
  2016 ;;           _exp
  2017 ;;             ___ftge
  2018 ;;             ___ftneg
  2019 ;;             ___ftmul
  2020 ;;               ___ftpack
  2021 ;;               _frexp (ARG)
  2022 ;;               ___awtoft (ARG)
  2023 ;;                 ___ftpack
  2024 ;;             _floor
  2025 ;;               _frexp
  2026 ;;               ___ftge
  2027 ;;               ___fttol
  2028 ;;                 ___ftpack (ARG)
  2029 ;;               ___altoft
  2030 ;;                 ___ftpack
  2031 ;;                 ___fttol (ARG)
  2032 ;;                   ___ftpack (ARG)
  2033 ;;               ___ftadd
  2034 ;;                 ___ftpack
  2035 ;;                 ___altoft (ARG)
  2036 ;;                   ___ftpack
  2037 ;;                   ___fttol (ARG)
  2038 ;;                     ___ftpack (ARG)
  2039 ;;                 ___fttol (ARG)
  2040 ;;                   ___ftpack (ARG)
  2041 ;;                 ___ftmul (ARG)
  2042 ;;                   ___ftpack
  2043 ;;                   _frexp (ARG)
  2044 ;;                   ___awtoft (ARG)
  2045 ;;                     ___ftpack
  2046 ;;                 _frexp (ARG)
  2047 ;;                 ___awtoft (ARG)
  2048 ;;                   ___ftpack
  2049 ;;             ___fttol
  2050 ;;               ___ftpack (ARG)
  2051 ;;             ___awtoft
  2052 ;;               ___ftpack
  2053 ;;             ___ftsub
  2054 ;;               ___ftadd
  2055 ;;                 ___ftpack
  2056 ;;                 ___altoft (ARG)
  2057 ;;                   ___ftpack
  2058 ;;                   ___fttol (ARG)
  2059 ;;                     ___ftpack (ARG)
  2060 ;;                 ___fttol (ARG)
  2061 ;;                   ___ftpack (ARG)
  2062 ;;                 ___ftmul (ARG)
  2063 ;;                   ___ftpack
  2064 ;;                   _frexp (ARG)
  2065 ;;                   ___awtoft (ARG)
  2066 ;;                     ___ftpack
  2067 ;;                 _frexp (ARG)
  2068 ;;                 ___awtoft (ARG)
  2069 ;;                   ___ftpack
  2070 ;;               ___awtoft (ARG)
  2071 ;;                 ___ftpack
  2072 ;;             _eval_poly
  2073 ;;               ___ftmul
  2074 ;;                 ___ftpack
  2075 ;;                 _frexp (ARG)
  2076 ;;                 ___awtoft (ARG)
  2077 ;;                   ___ftpack
  2078 ;;               ___ftadd
  2079 ;;                 ___ftpack
  2080 ;;                 ___altoft (ARG)
  2081 ;;                   ___ftpack
  2082 ;;                   ___fttol (ARG)
  2083 ;;                     ___ftpack (ARG)
  2084 ;;                 ___fttol (ARG)
  2085 ;;                   ___ftpack (ARG)
  2086 ;;                 ___ftmul (ARG)
  2087 ;;                   ___ftpack
  2088 ;;                   _frexp (ARG)
  2089 ;;                   ___awtoft (ARG)
  2090 ;;                     ___ftpack
  2091 ;;                 _frexp (ARG)
  2092 ;;                 ___awtoft (ARG)
  2093 ;;                   ___ftpack
  2094 ;;               _ldexp (ARG)
  2095 ;;                 ___ftge
  2096 ;;                 ___ftneg
  2097 ;;                 ___ftmul (ARG)
  2098 ;;                   ___ftpack
  2099 ;;                   _frexp (ARG)
  2100 ;;                   ___awtoft (ARG)
  2101 ;;                     ___ftpack
  2102 ;;                 ___ftadd (ARG)
  2103 ;;                   ___ftpack
  2104 ;;                   ___altoft (ARG)
  2105 ;;                     ___ftpack
  2106 ;;                     ___fttol (ARG)
  2107 ;;                       ___ftpack (ARG)
  2108 ;;                   ___fttol (ARG)
  2109 ;;                     ___ftpack (ARG)
  2110 ;;                   ___ftmul (ARG)
  2111 ;;                     ___ftpack
  2112 ;;                     _frexp (ARG)
  2113 ;;                     ___awtoft (ARG)
  2114 ;;                       ___ftpack
  2115 ;;                   _frexp (ARG)
  2116 ;;                   ___awtoft (ARG)
  2117 ;;                     ___ftpack
  2118 ;;             _ldexp
  2119 ;;               ___ftge
  2120 ;;               ___ftneg
  2121 ;;               ___ftmul (ARG)
  2122 ;;                 ___ftpack
  2123 ;;                 _frexp (ARG)
  2124 ;;                 ___awtoft (ARG)
  2125 ;;                   ___ftpack
  2126 ;;               ___ftadd (ARG)
  2127 ;;                 ___ftpack
  2128 ;;                 ___altoft (ARG)
  2129 ;;                   ___ftpack
  2130 ;;                   ___fttol (ARG)
  2131 ;;                     ___ftpack (ARG)
  2132 ;;                 ___fttol (ARG)
  2133 ;;                   ___ftpack (ARG)
  2134 ;;                 ___ftmul (ARG)
  2135 ;;                   ___ftpack
  2136 ;;                   _frexp (ARG)
  2137 ;;                   ___awtoft (ARG)
  2138 ;;                     ___ftpack
  2139 ;;                 _frexp (ARG)
  2140 ;;                 ___awtoft (ARG)
  2141 ;;                   ___ftpack
  2142 ;;             ___ftdiv
  2143 ;;               ___ftpack
  2144 ;;             _log (ARG)
  2145 ;;               ___ftge
  2146 ;;               _frexp
  2147 ;;               ___ftmul
  2148 ;;                 ___ftpack
  2149 ;;                 _frexp (ARG)
  2150 ;;                 ___awtoft (ARG)
  2151 ;;                   ___ftpack
  2152 ;;               ___ftadd
  2153 ;;                 ___ftpack
  2154 ;;                 ___altoft (ARG)
  2155 ;;                   ___ftpack
  2156 ;;                   ___fttol (ARG)
  2157 ;;                     ___ftpack (ARG)
  2158 ;;                 ___fttol (ARG)
  2159 ;;                   ___ftpack (ARG)
  2160 ;;                 ___ftmul (ARG)
  2161 ;;                   ___ftpack
  2162 ;;                   _frexp (ARG)
  2163 ;;                   ___awtoft (ARG)
  2164 ;;                     ___ftpack
  2165 ;;                 _frexp (ARG)
  2166 ;;                 ___awtoft (ARG)
  2167 ;;                   ___ftpack
  2168 ;;               _eval_poly
  2169 ;;                 ___ftmul
  2170 ;;                   ___ftpack
  2171 ;;                   _frexp (ARG)
  2172 ;;                   ___awtoft (ARG)
  2173 ;;                     ___ftpack
  2174 ;;                 ___ftadd
  2175 ;;                   ___ftpack
  2176 ;;                   ___altoft (ARG)
  2177 ;;                     ___ftpack
  2178 ;;                     ___fttol (ARG)
  2179 ;;                       ___ftpack (ARG)
  2180 ;;                   ___fttol (ARG)
  2181 ;;                     ___ftpack (ARG)
  2182 ;;                   ___ftmul (ARG)
  2183 ;;                     ___ftpack
  2184 ;;                     _frexp (ARG)
  2185 ;;                     ___awtoft (ARG)
  2186 ;;                       ___ftpack
  2187 ;;                   _frexp (ARG)
  2188 ;;                   ___awtoft (ARG)
  2189 ;;                     ___ftpack
  2190 ;;                 _ldexp (ARG)
  2191 ;;                   ___ftge
  2192 ;;                   ___ftneg
  2193 ;;                   ___ftmul (ARG)
  2194 ;;                     ___ftpack
  2195 ;;                     _frexp (ARG)
  2196 ;;                     ___awtoft (ARG)
  2197 ;;                       ___ftpack
  2198 ;;                   ___ftadd (ARG)
  2199 ;;                     ___ftpack
  2200 ;;                     ___altoft (ARG)
  2201 ;;                       ___ftpack
  2202 ;;                       ___fttol (ARG)
  2203 ;;                         ___ftpack (ARG)
  2204 ;;                     ___fttol (ARG)
  2205 ;;                       ___ftpack (ARG)
  2206 ;;                     ___ftmul (ARG)
  2207 ;;                       ___ftpack
  2208 ;;                       _frexp (ARG)
  2209 ;;                       ___awtoft (ARG)
  2210 ;;                         ___ftpack
  2211 ;;                     _frexp (ARG)
  2212 ;;                     ___awtoft (ARG)
  2213 ;;                       ___ftpack
  2214 ;;               ___awtoft
  2215 ;;                 ___ftpack
  2216 ;;           _sqrt (ARG)
  2217 ;;             ___ftge
  2218 ;;             ___ftmul
  2219 ;;               ___ftpack
  2220 ;;               _frexp (ARG)
  2221 ;;               ___awtoft (ARG)
  2222 ;;                 ___ftpack
  2223 ;;             ___ftsub
  2224 ;;               ___ftadd
  2225 ;;                 ___ftpack
  2226 ;;                 ___altoft (ARG)
  2227 ;;                   ___ftpack
  2228 ;;                   ___fttol (ARG)
  2229 ;;                     ___ftpack (ARG)
  2230 ;;                 ___fttol (ARG)
  2231 ;;                   ___ftpack (ARG)
  2232 ;;                 ___ftmul (ARG)
  2233 ;;                   ___ftpack
  2234 ;;                   _frexp (ARG)
  2235 ;;                   ___awtoft (ARG)
  2236 ;;                     ___ftpack
  2237 ;;                 _frexp (ARG)
  2238 ;;                 ___awtoft (ARG)
  2239 ;;                   ___ftpack
  2240 ;;               ___awtoft (ARG)
  2241 ;;                 ___ftpack
  2242 ;;             ___fttol (ARG)
  2243 ;;               ___ftpack (ARG)
  2244 ;;             ___lltoft (ARG)
  2245 ;;               ___ftpack
  2246 ;;             ___ftneg (ARG)
  2247 ;;             _log (ARG)
  2248 ;;               ___ftge
  2249 ;;               _frexp
  2250 ;;               ___ftmul
  2251 ;;                 ___ftpack
  2252 ;;                 _frexp (ARG)
  2253 ;;                 ___awtoft (ARG)
  2254 ;;                   ___ftpack
  2255 ;;               ___ftadd
  2256 ;;                 ___ftpack
  2257 ;;                 ___altoft (ARG)
  2258 ;;                   ___ftpack
  2259 ;;                   ___fttol (ARG)
  2260 ;;                     ___ftpack (ARG)
  2261 ;;                 ___fttol (ARG)
  2262 ;;                   ___ftpack (ARG)
  2263 ;;                 ___ftmul (ARG)
  2264 ;;                   ___ftpack
  2265 ;;                   _frexp (ARG)
  2266 ;;                   ___awtoft (ARG)
  2267 ;;                     ___ftpack
  2268 ;;                 _frexp (ARG)
  2269 ;;                 ___awtoft (ARG)
  2270 ;;                   ___ftpack
  2271 ;;               _eval_poly
  2272 ;;                 ___ftmul
  2273 ;;                   ___ftpack
  2274 ;;                   _frexp (ARG)
  2275 ;;                   ___awtoft (ARG)
  2276 ;;                     ___ftpack
  2277 ;;                 ___ftadd
  2278 ;;                   ___ftpack
  2279 ;;                   ___altoft (ARG)
  2280 ;;                     ___ftpack
  2281 ;;                     ___fttol (ARG)
  2282 ;;                       ___ftpack (ARG)
  2283 ;;                   ___fttol (ARG)
  2284 ;;                     ___ftpack (ARG)
  2285 ;;                   ___ftmul (ARG)
  2286 ;;                     ___ftpack
  2287 ;;                     _frexp (ARG)
  2288 ;;                     ___awtoft (ARG)
  2289 ;;                       ___ftpack
  2290 ;;                   _frexp (ARG)
  2291 ;;                   ___awtoft (ARG)
  2292 ;;                     ___ftpack
  2293 ;;                 _ldexp (ARG)
  2294 ;;                   ___ftge
  2295 ;;                   ___ftneg
  2296 ;;                   ___ftmul (ARG)
  2297 ;;                     ___ftpack
  2298 ;;                     _frexp (ARG)
  2299 ;;                     ___awtoft (ARG)
  2300 ;;                       ___ftpack
  2301 ;;                   ___ftadd (ARG)
  2302 ;;                     ___ftpack
  2303 ;;                     ___altoft (ARG)
  2304 ;;                       ___ftpack
  2305 ;;                       ___fttol (ARG)
  2306 ;;                         ___ftpack (ARG)
  2307 ;;                     ___fttol (ARG)
  2308 ;;                       ___ftpack (ARG)
  2309 ;;                     ___ftmul (ARG)
  2310 ;;                       ___ftpack
  2311 ;;                       _frexp (ARG)
  2312 ;;                       ___awtoft (ARG)
  2313 ;;                         ___ftpack
  2314 ;;                     _frexp (ARG)
  2315 ;;                     ___awtoft (ARG)
  2316 ;;                       ___ftpack
  2317 ;;               ___awtoft
  2318 ;;                 ___ftpack
  2319 ;;             _exp (ARG)
  2320 ;;               ___ftge
  2321 ;;               ___ftneg
  2322 ;;               ___ftmul
  2323 ;;                 ___ftpack
  2324 ;;                 _frexp (ARG)
  2325 ;;                 ___awtoft (ARG)
  2326 ;;                   ___ftpack
  2327 ;;               _floor
  2328 ;;                 _frexp
  2329 ;;                 ___ftge
  2330 ;;                 ___fttol
  2331 ;;                   ___ftpack (ARG)
  2332 ;;                 ___altoft
  2333 ;;                   ___ftpack
  2334 ;;                   ___fttol (ARG)
  2335 ;;                     ___ftpack (ARG)
  2336 ;;                 ___ftadd
  2337 ;;                   ___ftpack
  2338 ;;                   ___altoft (ARG)
  2339 ;;                     ___ftpack
  2340 ;;                     ___fttol (ARG)
  2341 ;;                       ___ftpack (ARG)
  2342 ;;                   ___fttol (ARG)
  2343 ;;                     ___ftpack (ARG)
  2344 ;;                   ___ftmul (ARG)
  2345 ;;                     ___ftpack
  2346 ;;                     _frexp (ARG)
  2347 ;;                     ___awtoft (ARG)
  2348 ;;                       ___ftpack
  2349 ;;                   _frexp (ARG)
  2350 ;;                   ___awtoft (ARG)
  2351 ;;                     ___ftpack
  2352 ;;               ___fttol
  2353 ;;                 ___ftpack (ARG)
  2354 ;;               ___awtoft
  2355 ;;                 ___ftpack
  2356 ;;               ___ftsub
  2357 ;;                 ___ftadd
  2358 ;;                   ___ftpack
  2359 ;;                   ___altoft (ARG)
  2360 ;;                     ___ftpack
  2361 ;;                     ___fttol (ARG)
  2362 ;;                       ___ftpack (ARG)
  2363 ;;                   ___fttol (ARG)
  2364 ;;                     ___ftpack (ARG)
  2365 ;;                   ___ftmul (ARG)
  2366 ;;                     ___ftpack
  2367 ;;                     _frexp (ARG)
  2368 ;;                     ___awtoft (ARG)
  2369 ;;                       ___ftpack
  2370 ;;                   _frexp (ARG)
  2371 ;;                   ___awtoft (ARG)
  2372 ;;                     ___ftpack
  2373 ;;                 ___awtoft (ARG)
  2374 ;;                   ___ftpack
  2375 ;;               _eval_poly
  2376 ;;                 ___ftmul
  2377 ;;                   ___ftpack
  2378 ;;                   _frexp (ARG)
  2379 ;;                   ___awtoft (ARG)
  2380 ;;                     ___ftpack
  2381 ;;                 ___ftadd
  2382 ;;                   ___ftpack
  2383 ;;                   ___altoft (ARG)
  2384 ;;                     ___ftpack
  2385 ;;                     ___fttol (ARG)
  2386 ;;                       ___ftpack (ARG)
  2387 ;;                   ___fttol (ARG)
  2388 ;;                     ___ftpack (ARG)
  2389 ;;                   ___ftmul (ARG)
  2390 ;;                     ___ftpack
  2391 ;;                     _frexp (ARG)
  2392 ;;                     ___awtoft (ARG)
  2393 ;;                       ___ftpack
  2394 ;;                   _frexp (ARG)
  2395 ;;                   ___awtoft (ARG)
  2396 ;;                     ___ftpack
  2397 ;;                 _ldexp (ARG)
  2398 ;;                   ___ftge
  2399 ;;                   ___ftneg
  2400 ;;                   ___ftmul (ARG)
  2401 ;;                     ___ftpack
  2402 ;;                     _frexp (ARG)
  2403 ;;                     ___awtoft (ARG)
  2404 ;;                       ___ftpack
  2405 ;;                   ___ftadd (ARG)
  2406 ;;                     ___ftpack
  2407 ;;                     ___altoft (ARG)
  2408 ;;                       ___ftpack
  2409 ;;                       ___fttol (ARG)
  2410 ;;                         ___ftpack (ARG)
  2411 ;;                     ___fttol (ARG)
  2412 ;;                       ___ftpack (ARG)
  2413 ;;                     ___ftmul (ARG)
  2414 ;;                       ___ftpack
  2415 ;;                       _frexp (ARG)
  2416 ;;                       ___awtoft (ARG)
  2417 ;;                         ___ftpack
  2418 ;;                     _frexp (ARG)
  2419 ;;                     ___awtoft (ARG)
  2420 ;;                       ___ftpack
  2421 ;;               _ldexp
  2422 ;;                 ___ftge
  2423 ;;                 ___ftneg
  2424 ;;                 ___ftmul (ARG)
  2425 ;;                   ___ftpack
  2426 ;;                   _frexp (ARG)
  2427 ;;                   ___awtoft (ARG)
  2428 ;;                     ___ftpack
  2429 ;;                 ___ftadd (ARG)
  2430 ;;                   ___ftpack
  2431 ;;                   ___altoft (ARG)
  2432 ;;                     ___ftpack
  2433 ;;                     ___fttol (ARG)
  2434 ;;                       ___ftpack (ARG)
  2435 ;;                   ___fttol (ARG)
  2436 ;;                     ___ftpack (ARG)
  2437 ;;                   ___ftmul (ARG)
  2438 ;;                     ___ftpack
  2439 ;;                     _frexp (ARG)
  2440 ;;                     ___awtoft (ARG)
  2441 ;;                       ___ftpack
  2442 ;;                   _frexp (ARG)
  2443 ;;                   ___awtoft (ARG)
  2444 ;;                     ___ftpack
  2445 ;;               ___ftdiv
  2446 ;;                 ___ftpack
  2447 ;;               _log (ARG)
  2448 ;;                 ___ftge
  2449 ;;                 _frexp
  2450 ;;                 ___ftmul
  2451 ;;                   ___ftpack
  2452 ;;                   _frexp (ARG)
  2453 ;;                   ___awtoft (ARG)
  2454 ;;                     ___ftpack
  2455 ;;                 ___ftadd
  2456 ;;                   ___ftpack
  2457 ;;                   ___altoft (ARG)
  2458 ;;                     ___ftpack
  2459 ;;                     ___fttol (ARG)
  2460 ;;                       ___ftpack (ARG)
  2461 ;;                   ___fttol (ARG)
  2462 ;;                     ___ftpack (ARG)
  2463 ;;                   ___ftmul (ARG)
  2464 ;;                     ___ftpack
  2465 ;;                     _frexp (ARG)
  2466 ;;                     ___awtoft (ARG)
  2467 ;;                       ___ftpack
  2468 ;;                   _frexp (ARG)
  2469 ;;                   ___awtoft (ARG)
  2470 ;;                     ___ftpack
  2471 ;;                 _eval_poly
  2472 ;;                   ___ftmul
  2473 ;;                     ___ftpack
  2474 ;;                     _frexp (ARG)
  2475 ;;                     ___awtoft (ARG)
  2476 ;;                       ___ftpack
  2477 ;;                   ___ftadd
  2478 ;;                     ___ftpack
  2479 ;;                     ___altoft (ARG)
  2480 ;;                       ___ftpack
  2481 ;;                       ___fttol (ARG)
  2482 ;;                         ___ftpack (ARG)
  2483 ;;                     ___fttol (ARG)
  2484 ;;                       ___ftpack (ARG)
  2485 ;;                     ___ftmul (ARG)
  2486 ;;                       ___ftpack
  2487 ;;                       _frexp (ARG)
  2488 ;;                       ___awtoft (ARG)
  2489 ;;                         ___ftpack
  2490 ;;                     _frexp (ARG)
  2491 ;;                     ___awtoft (ARG)
  2492 ;;                       ___ftpack
  2493 ;;                   _ldexp (ARG)
  2494 ;;                     ___ftge
  2495 ;;                     ___ftneg
  2496 ;;                     ___ftmul (ARG)
  2497 ;;                       ___ftpack
  2498 ;;                       _frexp (ARG)
  2499 ;;                       ___awtoft (ARG)
  2500 ;;                         ___ftpack
  2501 ;;                     ___ftadd (ARG)
  2502 ;;                       ___ftpack
  2503 ;;                       ___altoft (ARG)
  2504 ;;                         ___ftpack
  2505 ;;                         ___fttol (ARG)
  2506 ;;                           ___ftpack (ARG)
  2507 ;;                       ___fttol (ARG)
  2508 ;;                         ___ftpack (ARG)
  2509 ;;                       ___ftmul (ARG)
  2510 ;;                         ___ftpack
  2511 ;;                         _frexp (ARG)
  2512 ;;                         ___awtoft (ARG)
  2513 ;;                           ___ftpack
  2514 ;;                       _frexp (ARG)
  2515 ;;                       ___awtoft (ARG)
  2516 ;;                         ___ftpack
  2517 ;;                 ___awtoft
  2518 ;;                   ___ftpack
  2519 ;;             ___altoft (ARG)
  2520 ;;               ___ftpack
  2521 ;;               ___fttol (ARG)
  2522 ;;                 ___ftpack (ARG)
  2523 ;;         ___ftadd
  2524 ;;           ___ftpack
  2525 ;;           ___altoft (ARG)
  2526 ;;             ___ftpack
  2527 ;;             ___fttol (ARG)
  2528 ;;               ___ftpack (ARG)
  2529 ;;           ___fttol (ARG)
  2530 ;;             ___ftpack (ARG)
  2531 ;;           ___ftmul (ARG)
  2532 ;;             ___ftpack
  2533 ;;             _frexp (ARG)
  2534 ;;             ___awtoft (ARG)
  2535 ;;               ___ftpack
  2536 ;;           _frexp (ARG)
  2537 ;;           ___awtoft (ARG)
  2538 ;;             ___ftpack
  2539 ;;         _sqrt
  2540 ;;           ___ftge
  2541 ;;           ___ftmul
  2542 ;;             ___ftpack
  2543 ;;             _frexp (ARG)
  2544 ;;             ___awtoft (ARG)
  2545 ;;               ___ftpack
  2546 ;;           ___ftsub
  2547 ;;             ___ftadd
  2548 ;;               ___ftpack
  2549 ;;               ___altoft (ARG)
  2550 ;;                 ___ftpack
  2551 ;;                 ___fttol (ARG)
  2552 ;;                   ___ftpack (ARG)
  2553 ;;               ___fttol (ARG)
  2554 ;;                 ___ftpack (ARG)
  2555 ;;               ___ftmul (ARG)
  2556 ;;                 ___ftpack
  2557 ;;                 _frexp (ARG)
  2558 ;;                 ___awtoft (ARG)
  2559 ;;                   ___ftpack
  2560 ;;               _frexp (ARG)
  2561 ;;               ___awtoft (ARG)
  2562 ;;                 ___ftpack
  2563 ;;             ___awtoft (ARG)
  2564 ;;               ___ftpack
  2565 ;;           ___fttol (ARG)
  2566 ;;             ___ftpack (ARG)
  2567 ;;           ___lltoft (ARG)
  2568 ;;             ___ftpack
  2569 ;;           ___ftneg (ARG)
  2570 ;;           _log (ARG)
  2571 ;;             ___ftge
  2572 ;;             _frexp
  2573 ;;             ___ftmul
  2574 ;;               ___ftpack
  2575 ;;               _frexp (ARG)
  2576 ;;               ___awtoft (ARG)
  2577 ;;                 ___ftpack
  2578 ;;             ___ftadd
  2579 ;;               ___ftpack
  2580 ;;               ___altoft (ARG)
  2581 ;;                 ___ftpack
  2582 ;;                 ___fttol (ARG)
  2583 ;;                   ___ftpack (ARG)
  2584 ;;               ___fttol (ARG)
  2585 ;;                 ___ftpack (ARG)
  2586 ;;               ___ftmul (ARG)
  2587 ;;                 ___ftpack
  2588 ;;                 _frexp (ARG)
  2589 ;;                 ___awtoft (ARG)
  2590 ;;                   ___ftpack
  2591 ;;               _frexp (ARG)
  2592 ;;               ___awtoft (ARG)
  2593 ;;                 ___ftpack
  2594 ;;             _eval_poly
  2595 ;;               ___ftmul
  2596 ;;                 ___ftpack
  2597 ;;                 _frexp (ARG)
  2598 ;;                 ___awtoft (ARG)
  2599 ;;                   ___ftpack
  2600 ;;               ___ftadd
  2601 ;;                 ___ftpack
  2602 ;;                 ___altoft (ARG)
  2603 ;;                   ___ftpack
  2604 ;;                   ___fttol (ARG)
  2605 ;;                     ___ftpack (ARG)
  2606 ;;                 ___fttol (ARG)
  2607 ;;                   ___ftpack (ARG)
  2608 ;;                 ___ftmul (ARG)
  2609 ;;                   ___ftpack
  2610 ;;                   _frexp (ARG)
  2611 ;;                   ___awtoft (ARG)
  2612 ;;                     ___ftpack
  2613 ;;                 _frexp (ARG)
  2614 ;;                 ___awtoft (ARG)
  2615 ;;                   ___ftpack
  2616 ;;               _ldexp (ARG)
  2617 ;;                 ___ftge
  2618 ;;                 ___ftneg
  2619 ;;                 ___ftmul (ARG)
  2620 ;;                   ___ftpack
  2621 ;;                   _frexp (ARG)
  2622 ;;                   ___awtoft (ARG)
  2623 ;;                     ___ftpack
  2624 ;;                 ___ftadd (ARG)
  2625 ;;                   ___ftpack
  2626 ;;                   ___altoft (ARG)
  2627 ;;                     ___ftpack
  2628 ;;                     ___fttol (ARG)
  2629 ;;                       ___ftpack (ARG)
  2630 ;;                   ___fttol (ARG)
  2631 ;;                     ___ftpack (ARG)
  2632 ;;                   ___ftmul (ARG)
  2633 ;;                     ___ftpack
  2634 ;;                     _frexp (ARG)
  2635 ;;                     ___awtoft (ARG)
  2636 ;;                       ___ftpack
  2637 ;;                   _frexp (ARG)
  2638 ;;                   ___awtoft (ARG)
  2639 ;;                     ___ftpack
  2640 ;;             ___awtoft
  2641 ;;               ___ftpack
  2642 ;;           _exp (ARG)
  2643 ;;             ___ftge
  2644 ;;             ___ftneg
  2645 ;;             ___ftmul
  2646 ;;               ___ftpack
  2647 ;;               _frexp (ARG)
  2648 ;;               ___awtoft (ARG)
  2649 ;;                 ___ftpack
  2650 ;;             _floor
  2651 ;;               _frexp
  2652 ;;               ___ftge
  2653 ;;               ___fttol
  2654 ;;                 ___ftpack (ARG)
  2655 ;;               ___altoft
  2656 ;;                 ___ftpack
  2657 ;;                 ___fttol (ARG)
  2658 ;;                   ___ftpack (ARG)
  2659 ;;               ___ftadd
  2660 ;;                 ___ftpack
  2661 ;;                 ___altoft (ARG)
  2662 ;;                   ___ftpack
  2663 ;;                   ___fttol (ARG)
  2664 ;;                     ___ftpack (ARG)
  2665 ;;                 ___fttol (ARG)
  2666 ;;                   ___ftpack (ARG)
  2667 ;;                 ___ftmul (ARG)
  2668 ;;                   ___ftpack
  2669 ;;                   _frexp (ARG)
  2670 ;;                   ___awtoft (ARG)
  2671 ;;                     ___ftpack
  2672 ;;                 _frexp (ARG)
  2673 ;;                 ___awtoft (ARG)
  2674 ;;                   ___ftpack
  2675 ;;             ___fttol
  2676 ;;               ___ftpack (ARG)
  2677 ;;             ___awtoft
  2678 ;;               ___ftpack
  2679 ;;             ___ftsub
  2680 ;;               ___ftadd
  2681 ;;                 ___ftpack
  2682 ;;                 ___altoft (ARG)
  2683 ;;                   ___ftpack
  2684 ;;                   ___fttol (ARG)
  2685 ;;                     ___ftpack (ARG)
  2686 ;;                 ___fttol (ARG)
  2687 ;;                   ___ftpack (ARG)
  2688 ;;                 ___ftmul (ARG)
  2689 ;;                   ___ftpack
  2690 ;;                   _frexp (ARG)
  2691 ;;                   ___awtoft (ARG)
  2692 ;;                     ___ftpack
  2693 ;;                 _frexp (ARG)
  2694 ;;                 ___awtoft (ARG)
  2695 ;;                   ___ftpack
  2696 ;;               ___awtoft (ARG)
  2697 ;;                 ___ftpack
  2698 ;;             _eval_poly
  2699 ;;               ___ftmul
  2700 ;;                 ___ftpack
  2701 ;;                 _frexp (ARG)
  2702 ;;                 ___awtoft (ARG)
  2703 ;;                   ___ftpack
  2704 ;;               ___ftadd
  2705 ;;                 ___ftpack
  2706 ;;                 ___altoft (ARG)
  2707 ;;                   ___ftpack
  2708 ;;                   ___fttol (ARG)
  2709 ;;                     ___ftpack (ARG)
  2710 ;;                 ___fttol (ARG)
  2711 ;;                   ___ftpack (ARG)
  2712 ;;                 ___ftmul (ARG)
  2713 ;;                   ___ftpack
  2714 ;;                   _frexp (ARG)
  2715 ;;                   ___awtoft (ARG)
  2716 ;;                     ___ftpack
  2717 ;;                 _frexp (ARG)
  2718 ;;                 ___awtoft (ARG)
  2719 ;;                   ___ftpack
  2720 ;;               _ldexp (ARG)
  2721 ;;                 ___ftge
  2722 ;;                 ___ftneg
  2723 ;;                 ___ftmul (ARG)
  2724 ;;                   ___ftpack
  2725 ;;                   _frexp (ARG)
  2726 ;;                   ___awtoft (ARG)
  2727 ;;                     ___ftpack
  2728 ;;                 ___ftadd (ARG)
  2729 ;;                   ___ftpack
  2730 ;;                   ___altoft (ARG)
  2731 ;;                     ___ftpack
  2732 ;;                     ___fttol (ARG)
  2733 ;;                       ___ftpack (ARG)
  2734 ;;                   ___fttol (ARG)
  2735 ;;                     ___ftpack (ARG)
  2736 ;;                   ___ftmul (ARG)
  2737 ;;                     ___ftpack
  2738 ;;                     _frexp (ARG)
  2739 ;;                     ___awtoft (ARG)
  2740 ;;                       ___ftpack
  2741 ;;                   _frexp (ARG)
  2742 ;;                   ___awtoft (ARG)
  2743 ;;                     ___ftpack
  2744 ;;             _ldexp
  2745 ;;               ___ftge
  2746 ;;               ___ftneg
  2747 ;;               ___ftmul (ARG)
  2748 ;;                 ___ftpack
  2749 ;;                 _frexp (ARG)
  2750 ;;                 ___awtoft (ARG)
  2751 ;;                   ___ftpack
  2752 ;;               ___ftadd (ARG)
  2753 ;;                 ___ftpack
  2754 ;;                 ___altoft (ARG)
  2755 ;;                   ___ftpack
  2756 ;;                   ___fttol (ARG)
  2757 ;;                     ___ftpack (ARG)
  2758 ;;                 ___fttol (ARG)
  2759 ;;                   ___ftpack (ARG)
  2760 ;;                 ___ftmul (ARG)
  2761 ;;                   ___ftpack
  2762 ;;                   _frexp (ARG)
  2763 ;;                   ___awtoft (ARG)
  2764 ;;                     ___ftpack
  2765 ;;                 _frexp (ARG)
  2766 ;;                 ___awtoft (ARG)
  2767 ;;                   ___ftpack
  2768 ;;             ___ftdiv
  2769 ;;               ___ftpack
  2770 ;;             _log (ARG)
  2771 ;;               ___ftge
  2772 ;;               _frexp
  2773 ;;               ___ftmul
  2774 ;;                 ___ftpack
  2775 ;;                 _frexp (ARG)
  2776 ;;                 ___awtoft (ARG)
  2777 ;;                   ___ftpack
  2778 ;;               ___ftadd
  2779 ;;                 ___ftpack
  2780 ;;                 ___altoft (ARG)
  2781 ;;                   ___ftpack
  2782 ;;                   ___fttol (ARG)
  2783 ;;                     ___ftpack (ARG)
  2784 ;;                 ___fttol (ARG)
  2785 ;;                   ___ftpack (ARG)
  2786 ;;                 ___ftmul (ARG)
  2787 ;;                   ___ftpack
  2788 ;;                   _frexp (ARG)
  2789 ;;                   ___awtoft (ARG)
  2790 ;;                     ___ftpack
  2791 ;;                 _frexp (ARG)
  2792 ;;                 ___awtoft (ARG)
  2793 ;;                   ___ftpack
  2794 ;;               _eval_poly
  2795 ;;                 ___ftmul
  2796 ;;                   ___ftpack
  2797 ;;                   _frexp (ARG)
  2798 ;;                   ___awtoft (ARG)
  2799 ;;                     ___ftpack
  2800 ;;                 ___ftadd
  2801 ;;                   ___ftpack
  2802 ;;                   ___altoft (ARG)
  2803 ;;                     ___ftpack
  2804 ;;                     ___fttol (ARG)
  2805 ;;                       ___ftpack (ARG)
  2806 ;;                   ___fttol (ARG)
  2807 ;;                     ___ftpack (ARG)
  2808 ;;                   ___ftmul (ARG)
  2809 ;;                     ___ftpack
  2810 ;;                     _frexp (ARG)
  2811 ;;                     ___awtoft (ARG)
  2812 ;;                       ___ftpack
  2813 ;;                   _frexp (ARG)
  2814 ;;                   ___awtoft (ARG)
  2815 ;;                     ___ftpack
  2816 ;;                 _ldexp (ARG)
  2817 ;;                   ___ftge
  2818 ;;                   ___ftneg
  2819 ;;                   ___ftmul (ARG)
  2820 ;;                     ___ftpack
  2821 ;;                     _frexp (ARG)
  2822 ;;                     ___awtoft (ARG)
  2823 ;;                       ___ftpack
  2824 ;;                   ___ftadd (ARG)
  2825 ;;                     ___ftpack
  2826 ;;                     ___altoft (ARG)
  2827 ;;                       ___ftpack
  2828 ;;                       ___fttol (ARG)
  2829 ;;                         ___ftpack (ARG)
  2830 ;;                     ___fttol (ARG)
  2831 ;;                       ___ftpack (ARG)
  2832 ;;                     ___ftmul (ARG)
  2833 ;;                       ___ftpack
  2834 ;;                       _frexp (ARG)
  2835 ;;                       ___awtoft (ARG)
  2836 ;;                         ___ftpack
  2837 ;;                     _frexp (ARG)
  2838 ;;                     ___awtoft (ARG)
  2839 ;;                       ___ftpack
  2840 ;;               ___awtoft
  2841 ;;                 ___ftpack
  2842 ;;           ___altoft (ARG)
  2843 ;;             ___ftpack
  2844 ;;             ___fttol (ARG)
  2845 ;;               ___ftpack (ARG)
  2846 ;;         ___fttol
  2847 ;;           ___ftpack (ARG)
  2848 ;;         ___lwdiv
  2849 ;;       _Register_SendData
  2850 ;;     _Digitron_Update
  2851 ;;       _queueArray_in
  2852 ;;       i1_Digitron_Display
  2853 ;;         i1_Digitron_Command
  2854 ;;           i1_delay_us
  2855 ;;           i1_Digitron_Send_8bit
  2856 ;;         i1_Digitron_Send_8bit
  2857 ;;     _CleanGpsRcv
  2858 ;;
  2859 ;; Address spaces:
  2860 ;;Name               Size   Autos  Total    Cost      Usage
  2861 ;;BANK3               60     14      5D       9       96.9%
  2862 ;;BITBANK3            60      0       0       8        0.0%
  2863 ;;SFR3                 0      0       0       4        0.0%
  2864 ;;BITSFR3              0      0       0       4        0.0%
  2865 ;;BANK2               60      0      32      11       52.1%
  2866 ;;BITBANK2            60      0       0      10        0.0%
  2867 ;;SFR2                 0      0       0       5        0.0%
  2868 ;;BITSFR2              0      0       0       5        0.0%
  2869 ;;SFR1                 0      0       0       2        0.0%
  2870 ;;BITSFR1              0      0       0       2        0.0%
  2871 ;;BANK1               50     3F      4E       7       97.5%
  2872 ;;BITBANK1            50      0       0       6        0.0%
  2873 ;;CODE                 0      0       0       0        0.0%
  2874 ;;DATA                 0      0     151      12        0.0%
  2875 ;;ABS                  0      0     13B       3        0.0%
  2876 ;;NULL                 0      0       0       0        0.0%
  2877 ;;STACK                0      0      16       2        0.0%
  2878 ;;BANK0               50     4F      50       5      100.0%
  2879 ;;BITBANK0            50      0       0       4        0.0%
  2880 ;;SFR0                 0      0       0       1        0.0%
  2881 ;;BITSFR0              0      0       0       1        0.0%
  2882 ;;COMMON               E      E       E       1      100.0%
  2883 ;;BITCOMMON            E      0       0       0        0.0%
  2884 ;;EEDATA             100      0       0       0        0.0%
  2885                           
  2886                           
  2887 ;; *************** function _main *****************
  2888 ;; Defined at:
  2889 ;;		line 15 in file "main.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;		None
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;		None
  2894 ;; Return value:  Size  Location     Type
  2895 ;;		None               void
  2896 ;; Registers used:
  2897 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2898 ;; Tracked objects:
  2899 ;;		On entry : 17F/0
  2900 ;;		On exit  : 40/0
  2901 ;;		Unchanged: FFE00/0
  2902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2903 ;;      Params:         0       0       0       0       0
  2904 ;;      Locals:         0       0       0       0       0
  2905 ;;      Temps:          0       0       0       0       0
  2906 ;;      Totals:         0       0       0       0       0
  2907 ;;Total ram usage:        0 bytes
  2908 ;; Hardware stack levels required when called:   13
  2909 ;; This function calls:
  2910 ;;		_Init_Digitrons
  2911 ;;		_initUART
  2912 ;;		_Init_Timer0
  2913 ;;		_Interrupt_Gross
  2914 ;;		_DelaySec
  2915 ;;		_CleanWifiRcv
  2916 ;;		_Send_ATComm
  2917 ;;		_Uart_1SendStr
  2918 ;; This function is called by:
  2919 ;;		Startup code after reset
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922  06B7                     _main:	
  2923                           
  2924                           ;main.c: 16: TRISA = 0x00;
  2925                           
  2926 ;; hardware stack exceeded
  2927                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2928  06B7  1683               	bsf	3,5	;RP0=1, select bank1
  2929  06B8  0185               	clrf	5	;volatile
  2930                           
  2931                           ;main.c: 17: TRISB = 0x01;
  2932  06B9  3001               	movlw	1
  2933  06BA  0086               	movwf	6	;volatile
  2934                           
  2935                           ;main.c: 18: TRISD = 0x00;
  2936  06BB  0188               	clrf	8	;volatile
  2937                           
  2938                           ;main.c: 19: TRISE = 0x00;
  2939  06BC  0189               	clrf	9	;volatile
  2940                           
  2941                           ;main.c: 20: PORTA = 0x00;
  2942  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  2943  06BE  0185               	clrf	5	;volatile
  2944                           
  2945                           ;main.c: 21: Init_Digitrons();
  2946  06BF  120A  118A  25E3   	fcall	_Init_Digitrons
      +       120A  118A         
  2947                           
  2948                           ;main.c: 22: initUART();
  2949  06C4  160A  118A  275D   	fcall	_initUART
      +       120A  118A         
  2950                           
  2951                           ;main.c: 23: Init_Timer0();
  2952  06C9  160A  118A  274F   	fcall	_Init_Timer0
      +       120A  118A         
  2953                           
  2954                           ;main.c: 24: Interrupt_Gross(1);
  2955  06CE  3001               	movlw	1
  2956  06CF  160A  118A  2756   	fcall	_Interrupt_Gross
      +       120A  118A         
  2957                           
  2958                           ;main.c: 26: DelaySec(3);
  2959  06D4  3003               	movlw	3
  2960  06D5  120A  118A  24E2   	fcall	_DelaySec
      +       120A  118A         
  2961                           
  2962                           ;main.c: 27: CleanWifiRcv();
  2963  06DA  120A  118A  24F8   	fcall	_CleanWifiRcv
      +       120A  118A         
  2964                           
  2965                           ;main.c: 30: if(!Send_ATComm("AT\r\n", "OK", 7, 1))
  2966  06DF  30C4               	movlw	(STR_2-__stringbase)& (0+255)
  2967  06E0  1683               	bsf	3,5	;RP0=1, select bank3
  2968  06E1  1703               	bsf	3,6	;RP1=1, select bank3
  2969  06E2  00E8               	movwf	?_Send_ATComm^(0+384)
  2970  06E3  3007               	movlw	7
  2971  06E4  00E9               	movwf	(?_Send_ATComm^(0+384)+1)
  2972  06E5  01EA               	clrf	(?_Send_ATComm^(0+384)+2)
  2973  06E6  0AEA               	incf	(?_Send_ATComm^(0+384)+2),f
  2974  06E7  30BF               	movlw	(STR_1-__stringbase)& (0+255)
  2975  06E8  120A  118A  24C0   	fcall	_Send_ATComm
      +       120A  118A         
  2976  06ED  3800               	iorlw	0
  2977  06EE  1D03               	skipz
  2978  06EF  2EF3               	goto	l9121
  2979                           
  2980                           ;main.c: 31: {
  2981                           ;main.c: 32: PORTA=0x01;
  2982  06F0  3001               	movlw	1
  2983  06F1  0085               	movwf	5	;volatile
  2984  06F2                     l2312:	
  2985  06F2  2EF2               	goto	l2312
  2986  06F3                     l9121:	
  2987                           
  2988                           ;main.c: 34: }
  2989                           ;main.c: 38: Send_ATComm("ATE0\r\n", "OK", 1, 1);
  2990  06F3  30C4               	movlw	(STR_2-__stringbase)& (0+255)
  2991  06F4  1683               	bsf	3,5	;RP0=1, select bank3
  2992  06F5  1703               	bsf	3,6	;RP1=1, select bank3
  2993  06F6  00E8               	movwf	?_Send_ATComm^(0+384)
  2994  06F7  01E9               	clrf	(?_Send_ATComm^(0+384)+1)
  2995  06F8  0AE9               	incf	(?_Send_ATComm^(0+384)+1),f
  2996  06F9  01EA               	clrf	(?_Send_ATComm^(0+384)+2)
  2997  06FA  0AEA               	incf	(?_Send_ATComm^(0+384)+2),f
  2998  06FB  30B8               	movlw	(STR_3-__stringbase)& (0+255)
  2999  06FC  120A  118A  24C0   	fcall	_Send_ATComm
      +       120A  118A         
  3000                           
  3001                           ;main.c: 40: if(!Send_ATComm("AT+CWMODE=1\r\n", "OK", 1, 0))
  3002  0701  30C4               	movlw	(STR_2-__stringbase)& (0+255)
  3003  0702  1683               	bsf	3,5	;RP0=1, select bank3
  3004  0703  1703               	bsf	3,6	;RP1=1, select bank3
  3005  0704  00E8               	movwf	?_Send_ATComm^(0+384)
  3006  0705  01E9               	clrf	(?_Send_ATComm^(0+384)+1)
  3007  0706  0AE9               	incf	(?_Send_ATComm^(0+384)+1),f
  3008  0707  01EA               	clrf	(?_Send_ATComm^(0+384)+2)
  3009  0708  3088               	movlw	(STR_5-__stringbase)& (0+255)
  3010  0709  120A  118A  24C0   	fcall	_Send_ATComm
      +       120A  118A         
  3011  070E  3800               	iorlw	0
  3012  070F  1D03               	skipz
  3013  0710  2F14               	goto	l9125
  3014                           
  3015                           ;main.c: 41: {
  3016                           ;main.c: 43: PORTA=0x01;
  3017  0711  3001               	movlw	1
  3018  0712  0085               	movwf	5	;volatile
  3019  0713                     l2316:	
  3020  0713  2F13               	goto	l2316
  3021  0714                     l9125:	
  3022                           
  3023                           ;main.c: 45: }
  3024                           ;main.c: 46: Send_ATComm("AT+RST\r\n", "OK", 1, 0);
  3025  0714  30C4               	movlw	(STR_2-__stringbase)& (0+255)
  3026  0715  1683               	bsf	3,5	;RP0=1, select bank3
  3027  0716  1703               	bsf	3,6	;RP1=1, select bank3
  3028  0717  00E8               	movwf	?_Send_ATComm^(0+384)
  3029  0718  01E9               	clrf	(?_Send_ATComm^(0+384)+1)
  3030  0719  0AE9               	incf	(?_Send_ATComm^(0+384)+1),f
  3031  071A  01EA               	clrf	(?_Send_ATComm^(0+384)+2)
  3032  071B  30AF               	movlw	(STR_7-__stringbase)& (0+255)
  3033  071C  120A  118A  24C0   	fcall	_Send_ATComm
      +       120A  118A         
  3034                           
  3035                           ;main.c: 47: DelaySec(3);
  3036  0721  3003               	movlw	3
  3037  0722  120A  118A  24E2   	fcall	_DelaySec
      +       120A  118A         
  3038                           
  3039                           ;main.c: 50: if(!Send_ATComm("AT+CIPMUX=1\r\n", "OK", 3, 0))
  3040  0727  30C4               	movlw	(STR_2-__stringbase)& (0+255)
  3041  0728  1683               	bsf	3,5	;RP0=1, select bank3
  3042  0729  1703               	bsf	3,6	;RP1=1, select bank3
  3043  072A  00E8               	movwf	?_Send_ATComm^(0+384)
  3044  072B  3003               	movlw	3
  3045  072C  00E9               	movwf	(?_Send_ATComm^(0+384)+1)
  3046  072D  01EA               	clrf	(?_Send_ATComm^(0+384)+2)
  3047  072E  3096               	movlw	(STR_9-__stringbase)& (0+255)
  3048  072F  120A  118A  24C0   	fcall	_Send_ATComm
      +       120A  118A         
  3049  0734  3800               	iorlw	0
  3050  0735  1D03               	skipz
  3051  0736  2F3A               	goto	l9133
  3052                           
  3053                           ;main.c: 51: {
  3054                           ;main.c: 53: PORTA=0x01;
  3055  0737  3001               	movlw	1
  3056  0738  0085               	movwf	5	;volatile
  3057  0739                     l2320:	
  3058  0739  2F39               	goto	l2320
  3059  073A                     l9133:	
  3060                           
  3061                           ;main.c: 55: }
  3062                           ;main.c: 59: if(!Send_ATComm("AT+CWJAP=\"deet\",\"172210086\"\r\n", "OK", 10, 0))
  3063  073A  30C4               	movlw	(STR_2-__stringbase)& (0+255)
  3064  073B  1683               	bsf	3,5	;RP0=1, select bank3
  3065  073C  1703               	bsf	3,6	;RP1=1, select bank3
  3066  073D  00E8               	movwf	?_Send_ATComm^(0+384)
  3067  073E  300A               	movlw	10
  3068  073F  00E9               	movwf	(?_Send_ATComm^(0+384)+1)
  3069  0740  01EA               	clrf	(?_Send_ATComm^(0+384)+2)
  3070  0741  3044               	movlw	(STR_11-__stringbase)& (0+255)
  3071  0742  120A  118A  24C0   	fcall	_Send_ATComm
      +       120A  118A         
  3072  0747  3800               	iorlw	0
  3073  0748  1D03               	skipz
  3074  0749  2F4D               	goto	l9137
  3075                           
  3076                           ;main.c: 60: {
  3077                           ;main.c: 62: PORTA=0x01;
  3078  074A  3001               	movlw	1
  3079  074B  0085               	movwf	5	;volatile
  3080  074C                     l2324:	
  3081  074C  2F4C               	goto	l2324
  3082  074D                     l9137:	
  3083                           
  3084                           ;main.c: 64: }
  3085                           ;main.c: 74: Uart_1SendStr("AT+CIFSR\r\n");
  3086  074D  30A4               	movlw	(STR_13-__stringbase)& (0+255)
  3087  074E  120A  118A  250A   	fcall	_Uart_1SendStr
      +       120A  118A         
  3088                           
  3089                           ;main.c: 75: DelaySec(1);
  3090  0753  3001               	movlw	1
  3091  0754  120A  118A  24E2   	fcall	_DelaySec
      +       120A  118A         
  3092                           
  3093                           ;main.c: 76: CleanWifiRcv();
  3094  0759  120A  118A  24F8   	fcall	_CleanWifiRcv
      +       120A  118A         
  3095                           
  3096                           ;main.c: 79: if(!Send_ATComm("AT+CIPSERVER=1,1592\r\n", "OK", 3, 0))
  3097  075E  30C4               	movlw	(STR_2-__stringbase)& (0+255)
  3098  075F  1683               	bsf	3,5	;RP0=1, select bank3
  3099  0760  1703               	bsf	3,6	;RP1=1, select bank3
  3100  0761  00E8               	movwf	?_Send_ATComm^(0+384)
  3101  0762  3003               	movlw	3
  3102  0763  00E9               	movwf	(?_Send_ATComm^(0+384)+1)
  3103  0764  01EA               	clrf	(?_Send_ATComm^(0+384)+2)
  3104  0765  3062               	movlw	(STR_14-__stringbase)& (0+255)
  3105  0766  120A  118A  24C0   	fcall	_Send_ATComm
      +       120A  118A         
  3106  076B  3800               	iorlw	0
  3107  076C  1D03               	skipz
  3108  076D  2F71               	goto	l9147
  3109                           
  3110                           ;main.c: 80: {
  3111                           ;main.c: 82: PORTA=0x01;
  3112  076E  3001               	movlw	1
  3113  076F  0085               	movwf	5	;volatile
  3114  0770                     l2328:	
  3115  0770  2F70               	goto	l2328
  3116  0771                     l9147:	
  3117                           
  3118                           ;main.c: 84: }
  3119                           ;main.c: 97: if(!Send_ATComm("AT+CIPSTO=300\r\n", "OK", 3, 0))
  3120  0771  30C4               	movlw	(STR_2-__stringbase)& (0+255)
  3121  0772  1683               	bsf	3,5	;RP0=1, select bank3
  3122  0773  1703               	bsf	3,6	;RP1=1, select bank3
  3123  0774  00E8               	movwf	?_Send_ATComm^(0+384)
  3124  0775  3003               	movlw	3
  3125  0776  00E9               	movwf	(?_Send_ATComm^(0+384)+1)
  3126  0777  01EA               	clrf	(?_Send_ATComm^(0+384)+2)
  3127  0778  3078               	movlw	(STR_16-__stringbase)& (0+255)
  3128  0779  120A  118A  24C0   	fcall	_Send_ATComm
      +       120A  118A         
  3129  077E  3800               	iorlw	0
  3130  077F  1D03               	skipz
  3131  0780  2F84               	goto	l2330
  3132                           
  3133                           ;main.c: 98: {
  3134                           ;main.c: 100: PORTA=0x01;
  3135  0781  3001               	movlw	1
  3136  0782  0085               	movwf	5	;volatile
  3137  0783                     l2332:	
  3138  0783  2F83               	goto	l2332
  3139  0784                     l2330:	
  3140                           
  3141                           ;main.c: 102: }
  3142                           ;main.c: 106: config_ok = 1;
  3143  0784  1683               	bsf	3,5	;RP0=1, select bank1
  3144  0785  01E9               	clrf	_config_ok^(0+128)
  3145  0786  0AE9               	incf	_config_ok^(0+128),f
  3146  0787                     l2335:	
  3147  0787  2F87               	goto	l2335
  3148  0788                     __end_of_main:	
  3149                           
  3150                           	psect	text1189
  3151  04C0                     __ptext1189:	
  3152 ;; =============== function _main ends ============
  3153                           
  3154                           
  3155 ;; *************** function _Send_ATComm *****************
  3156 ;; Defined at:
  3157 ;;		line 25 in file "wifi.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  comm            1    wreg     PTR const unsigned char 
  3160 ;;		 -> STR_16(16), STR_14(22), STR_11(30), STR_9(14), 
  3161 ;;		 -> STR_7(9), STR_5(14), STR_3(7), STR_1(5), 
  3162 ;;  ret             1   15[BANK3 ] PTR const unsigned char 
  3163 ;;		 -> STR_17(3), STR_15(3), STR_12(3), STR_10(3), 
  3164 ;;		 -> STR_8(3), STR_6(3), STR_4(3), STR_2(3), 
  3165 ;;  delay           1   16[BANK3 ] unsigned char 
  3166 ;;  wait            1   17[BANK3 ] unsigned char 
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;  comm            1   18[BANK3 ] PTR const unsigned char 
  3169 ;;		 -> STR_16(16), STR_14(22), STR_11(30), STR_9(14), 
  3170 ;;		 -> STR_7(9), STR_5(14), STR_3(7), STR_1(5), 
  3171 ;;  i               1   19[BANK3 ] unsigned char 
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      unsigned char 
  3174 ;; Registers used:
  3175 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3176 ;; Tracked objects:
  3177 ;;		On entry : 60/160
  3178 ;;		On exit  : 160/100
  3179 ;;		Unchanged: FFE00/0
  3180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3181 ;;      Params:         0       0       0       3       0
  3182 ;;      Locals:         0       0       0       2       0
  3183 ;;      Temps:          0       0       0       0       0
  3184 ;;      Totals:         0       0       0       5       0
  3185 ;;Total ram usage:        5 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:   12
  3188 ;; This function calls:
  3189 ;;		_Uart_1SendStr
  3190 ;;		_DelaySec
  3191 ;;		_Match
  3192 ;;		_CleanWifiRcv
  3193 ;; This function is called by:
  3194 ;;		_main
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197  04C0                     _Send_ATComm:	
  3198                           
  3199 ;; hardware stack exceeded
  3200                           ; Regs used in _Send_ATComm: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3201                           ;Send_ATComm@comm stored from wreg
  3202  04C0  00EB               	movwf	Send_ATComm@comm^(0+384)
  3203                           
  3204                           ;wifi.c: 26: unsigned char i;
  3205                           ;wifi.c: 27: for(i = 0;i<delay;i++)
  3206  04C1  01EC               	clrf	Send_ATComm@i^(0+384)
  3207  04C2                     l9207:	
  3208  04C2  0869               	movf	Send_ATComm@delay^(0+384),w
  3209  04C3  026C               	subwf	Send_ATComm@i^(0+384),w
  3210  04C4  1803               	btfsc	3,0
  3211  04C5  2CE0               	goto	l9209
  3212                           
  3213                           ;wifi.c: 28: {
  3214                           ;wifi.c: 29: if(wait)
  3215  04C6  086A               	movf	Send_ATComm@wait^(0+384),w
  3216  04C7  1D03               	skipz
  3217  04C8  2CCC               	goto	l9193
  3218                           
  3219                           ;wifi.c: 31: else
  3220                           ;wifi.c: 32: if(i==0)
  3221                           
  3222                           ;wifi.c: 30: Uart_1SendStr(comm);
  3223  04C9  08EC               	movf	Send_ATComm@i^(0+384),f
  3224  04CA  1D03               	skipz
  3225  04CB  2CD0               	goto	l9195
  3226  04CC                     l9193:	
  3227                           
  3228                           ;wifi.c: 33: Uart_1SendStr(comm);
  3229  04CC  086B               	movf	Send_ATComm@comm^(0+384),w
  3230  04CD  250A  120A  118A   	fcall	_Uart_1SendStr
  3231  04D0                     l9195:	
  3232                           
  3233                           ;wifi.c: 34: DelaySec(1);
  3234  04D0  3001               	movlw	1
  3235  04D1  24E2  120A  118A   	fcall	_DelaySec
  3236                           
  3237                           ;wifi.c: 35: if(Match(ret))
  3238  04D4  1683               	bsf	3,5	;RP0=1, select bank3
  3239  04D5  1703               	bsf	3,6	;RP1=1, select bank3
  3240  04D6  0868               	movf	Send_ATComm@ret^(0+384),w
  3241  04D7  252D  120A  118A   	fcall	_Match
  3242  04DA  1C03               	btfss	3,0
  3243  04DB  2CDE               	goto	l9205
  3244                           
  3245                           ;wifi.c: 36: {
  3246                           ;wifi.c: 37: CleanWifiRcv();
  3247  04DC  24F8               	fcall	_CleanWifiRcv
  3248                           
  3249                           ;wifi.c: 38: return 1;
  3250  04DD  3401               	retlw	1
  3251  04DE                     l9205:	
  3252  04DE  0AEC               	incf	Send_ATComm@i^(0+384),f
  3253  04DF  2CC2               	goto	l9207
  3254  04E0                     l9209:	
  3255                           
  3256                           ;wifi.c: 39: }
  3257                           ;wifi.c: 40: }
  3258                           ;wifi.c: 41: CleanWifiRcv();
  3259  04E0  24F8               	fcall	_CleanWifiRcv
  3260                           
  3261                           ;wifi.c: 42: return 0;
  3262  04E1  3400               	retlw	0
  3263  04E2                     __end_of_Send_ATComm:	
  3264  04E2                     __ptext1201:	
  3265 ;; =============== function _CleanWifiRcv ends ============
  3266                           
  3267                           
  3268 ;; *************** function _DelaySec *****************
  3269 ;; Defined at:
  3270 ;;		line 21 in file "timer.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  sec             1    wreg     unsigned char 
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;  sec             1    1[BANK3 ] unsigned char 
  3275 ;; Return value:  Size  Location     Type
  3276 ;;		None               void
  3277 ;; Registers used:
  3278 ;;		wreg, status,2
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/60
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: FFE00/0
  3283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3284 ;;      Params:         0       0       0       0       0
  3285 ;;      Locals:         0       0       0       1       0
  3286 ;;      Temps:          0       0       0       1       0
  3287 ;;      Totals:         0       0       0       2       0
  3288 ;;Total ram usage:        2 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; Hardware stack levels required when called:    9
  3291 ;; This function calls:
  3292 ;;		Nothing
  3293 ;; This function is called by:
  3294 ;;		_main
  3295 ;;		_Send_ATComm
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298  04E2                     _DelaySec:	
  3299                           
  3300 ;; hardware stack exceeded
  3301                           ; Regs used in _DelaySec: [wreg+status,2]
  3302                           ;DelaySec@sec stored from wreg
  3303  04E2  1683               	bsf	3,5	;RP0=1, select bank3
  3304  04E3  1703               	bsf	3,6	;RP1=1, select bank3
  3305  04E4  00DA               	movwf	DelaySec@sec^(0+384)
  3306                           
  3307                           ;timer.c: 22: sec_cnt = 0;
  3308  04E5  1303               	bcf	3,6	;RP1=0, select bank1
  3309  04E6  01E3               	clrf	_sec_cnt^(0+128)	;volatile
  3310  04E7  01E4               	clrf	(_sec_cnt+1)^(0+128)	;volatile
  3311  04E8                     l9171:	
  3312                           ;timer.c: 23: while(sec_cnt < sec);
  3313                           
  3314  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  3315  04E9  1303               	bcf	3,6	;RP1=0, select bank1
  3316  04EA  0864               	movf	(_sec_cnt+1)^(0+128),w	;volatile
  3317  04EB  3A80               	xorlw	128
  3318  04EC  1703               	bsf	3,6	;RP1=1, select bank3
  3319  04ED  00D9               	movwf	??_DelaySec^(0+384)
  3320  04EE  3080               	movlw	128
  3321  04EF  0259               	subwf	??_DelaySec^(0+384),w
  3322  04F0  1D03               	skipz
  3323  04F1  2CF5               	goto	u2195
  3324  04F2  085A               	movf	DelaySec@sec^(0+384),w
  3325  04F3  1303               	bcf	3,6	;RP1=0, select bank1
  3326  04F4  0263               	subwf	_sec_cnt^(0+128),w	;volatile
  3327  04F5                     u2195:	
  3328  04F5  1803               	btfsc	3,0
  3329  04F6  0008               	return
  3330  04F7  2CE8               	goto	l9171
  3331  04F8                     __end_of_DelaySec:	
  3332  04F8                     __ptext1200:	
  3333 ;; =============== function _UART_1SendOneByte ends ============
  3334                           
  3335                           
  3336 ;; *************** function _CleanWifiRcv *****************
  3337 ;; Defined at:
  3338 ;;		line 8 in file "wifi.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;		None
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;  i               1    0[BANK3 ] unsigned char 
  3343 ;; Return value:  Size  Location     Type
  3344 ;;		None               void
  3345 ;; Registers used:
  3346 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/60
  3349 ;;		On exit  : 160/100
  3350 ;;		Unchanged: FFE9F/0
  3351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3352 ;;      Params:         0       0       0       0       0
  3353 ;;      Locals:         0       0       0       1       0
  3354 ;;      Temps:          0       0       0       0       0
  3355 ;;      Totals:         0       0       0       1       0
  3356 ;;Total ram usage:        1 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:    9
  3359 ;; This function calls:
  3360 ;;		Nothing
  3361 ;; This function is called by:
  3362 ;;		_main
  3363 ;;		_Send_ATComm
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366  04F8                     _CleanWifiRcv:	
  3367                           
  3368                           ;wifi.c: 9: unsigned char i = 0;
  3369                           
  3370 ;; hardware stack exceeded
  3371                           ; Regs used in _CleanWifiRcv: [wreg-fsr0h+status,2+status,0]
  3372  04F8  1683               	bsf	3,5	;RP0=1, select bank3
  3373  04F9  1703               	bsf	3,6	;RP1=1, select bank3
  3374  04FA  01D9               	clrf	CleanWifiRcv@i^(0+384)
  3375                           
  3376                           ;wifi.c: 10: for(i=0; i<=50; i++)
  3377  04FB  01D9               	clrf	CleanWifiRcv@i^(0+384)
  3378  04FC                     l9179:	
  3379                           
  3380                           ;wifi.c: 11: {
  3381                           ;wifi.c: 12: rcv_wifi[i] = 0;
  3382  04FC  0859               	movf	CleanWifiRcv@i^(0+384),w
  3383  04FD  3E10               	addlw	_rcv_wifi& (0+255)
  3384  04FE  0084               	movwf	4
  3385  04FF  1783               	bsf	3,7	;select IRP bank2
  3386  0500  0180               	clrf	0
  3387  0501  0AD9               	incf	CleanWifiRcv@i^(0+384),f
  3388  0502  3033               	movlw	51
  3389  0503  0259               	subwf	CleanWifiRcv@i^(0+384),w
  3390  0504  1C03               	skipc
  3391  0505  2CFC               	goto	l9179
  3392                           
  3393                           ;wifi.c: 13: }
  3394                           ;wifi.c: 15: WifiRcvCnt = 0;
  3395  0506  1283               	bcf	3,5	;RP0=0, select bank0
  3396  0507  1303               	bcf	3,6	;RP1=0, select bank0
  3397  0508  01EF               	clrf	_WifiRcvCnt
  3398  0509  0008               	return
  3399  050A                     __end_of_CleanWifiRcv:	
  3400  050A                     __ptext1194:	
  3401 ;; =============== function _strstr ends ============
  3402                           
  3403                           
  3404 ;; *************** function _Uart_1SendStr *****************
  3405 ;; Defined at:
  3406 ;;		line 41 in file "uart.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;  data_at         1    wreg     PTR const unsigned char 
  3409 ;;		 -> STR_16(16), STR_14(22), STR_13(11), STR_11(30), 
  3410 ;;		 -> STR_9(14), STR_7(9), STR_5(14), STR_3(7), 
  3411 ;;		 -> STR_1(5), 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;  data_at         1    1[BANK3 ] PTR const unsigned char 
  3414 ;;		 -> STR_16(16), STR_14(22), STR_13(11), STR_11(30), 
  3415 ;;		 -> STR_9(14), STR_7(9), STR_5(14), STR_3(7), 
  3416 ;;		 -> STR_1(5), 
  3417 ;; Return value:  Size  Location     Type
  3418 ;;		None               void
  3419 ;; Registers used:
  3420 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/100
  3423 ;;		On exit  : 60/160
  3424 ;;		Unchanged: FFF9F/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3426 ;;      Params:         0       0       0       0       0
  3427 ;;      Locals:         0       0       0       1       0
  3428 ;;      Temps:          0       0       0       0       0
  3429 ;;      Totals:         0       0       0       1       0
  3430 ;;Total ram usage:        1 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; Hardware stack levels required when called:   10
  3433 ;; This function calls:
  3434 ;;		_UART_1SendOneByte
  3435 ;; This function is called by:
  3436 ;;		_main
  3437 ;;		_Send_ATComm
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440  050A                     _Uart_1SendStr:	
  3441                           
  3442 ;; hardware stack exceeded
  3443                           ; Regs used in _Uart_1SendStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3444                           ;Uart_1SendStr@data_at stored from wreg
  3445  050A  1683               	bsf	3,5	;RP0=1, select bank3
  3446  050B  1703               	bsf	3,6	;RP1=1, select bank3
  3447  050C  00DA               	movwf	Uart_1SendStr@data_at^(0+384)
  3448  050D                     l9221:	
  3449                           ;uart.c: 42: while(*data_at)
  3450                           
  3451  050D  085A               	movf	Uart_1SendStr@data_at^(0+384),w
  3452  050E  0084               	movwf	4
  3453  050F  120A  118A  2021   	fcall	stringdir
      +       120A  118A         
  3454  0514  3800               	iorlw	0
  3455  0515  1903               	btfsc	3,2
  3456  0516  0008               	return
  3457                           
  3458                           ;uart.c: 43: {
  3459                           ;uart.c: 44: UART_1SendOneByte(*data_at++);
  3460  0517  085A               	movf	Uart_1SendStr@data_at^(0+384),w
  3461  0518  0084               	movwf	4
  3462  0519  120A  118A  2021   	fcall	stringdir
      +       120A  118A         
  3463  051E  2524  120A  118A   	fcall	_UART_1SendOneByte
  3464  0521  1703               	bsf	3,6	;RP1=1, select bank3
  3465  0522  0ADA               	incf	Uart_1SendStr@data_at^(0+384),f
  3466  0523  2D0D               	goto	l9221
  3467  0524                     __end_of_Uart_1SendStr:	
  3468  0524                     __ptext1199:	
  3469 ;; =============== function _strlen ends ============
  3470                           
  3471                           
  3472 ;; *************** function _UART_1SendOneByte *****************
  3473 ;; Defined at:
  3474 ;;		line 34 in file "uart.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;  c               1    wreg     unsigned char 
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;  c               1    0[BANK3 ] unsigned char 
  3479 ;; Return value:  Size  Location     Type
  3480 ;;		None               void
  3481 ;; Registers used:
  3482 ;;		wreg
  3483 ;; Tracked objects:
  3484 ;;		On entry : 60/160
  3485 ;;		On exit  : 60/120
  3486 ;;		Unchanged: FFF9F/0
  3487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3488 ;;      Params:         0       0       0       0       0
  3489 ;;      Locals:         0       0       0       1       0
  3490 ;;      Temps:          0       0       0       0       0
  3491 ;;      Totals:         0       0       0       1       0
  3492 ;;Total ram usage:        1 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; Hardware stack levels required when called:    9
  3495 ;; This function calls:
  3496 ;;		Nothing
  3497 ;; This function is called by:
  3498 ;;		_Uart_1SendStr
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501  0524                     _UART_1SendOneByte:	
  3502                           
  3503 ;; hardware stack exceeded
  3504                           ; Regs used in _UART_1SendOneByte: [wreg]
  3505                           ;UART_1SendOneByte@c stored from wreg
  3506  0524  00D9               	movwf	UART_1SendOneByte@c^(0+384)
  3507                           
  3508                           ;uart.c: 35: TXREG = c;
  3509  0525  0859               	movf	UART_1SendOneByte@c^(0+384),w
  3510  0526  1283               	bcf	3,5	;RP0=0, select bank0
  3511  0527  1303               	bcf	3,6	;RP1=0, select bank0
  3512  0528  0099               	movwf	25	;volatile
  3513  0529                     l2899:	
  3514                           ;uart.c: 36: while(!TRMT);
  3515                           
  3516  0529  1683               	bsf	3,5	;RP0=1, select bank1
  3517  052A  1898               	btfsc	24,1
  3518  052B  0008               	return
  3519  052C  2D29               	goto	l2899
  3520  052D                     __end_of_UART_1SendOneByte:	
  3521  052D                     __ptext1191:	
  3522 ;; =============== function _Init_Digitrons ends ============
  3523                           
  3524                           
  3525 ;; *************** function _Match *****************
  3526 ;; Defined at:
  3527 ;;		line 139 in file "wifi.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;  a               1    wreg     PTR const unsigned char 
  3530 ;;		 -> STR_17(3), STR_15(3), STR_12(3), STR_10(3), 
  3531 ;;		 -> STR_8(3), STR_6(3), STR_4(3), STR_2(3), 
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;  a               1   14[BANK3 ] PTR const unsigned char 
  3534 ;;		 -> STR_17(3), STR_15(3), STR_12(3), STR_10(3), 
  3535 ;;		 -> STR_8(3), STR_6(3), STR_4(3), STR_2(3), 
  3536 ;; Return value:  Size  Location     Type
  3537 ;;		None               void
  3538 ;; Registers used:
  3539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3540 ;; Tracked objects:
  3541 ;;		On entry : 60/160
  3542 ;;		On exit  : 60/60
  3543 ;;		Unchanged: FFE9F/0
  3544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3545 ;;      Params:         0       0       0       0       0
  3546 ;;      Locals:         0       0       0       1       0
  3547 ;;      Temps:          0       0       0       0       0
  3548 ;;      Totals:         0       0       0       1       0
  3549 ;;Total ram usage:        1 bytes
  3550 ;; Hardware stack levels used:    1
  3551 ;; Hardware stack levels required when called:   11
  3552 ;; This function calls:
  3553 ;;		_strstr
  3554 ;; This function is called by:
  3555 ;;		_Send_ATComm
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558  052D                     _Match:	
  3559                           
  3560 ;; hardware stack exceeded
  3561                           ; Regs used in _Match: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3562                           ;Match@a stored from wreg
  3563  052D  00E7               	movwf	Match@a^(0+384)
  3564                           
  3565                           ;wifi.c: 140: if(strstr(rcv_wifi,a)!=(0))
  3566  052E  00E5               	movwf	?_strstr^(0+384)
  3567  052F  3010               	movlw	_rcv_wifi& (0+255)
  3568  0530  253A  120A  118A   	fcall	_strstr
  3569  0533  3A00               	xorlw	0
  3570  0534  1903               	skipnz
  3571  0535  2D38               	goto	l9233
  3572                           
  3573                           ;wifi.c: 141: return 1;
  3574  0536  1403               	setc
  3575  0537  0008               	return
  3576  0538                     l9233:	
  3577                           
  3578                           ;wifi.c: 142: else
  3579                           ;wifi.c: 143: return 0;
  3580  0538  1003               	clrc
  3581  0539  0008               	return
  3582  053A                     __end_of_Match:	
  3583  053A                     __ptext1193:	
  3584 ;; =============== function _Digitron_Display ends ============
  3585                           
  3586                           
  3587 ;; *************** function _strstr *****************
  3588 ;; Defined at:
  3589 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\strstr.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;  s1              1    wreg     PTR const unsigned char 
  3592 ;;		 -> NULL(0), rcv_wifi(50), 
  3593 ;;  s2              1   12[BANK3 ] PTR const unsigned char 
  3594 ;;		 -> STR_17(3), STR_15(3), STR_12(3), STR_10(3), 
  3595 ;;		 -> STR_8(3), STR_6(3), STR_4(3), STR_2(3), 
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;  s1              1   13[BANK3 ] PTR const unsigned char 
  3598 ;;		 -> NULL(0), rcv_wifi(50), 
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      PTR unsigned char 
  3601 ;; Registers used:
  3602 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3603 ;; Tracked objects:
  3604 ;;		On entry : 60/160
  3605 ;;		On exit  : 60/60
  3606 ;;		Unchanged: FFE9F/0
  3607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3608 ;;      Params:         0       0       0       1       0
  3609 ;;      Locals:         0       0       0       1       0
  3610 ;;      Temps:          0       0       0       0       0
  3611 ;;      Totals:         0       0       0       2       0
  3612 ;;Total ram usage:        2 bytes
  3613 ;; Hardware stack levels used:    1
  3614 ;; Hardware stack levels required when called:   10
  3615 ;; This function calls:
  3616 ;;		_strlen
  3617 ;;		_strncmp
  3618 ;;		_strchr
  3619 ;; This function is called by:
  3620 ;;		_Match
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623  053A                     _strstr:	
  3624  053A                     L1:	
  3625  053A  00E6               	movwf	strstr@s1^(0+384)
  3626  053B  0866               	movf	strstr@s1^(0+384),w
  3627  053C  1903               	btfsc	3,2
  3628  053D  3400               	retlw	0
  3629  053E  0866               	movf	strstr@s1^(0+384),w
  3630  053F  0084               	movwf	4
  3631  0540  1783               	bsf	3,7	;select IRP bank2
  3632  0541  0880               	movf	0,f
  3633  0542  1903               	btfsc	3,2
  3634  0543  3400               	retlw	0
  3635                           
  3636 ;; hardware stack exceeded
  3637                           ; Regs used in _strstr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3638                           ;strstr@s1 stored from wreg
  3639  0544  0865               	movf	strstr@s2^(0+384),w
  3640  0545  00DF               	movwf	?_strncmp^(0+384)
  3641  0546  0865               	movf	strstr@s2^(0+384),w
  3642  0547  00D9               	movwf	?_strlen^(0+384)
  3643  0548  3080               	movlw	128
  3644  0549  00DA               	movwf	(?_strlen+1)^(0+384)
  3645  054A  2569  120A  118A   	fcall	_strlen
  3646  054D  085A               	movf	(?_strlen+1)^(0+384),w
  3647  054E  00E1               	movwf	((?_strncmp+1)^(0+384)+1)
  3648  054F  0859               	movf	?_strlen^(0+384),w
  3649  0550  00E0               	movwf	(?_strncmp^(0+384)+1)
  3650  0551  0866               	movf	strstr@s1^(0+384),w
  3651  0552  259B  120A  118A   	fcall	_strncmp
  3652  0555  0860               	movf	(?_strncmp+1)^(0+384),w
  3653  0556  045F               	iorwf	?_strncmp^(0+384),w
  3654  0557  1D03               	skipz
  3655  0558  2D5B               	goto	l9307
  3656  0559  0866               	movf	strstr@s1^(0+384),w
  3657  055A  0008               	return
  3658  055B                     l9307:	
  3659  055B  0865               	movf	strstr@s2^(0+384),w
  3660  055C  0084               	movwf	4
  3661  055D  120A  118A  2021   	fcall	stringdir
      +       120A  118A         
  3662  0562  00D9               	movwf	?_strchr^(0+384)
  3663  0563  01DA               	clrf	(?_strchr+1)^(0+384)
  3664  0564  0A66               	incf	strstr@s1^(0+384),w
  3665  0565  25D2  120A  118A   	fcall	_strchr
  3666  0568  2D3A               	goto	L1
  3667  0569                     __end_of_strstr:	
  3668  0569                     __ptext1198:	
  3669 ;; =============== function _strncmp ends ============
  3670                           
  3671                           
  3672 ;; *************** function _strlen *****************
  3673 ;; Defined at:
  3674 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\strlen.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;  s               2    0[BANK3 ] PTR const unsigned char 
  3677 ;;		 -> Analyze_GpsData@info(50), rcv_wifi(50), STR_17(3), STR_15(3), 
  3678 ;;		 -> STR_12(3), STR_10(3), STR_8(3), STR_6(3), 
  3679 ;;		 -> STR_4(3), STR_2(3), 
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;  cp              2    4[BANK3 ] PTR const unsigned char 
  3682 ;;		 -> Analyze_GpsData@info(50), rcv_wifi(50), STR_17(3), STR_15(3), 
  3683 ;;		 -> STR_12(3), STR_10(3), STR_8(3), STR_6(3), 
  3684 ;;		 -> STR_4(3), STR_2(3), 
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  2    0[BANK3 ] unsigned int 
  3687 ;; Registers used:
  3688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3689 ;; Tracked objects:
  3690 ;;		On entry : 60/160
  3691 ;;		On exit  : 60/60
  3692 ;;		Unchanged: FFE9F/0
  3693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3694 ;;      Params:         0       0       0       2       0
  3695 ;;      Locals:         0       0       0       2       0
  3696 ;;      Temps:          0       0       0       2       0
  3697 ;;      Totals:         0       0       0       6       0
  3698 ;;Total ram usage:        6 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; Hardware stack levels required when called:    9
  3701 ;; This function calls:
  3702 ;;		Nothing
  3703 ;; This function is called by:
  3704 ;;		_strstr
  3705 ;;		_mid
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708  0569                     _strlen:	
  3709                           
  3710 ;; hardware stack exceeded
  3711                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3712  0569  085A               	movf	(strlen@s+1)^(0+384),w
  3713  056A  00DE               	movwf	(strlen@cp+1)^(0+384)
  3714  056B  0859               	movf	strlen@s^(0+384),w
  3715  056C  00DD               	movwf	strlen@cp^(0+384)
  3716  056D                     l9239:	
  3717  056D  1683               	bsf	3,5	;RP0=1, select bank3
  3718  056E  1703               	bsf	3,6	;RP1=1, select bank3
  3719  056F  085E               	movf	(strlen@cp+1)^(0+384),w
  3720  0570  00DC               	movwf	(??_strlen^(0+384)+1)
  3721  0571  085D               	movf	strlen@cp^(0+384),w
  3722  0572  00DB               	movwf	??_strlen^(0+384)
  3723  0573  0ADD               	incf	strlen@cp^(0+384),f
  3724  0574  1903               	skipnz
  3725  0575  0ADE               	incf	(strlen@cp+1)^(0+384),f
  3726  0576  085C               	movf	(??_strlen+1)^(0+384),w
  3727  0577  1283               	bcf	3,5	;RP0=0, select bank0
  3728  0578  1303               	bcf	3,6	;RP1=0, select bank0
  3729  0579  00FF               	movwf	127
  3730  057A  1683               	bsf	3,5	;RP0=1, select bank3
  3731  057B  1703               	bsf	3,6	;RP1=1, select bank3
  3732  057C  085B               	movf	??_strlen^(0+384),w
  3733  057D  0084               	movwf	4
  3734  057E  1283               	bcf	3,5	;RP0=0, select bank0
  3735  057F  1303               	bcf	3,6	;RP1=0, select bank0
  3736  0580  120A  118A  2017   	fcall	stringtab
      +       120A  118A         
  3737  0585  3800               	iorlw	0
  3738  0586  1D03               	skipz
  3739  0587  2D6D               	goto	l9239
  3740  0588  1683               	bsf	3,5	;RP0=1, select bank3
  3741  0589  1703               	bsf	3,6	;RP1=1, select bank3
  3742  058A  0859               	movf	strlen@s^(0+384),w
  3743  058B  025D               	subwf	strlen@cp^(0+384),w
  3744  058C  00DB               	movwf	??_strlen^(0+384)
  3745  058D  085A               	movf	(strlen@s+1)^(0+384),w
  3746  058E  1C03               	skipc
  3747  058F  0A5A               	incf	(strlen@s+1)^(0+384),w
  3748  0590  025E               	subwf	(strlen@cp+1)^(0+384),w
  3749  0591  00DC               	movwf	(??_strlen+1)^(0+384)
  3750  0592  085B               	movf	??_strlen^(0+384),w
  3751  0593  3EFF               	addlw	255
  3752  0594  00D9               	movwf	?_strlen^(0+384)
  3753  0595  085C               	movf	(??_strlen+1)^(0+384),w
  3754  0596  1803               	skipnc
  3755  0597  3E01               	addlw	1
  3756  0598  3EFF               	addlw	255
  3757  0599  00DA               	movwf	(?_strlen+1)^(0+384)
  3758  059A  0008               	return
  3759  059B                     __end_of_strlen:	
  3760  059B                     __ptext1197:	
  3761 ;; =============== function _strchr ends ============
  3762                           
  3763                           
  3764 ;; *************** function _strncmp *****************
  3765 ;; Defined at:
  3766 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\strncmp.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;  s1              1    wreg     PTR const unsigned char 
  3769 ;;		 -> NULL(0), rcv_wifi(50), 
  3770 ;;  s2              1    6[BANK3 ] PTR const unsigned char 
  3771 ;;		 -> STR_17(3), STR_15(3), STR_12(3), STR_10(3), 
  3772 ;;		 -> STR_8(3), STR_6(3), STR_4(3), STR_2(3), 
  3773 ;;  len             2    7[BANK3 ] unsigned int 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;  s1              1   11[BANK3 ] PTR const unsigned char 
  3776 ;;		 -> NULL(0), rcv_wifi(50), 
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  2    6[BANK3 ] int 
  3779 ;; Registers used:
  3780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3781 ;; Tracked objects:
  3782 ;;		On entry : 60/160
  3783 ;;		On exit  : 60/60
  3784 ;;		Unchanged: FFE9F/0
  3785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3786 ;;      Params:         0       0       0       3       0
  3787 ;;      Locals:         0       0       0       1       0
  3788 ;;      Temps:          0       0       0       2       0
  3789 ;;      Totals:         0       0       0       6       0
  3790 ;;Total ram usage:        6 bytes
  3791 ;; Hardware stack levels used:    1
  3792 ;; Hardware stack levels required when called:    9
  3793 ;; This function calls:
  3794 ;;		Nothing
  3795 ;; This function is called by:
  3796 ;;		_strstr
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799  059B                     _strncmp:	
  3800                           
  3801 ;; hardware stack exceeded
  3802                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  3803                           ;strncmp@s1 stored from wreg
  3804  059B  00E4               	movwf	strncmp@s1^(0+384)
  3805  059C                     l9767:	
  3806  059C  3001               	movlw	1
  3807  059D  02E0               	subwf	strncmp@len^(0+384),f
  3808  059E  3000               	movlw	0
  3809  059F  1C03               	skipc
  3810  05A0  03E1               	decf	(strncmp@len+1)^(0+384),f
  3811  05A1  02E1               	subwf	(strncmp@len+1)^(0+384),f
  3812  05A2  0A60               	incf	strncmp@len^(0+384),w
  3813  05A3  1903               	skipnz
  3814  05A4  0A61               	incf	(strncmp@len+1)^(0+384),w
  3815  05A5  1903               	btfsc	3,2
  3816  05A6  2DCF               	goto	l9769
  3817  05A7  0864               	movf	strncmp@s1^(0+384),w
  3818  05A8  0084               	movwf	4
  3819  05A9  1783               	bsf	3,7	;select IRP bank2
  3820  05AA  0880               	movf	0,f
  3821  05AB  1903               	skipnz
  3822  05AC  2DBB               	goto	l9761
  3823  05AD  085F               	movf	strncmp@s2^(0+384),w
  3824  05AE  0084               	movwf	4
  3825  05AF  120A  118A  2021   	fcall	stringdir
      +       120A  118A         
  3826  05B4  00E2               	movwf	??_strncmp^(0+384)
  3827  05B5  0864               	movf	strncmp@s1^(0+384),w
  3828  05B6  0084               	movwf	4
  3829  05B7  0800               	movf	0,w
  3830  05B8  0662               	xorwf	??_strncmp^(0+384),w
  3831  05B9  1903               	skipnz
  3832  05BA  2DCC               	goto	l9765
  3833  05BB                     l9761:	
  3834  05BB  085F               	movf	strncmp@s2^(0+384),w
  3835  05BC  0084               	movwf	4
  3836  05BD  120A  118A  2021   	fcall	stringdir
  3837  05C0  00E2               	movwf	??_strncmp^(0+384)
  3838  05C1  0864               	movf	strncmp@s1^(0+384),w
  3839  05C2  0084               	movwf	4
  3840  05C3  0800               	movf	0,w
  3841  05C4  00E3               	movwf	(??_strncmp+1)^(0+384)
  3842  05C5  0862               	movf	??_strncmp^(0+384),w
  3843  05C6  0263               	subwf	(??_strncmp+1)^(0+384),w
  3844  05C7  00DF               	movwf	?_strncmp^(0+384)
  3845  05C8  01E0               	clrf	(?_strncmp^(0+384)+1)
  3846  05C9  1C03               	skipc
  3847  05CA  03E0               	decf	(?_strncmp+1)^(0+384),f
  3848  05CB  0008               	return
  3849  05CC                     l9765:	
  3850  05CC  0AE4               	incf	strncmp@s1^(0+384),f
  3851  05CD  0ADF               	incf	strncmp@s2^(0+384),f
  3852  05CE  2D9C               	goto	l9767
  3853  05CF                     l9769:	
  3854  05CF  01DF               	clrf	?_strncmp^(0+384)
  3855  05D0  01E0               	clrf	(?_strncmp+1)^(0+384)
  3856  05D1  0008               	return
  3857  05D2                     __end_of_strncmp:	
  3858  05D2                     __ptext1196:	
  3859 ;; =============== function _Digitron_Command ends ============
  3860                           
  3861                           
  3862 ;; *************** function _strchr *****************
  3863 ;; Defined at:
  3864 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\strchr.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;  ptr             1    wreg     PTR const unsigned char 
  3867 ;;		 -> NULL(0), rcv_wifi(50), 
  3868 ;;  chr             2    0[BANK3 ] int 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;  ptr             1    2[BANK3 ] PTR const unsigned char 
  3871 ;;		 -> NULL(0), rcv_wifi(50), 
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  1    wreg      PTR unsigned char 
  3874 ;; Registers used:
  3875 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3876 ;; Tracked objects:
  3877 ;;		On entry : 60/160
  3878 ;;		On exit  : 160/160
  3879 ;;		Unchanged: FFE9F/0
  3880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3881 ;;      Params:         0       0       0       2       0
  3882 ;;      Locals:         0       0       0       1       0
  3883 ;;      Temps:          0       0       0       0       0
  3884 ;;      Totals:         0       0       0       3       0
  3885 ;;Total ram usage:        3 bytes
  3886 ;; Hardware stack levels used:    1
  3887 ;; Hardware stack levels required when called:    9
  3888 ;; This function calls:
  3889 ;;		Nothing
  3890 ;; This function is called by:
  3891 ;;		_strstr
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894  05D2                     _strchr:	
  3895                           
  3896 ;; hardware stack exceeded
  3897                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0]
  3898                           ;strchr@ptr stored from wreg
  3899  05D2  00DB               	movwf	strchr@ptr^(0+384)
  3900  05D3                     l6506:	
  3901  05D3  085B               	movf	strchr@ptr^(0+384),w
  3902  05D4  0084               	movwf	4
  3903  05D5  1783               	bsf	3,7	;select IRP bank2
  3904  05D6  0800               	movf	0,w
  3905  05D7  0659               	xorwf	strchr@chr^(0+384),w
  3906  05D8  1D03               	skipz
  3907  05D9  2DDC               	goto	l9779
  3908  05DA  085B               	movf	strchr@ptr^(0+384),w
  3909  05DB  0008               	return
  3910  05DC                     l9779:	
  3911  05DC  085B               	movf	strchr@ptr^(0+384),w
  3912  05DD  0ADB               	incf	strchr@ptr^(0+384),f
  3913  05DE  0084               	movwf	4
  3914  05DF  0880               	movf	0,f
  3915  05E0  1903               	btfsc	3,2
  3916  05E1  3400               	retlw	0
  3917  05E2  2DD3               	goto	l6506
  3918  05E3                     __end_of_strchr:	
  3919                           
  3920                           	psect	text1190
  3921  05E3                     __ptext1190:	
  3922 ;; =============== function _Send_ATComm ends ============
  3923                           
  3924                           
  3925 ;; *************** function _Init_Digitrons *****************
  3926 ;; Defined at:
  3927 ;;		line 11 in file "LED/led.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;		None
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;		None
  3932 ;; Return value:  Size  Location     Type
  3933 ;;		None               void
  3934 ;; Registers used:
  3935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3936 ;; Tracked objects:
  3937 ;;		On entry : 17F/0
  3938 ;;		On exit  : 17F/160
  3939 ;;		Unchanged: FFE80/0
  3940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3941 ;;      Params:         0       0       0       0       0
  3942 ;;      Locals:         0       0       0       0       0
  3943 ;;      Temps:          0       0       0       0       0
  3944 ;;      Totals:         0       0       0       0       0
  3945 ;;Total ram usage:        0 bytes
  3946 ;; Hardware stack levels used:    1
  3947 ;; Hardware stack levels required when called:   12
  3948 ;; This function calls:
  3949 ;;		_queueArray_init
  3950 ;;		_Digitron_Display
  3951 ;; This function is called by:
  3952 ;;		_main
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955  05E3                     _Init_Digitrons:	
  3956                           
  3957                           ;led.c: 12: queueArray_init(&digitron1);
  3958                           
  3959 ;; hardware stack exceeded
  3960                           ; Regs used in _Init_Digitrons: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3961  05E3  30AC               	movlw	_digitron1& (0+255)
  3962  05E4  25F9  120A  118A   	fcall	_queueArray_init
  3963                           
  3964                           ;led.c: 13: queueArray_init(&digitron2);
  3965  05E7  30BA               	movlw	_digitron2& (0+255)
  3966  05E8  25F9  120A  118A   	fcall	_queueArray_init
  3967                           
  3968                           ;led.c: 14: queueArray_init(&digitron3);
  3969  05EB  30C8               	movlw	_digitron3& (0+255)
  3970  05EC  25F9  120A  118A   	fcall	_queueArray_init
  3971                           
  3972                           ;led.c: 16: Digitron_Display(&digitron1);
  3973  05EF  30AC               	movlw	_digitron1& (0+255)
  3974  05F0  261E  120A  118A   	fcall	_Digitron_Display
  3975                           
  3976                           ;led.c: 17: Digitron_Display(&digitron2);
  3977  05F3  30BA               	movlw	_digitron2& (0+255)
  3978  05F4  261E  120A  118A   	fcall	_Digitron_Display
  3979                           
  3980                           ;led.c: 18: Digitron_Display(&digitron3);
  3981  05F7  30C8               	movlw	_digitron3& (0+255)
  3982  05F8  2E1E               	ljmp	_Digitron_Display
  3983  05F9                     __end_of_Init_Digitrons:	
  3984  05F9                     __ptext1207:	
  3985 ;; =============== function _Digitron_Send_8bit ends ============
  3986                           
  3987                           
  3988 ;; *************** function _queueArray_init *****************
  3989 ;; Defined at:
  3990 ;;		line 6 in file "data_structure/queue.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;  Q               1    wreg     PTR struct .
  3993 ;;		 -> digitron3(14), digitron2(14), digitron1(14), 
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;  Q               1    3[BANK3 ] PTR struct .
  3996 ;;		 -> digitron3(14), digitron2(14), digitron1(14), 
  3997 ;;  j               1    5[BANK3 ] unsigned char 
  3998 ;;  i               1    4[BANK3 ] unsigned char 
  3999 ;; Return value:  Size  Location     Type
  4000 ;;		None               void
  4001 ;; Registers used:
  4002 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4003 ;; Tracked objects:
  4004 ;;		On entry : 1F/0
  4005 ;;		On exit  : 17F/160
  4006 ;;		Unchanged: FFE80/0
  4007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4008 ;;      Params:         0       0       0       0       0
  4009 ;;      Locals:         0       0       0       3       0
  4010 ;;      Temps:          0       0       0       3       0
  4011 ;;      Totals:         0       0       0       6       0
  4012 ;;Total ram usage:        6 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; Hardware stack levels required when called:    9
  4015 ;; This function calls:
  4016 ;;		Nothing
  4017 ;; This function is called by:
  4018 ;;		_Init_Digitrons
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021  05F9                     _queueArray_init:	
  4022                           
  4023 ;; hardware stack exceeded
  4024                           ; Regs used in _queueArray_init: [wreg-fsr0h+status,2+status,0]
  4025                           ;queueArray_init@Q stored from wreg
  4026  05F9  1683               	bsf	3,5	;RP0=1, select bank3
  4027  05FA  1703               	bsf	3,6	;RP1=1, select bank3
  4028  05FB  00DC               	movwf	queueArray_init@Q^(0+384)
  4029                           
  4030                           ;queue.c: 7: Q->front = 0;
  4031  05FC  3E01               	addlw	1
  4032  05FD  0084               	movwf	4
  4033  05FE  1783               	bsf	3,7	;select IRP bank2
  4034  05FF  0180               	clrf	0
  4035                           
  4036                           ;queue.c: 8: Q->rear = 0;
  4037  0600  085C               	movf	queueArray_init@Q^(0+384),w
  4038  0601  0084               	movwf	4
  4039  0602  0180               	clrf	0
  4040                           
  4041                           ;queue.c: 9: for(unsigned char i=0; i<3; i++)
  4042  0603  01DD               	clrf	queueArray_init@i^(0+384)
  4043  0604                     l8947:	
  4044                           
  4045                           ;queue.c: 10: for(unsigned char j=0; j<4; j++)
  4046  0604  01DE               	clrf	queueArray_init@j^(0+384)
  4047  0605                     l8953:	
  4048                           
  4049                           ;queue.c: 11: Q->data[i][j] = 0;
  4050  0605  085D               	movf	queueArray_init@i^(0+384),w
  4051  0606  00D9               	movwf	??_queueArray_init^(0+384)
  4052  0607  1003               	clrc
  4053  0608  0DD9               	rlf	??_queueArray_init^(0+384),f
  4054  0609  1003               	clrc
  4055  060A  0D59               	rlf	??_queueArray_init^(0+384),w
  4056  060B  075C               	addwf	queueArray_init@Q^(0+384),w
  4057  060C  00DA               	movwf	(??_queueArray_init+1)^(0+384)
  4058  060D  085E               	movf	queueArray_init@j^(0+384),w
  4059  060E  075A               	addwf	(??_queueArray_init+1)^(0+384),w
  4060  060F  00DB               	movwf	(??_queueArray_init+2)^(0+384)
  4061  0610  3E02               	addlw	2
  4062  0611  0084               	movwf	4
  4063  0612  0180               	clrf	0
  4064  0613  0ADE               	incf	queueArray_init@j^(0+384),f
  4065  0614  3004               	movlw	4
  4066  0615  025E               	subwf	queueArray_init@j^(0+384),w
  4067  0616  1C03               	skipc
  4068  0617  2E05               	goto	l8953
  4069  0618  0ADD               	incf	queueArray_init@i^(0+384),f
  4070  0619  3003               	movlw	3
  4071  061A  025D               	subwf	queueArray_init@i^(0+384),w
  4072  061B  1803               	btfsc	3,0
  4073  061C  0008               	return
  4074  061D  2E04               	goto	l8947
  4075  061E                     __end_of_queueArray_init:	
  4076  061E                     __ptext1192:	
  4077 ;; =============== function _Match ends ============
  4078                           
  4079                           
  4080 ;; *************** function _Digitron_Display *****************
  4081 ;; Defined at:
  4082 ;;		line 23 in file "LED/led.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;  que             1    wreg     PTR struct .
  4085 ;;		 -> digitron3(14), digitron2(14), digitron1(14), 
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;  que             1    8[BANK3 ] PTR struct .
  4088 ;;		 -> digitron3(14), digitron2(14), digitron1(14), 
  4089 ;;  num             1    9[BANK3 ] unsigned char 
  4090 ;;  j               1   11[BANK3 ] unsigned char 
  4091 ;;  i               1   12[BANK3 ] unsigned char 
  4092 ;;  fro             1   10[BANK3 ] unsigned char 
  4093 ;; Return value:  Size  Location     Type
  4094 ;;		None               void
  4095 ;; Registers used:
  4096 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4097 ;; Tracked objects:
  4098 ;;		On entry : 17F/160
  4099 ;;		On exit  : 17F/160
  4100 ;;		Unchanged: FFE80/0
  4101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4102 ;;      Params:         0       0       0       0       0
  4103 ;;      Locals:         0       0       0       5       0
  4104 ;;      Temps:          0       0       0       3       0
  4105 ;;      Totals:         0       0       0       8       0
  4106 ;;Total ram usage:        8 bytes
  4107 ;; Hardware stack levels used:    1
  4108 ;; Hardware stack levels required when called:   11
  4109 ;; This function calls:
  4110 ;;		_Digitron_Command
  4111 ;;		_Digitron_Send_8bit
  4112 ;; This function is called by:
  4113 ;;		_Init_Digitrons
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116  061E                     _Digitron_Display:	
  4117                           
  4118 ;; hardware stack exceeded
  4119                           ; Regs used in _Digitron_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4120                           ;Digitron_Display@que stored from wreg
  4121  061E  00E1               	movwf	Digitron_Display@que^(0+384)
  4122                           
  4123                           ;led.c: 24: unsigned char fro = que->front;
  4124  061F  3E01               	addlw	1
  4125  0620  0084               	movwf	4
  4126  0621  0800               	movf	0,w
  4127  0622  00E3               	movwf	Digitron_Display@fro^(0+384)
  4128                           
  4129                           ;led.c: 25: for(unsigned char i=0; i<3; i++)
  4130  0623  01E5               	clrf	Digitron_Display@i^(0+384)
  4131  0624                     l8971:	
  4132                           
  4133                           ;led.c: 26: {
  4134                           ;led.c: 27: if(fro+i == 3)
  4135  0624  0863               	movf	Digitron_Display@fro^(0+384),w
  4136  0625  0765               	addwf	Digitron_Display@i^(0+384),w
  4137  0626  00DE               	movwf	??_Digitron_Display^(0+384)
  4138  0627  01DF               	clrf	(??_Digitron_Display^(0+384)+1)
  4139  0628  0DDF               	rlf	(??_Digitron_Display+1)^(0+384),f
  4140  0629  3A03               	xorlw	3
  4141  062A  045F               	iorwf	(??_Digitron_Display+1)^(0+384),w
  4142  062B  1D03               	skipz
  4143  062C  2E2F               	goto	l8975
  4144                           
  4145                           ;led.c: 28: fro = 0;
  4146  062D  01E3               	clrf	Digitron_Display@fro^(0+384)
  4147  062E  2E31               	goto	l8977
  4148  062F                     l8975:	
  4149                           
  4150                           ;led.c: 29: else
  4151                           ;led.c: 30: fro = fro+i;
  4152  062F  0865               	movf	Digitron_Display@i^(0+384),w
  4153  0630  07E3               	addwf	Digitron_Display@fro^(0+384),f
  4154  0631                     l8977:	
  4155                           
  4156                           ;led.c: 32: Digitron_Command(i, 0x00);
  4157  0631  01DC               	clrf	?_Digitron_Command^(0+384)
  4158  0632  0865               	movf	Digitron_Display@i^(0+384),w
  4159  0633  2698  120A  118A   	fcall	_Digitron_Command
  4160                           
  4161                           ;led.c: 33: Digitron_Command(i, 0x40);
  4162  0636  3040               	movlw	64
  4163  0637  00DC               	movwf	?_Digitron_Command^(0+384)
  4164  0638  0865               	movf	Digitron_Display@i^(0+384),w
  4165  0639  2698  120A  118A   	fcall	_Digitron_Command
  4166                           
  4167                           ;led.c: 34: Digitron_Command(i, 0xc0);
  4168  063C  30C0               	movlw	192
  4169  063D  00DC               	movwf	?_Digitron_Command^(0+384)
  4170  063E  0865               	movf	Digitron_Display@i^(0+384),w
  4171  063F  2698  120A  118A   	fcall	_Digitron_Command
  4172                           
  4173                           ;led.c: 35: for(unsigned char j=0;j<4;j++)
  4174  0642  01E4               	clrf	Digitron_Display@j^(0+384)
  4175  0643                     l8989:	
  4176                           
  4177                           ;led.c: 36: {
  4178                           ;led.c: 37: unsigned char num = que->data[fro][j]-0x30;
  4179  0643  0863               	movf	Digitron_Display@fro^(0+384),w
  4180  0644  00DE               	movwf	??_Digitron_Display^(0+384)
  4181  0645  1003               	clrc
  4182  0646  0DDE               	rlf	??_Digitron_Display^(0+384),f
  4183  0647  1003               	clrc
  4184  0648  0D5E               	rlf	??_Digitron_Display^(0+384),w
  4185  0649  0761               	addwf	Digitron_Display@que^(0+384),w
  4186  064A  00DF               	movwf	(??_Digitron_Display+1)^(0+384)
  4187  064B  0864               	movf	Digitron_Display@j^(0+384),w
  4188  064C  075F               	addwf	(??_Digitron_Display+1)^(0+384),w
  4189  064D  00E0               	movwf	(??_Digitron_Display+2)^(0+384)
  4190  064E  3E02               	addlw	2
  4191  064F  0084               	movwf	4
  4192  0650  0800               	movf	0,w
  4193  0651  3ED0               	addlw	208
  4194  0652  00E2               	movwf	Digitron_Display@num^(0+384)
  4195                           
  4196                           ;led.c: 38: if(num>10)
  4197  0653  300B               	movlw	11
  4198  0654  0262               	subwf	Digitron_Display@num^(0+384),w
  4199  0655  1C03               	skipc
  4200  0656  2E59               	goto	l8995
  4201                           
  4202                           ;led.c: 39: {
  4203                           ;led.c: 41: num = 9;
  4204  0657  3009               	movlw	9
  4205  0658  00E2               	movwf	Digitron_Display@num^(0+384)
  4206  0659                     l8995:	
  4207                           
  4208                           ;led.c: 42: }
  4209                           ;led.c: 43: Digitron_Send_8bit(CODE[num]);
  4210  0659  0862               	movf	Digitron_Display@num^(0+384),w
  4211  065A  3E01               	addlw	low (_CODE-__stringbase)
  4212  065B  0084               	movwf	4
  4213  065C  120A  118A  2021   	fcall	stringdir
      +       120A  118A         
  4214  0661  267D  120A  118A   	fcall	_Digitron_Send_8bit
  4215                           
  4216                           ;led.c: 44: Digitron_Send_8bit(0);
  4217  0664  3000               	movlw	0
  4218  0665  267D  120A  118A   	fcall	_Digitron_Send_8bit
  4219  0668  0AE4               	incf	Digitron_Display@j^(0+384),f
  4220  0669  3004               	movlw	4
  4221  066A  0264               	subwf	Digitron_Display@j^(0+384),w
  4222  066B  1C03               	skipc
  4223  066C  2E43               	goto	l8989
  4224                           
  4225                           ;led.c: 46: }
  4226                           ;led.c: 47: Digitron_Send_8bit(0x8F);
  4227  066D  308F               	movlw	143
  4228  066E  267D  120A  118A   	fcall	_Digitron_Send_8bit
  4229                           
  4230                           ;led.c: 48: PORTD = 0xF0;
  4231  0671  30F0               	movlw	240
  4232  0672  1283               	bcf	3,5	;RP0=0, select bank0
  4233  0673  1303               	bcf	3,6	;RP1=0, select bank0
  4234  0674  0088               	movwf	8	;volatile
  4235  0675  1683               	bsf	3,5	;RP0=1, select bank3
  4236  0676  1703               	bsf	3,6	;RP1=1, select bank3
  4237  0677  0AE5               	incf	Digitron_Display@i^(0+384),f
  4238  0678  3003               	movlw	3
  4239  0679  0265               	subwf	Digitron_Display@i^(0+384),w
  4240  067A  1803               	btfsc	3,0
  4241  067B  0008               	return
  4242  067C  2E24               	goto	l8971
  4243  067D                     __end_of_Digitron_Display:	
  4244  067D                     __ptext1206:	
  4245 ;; =============== function _delay_us ends ============
  4246                           
  4247                           
  4248 ;; *************** function _Digitron_Send_8bit *****************
  4249 ;; Defined at:
  4250 ;;		line 4 in file "TM1616/TM1616.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;  dat             1    wreg     unsigned char 
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;  dat             1    0[BANK3 ] unsigned char 
  4255 ;;  i               1    1[BANK3 ] unsigned char 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;		None               void
  4258 ;; Registers used:
  4259 ;;		wreg, status,2, status,0
  4260 ;; Tracked objects:
  4261 ;;		On entry : 17F/160
  4262 ;;		On exit  : 17F/160
  4263 ;;		Unchanged: FFE80/0
  4264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4265 ;;      Params:         0       0       0       0       0
  4266 ;;      Locals:         0       0       0       2       0
  4267 ;;      Temps:          0       0       0       0       0
  4268 ;;      Totals:         0       0       0       2       0
  4269 ;;Total ram usage:        2 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; Hardware stack levels required when called:    9
  4272 ;; This function calls:
  4273 ;;		Nothing
  4274 ;; This function is called by:
  4275 ;;		_Digitron_Display
  4276 ;;		_Digitron_Command
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279  067D                     _Digitron_Send_8bit:	
  4280                           
  4281 ;; hardware stack exceeded
  4282                           ; Regs used in _Digitron_Send_8bit: [wreg+status,2+status,0]
  4283                           ;Digitron_Send_8bit@dat stored from wreg
  4284  067D  00D9               	movwf	Digitron_Send_8bit@dat^(0+384)
  4285                           
  4286                           ;TM1616.c: 5: unsigned char i;
  4287                           ;TM1616.c: 6: for(i=0;i<8;i++)
  4288  067E  01DA               	clrf	Digitron_Send_8bit@i^(0+384)
  4289  067F                     l1726:	
  4290                           
  4291                           ;TM1616.c: 7: {
  4292                           ;TM1616.c: 8: if(dat&0x01) {
  4293  067F  1C59               	btfss	Digitron_Send_8bit@dat^(0+384),0
  4294  0680  2E85               	goto	l1728
  4295                           
  4296                           ;TM1616.c: 9: RC3=1;
  4297  0681  1283               	bcf	3,5	;RP0=0, select bank0
  4298  0682  1303               	bcf	3,6	;RP1=0, select bank0
  4299  0683  1587               	bsf	7,3
  4300                           
  4301                           ;TM1616.c: 10: }
  4302  0684  2E88               	goto	l1729
  4303  0685                     l1728:	
  4304                           
  4305                           ;TM1616.c: 11: else{ RC3=0;}
  4306  0685  1283               	bcf	3,5	;RP0=0, select bank0
  4307  0686  1303               	bcf	3,6	;RP1=0, select bank0
  4308  0687  1187               	bcf	7,3
  4309  0688                     l1729:	
  4310                           
  4311                           ;TM1616.c: 12: RC2=0;
  4312  0688  1107               	bcf	7,2
  4313                           
  4314                           ;TM1616.c: 13: dat=dat>>1;
  4315  0689  1683               	bsf	3,5	;RP0=1, select bank3
  4316  068A  1703               	bsf	3,6	;RP1=1, select bank3
  4317  068B  1003               	clrc
  4318  068C  0CD9               	rrf	Digitron_Send_8bit@dat^(0+384),f
  4319                           
  4320                           ;TM1616.c: 14: RC2=1;
  4321  068D  1283               	bcf	3,5	;RP0=0, select bank0
  4322  068E  1303               	bcf	3,6	;RP1=0, select bank0
  4323  068F  1507               	bsf	7,2
  4324  0690  1683               	bsf	3,5	;RP0=1, select bank3
  4325  0691  1703               	bsf	3,6	;RP1=1, select bank3
  4326  0692  0ADA               	incf	Digitron_Send_8bit@i^(0+384),f
  4327  0693  3008               	movlw	8
  4328  0694  025A               	subwf	Digitron_Send_8bit@i^(0+384),w
  4329  0695  1803               	btfsc	3,0
  4330  0696  0008               	return
  4331  0697  2E7F               	goto	l1726
  4332  0698                     __end_of_Digitron_Send_8bit:	
  4333  0698                     __ptext1195:	
  4334 ;; =============== function _Uart_1SendStr ends ============
  4335                           
  4336                           
  4337 ;; *************** function _Digitron_Command *****************
  4338 ;; Defined at:
  4339 ;;		line 19 in file "TM1616/TM1616.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  device          1    wreg     unsigned char 
  4342 ;;  com             1    3[BANK3 ] unsigned char 
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;  device          1    4[BANK3 ] unsigned char 
  4345 ;; Return value:  Size  Location     Type
  4346 ;;		None               void
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, status,0, pclath, cstack
  4349 ;; Tracked objects:
  4350 ;;		On entry : 17F/160
  4351 ;;		On exit  : 17F/160
  4352 ;;		Unchanged: FFE80/0
  4353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4354 ;;      Params:         0       0       0       1       0
  4355 ;;      Locals:         0       0       0       1       0
  4356 ;;      Temps:          0       0       0       0       0
  4357 ;;      Totals:         0       0       0       2       0
  4358 ;;Total ram usage:        2 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:   10
  4361 ;; This function calls:
  4362 ;;		_delay_us
  4363 ;;		_Digitron_Send_8bit
  4364 ;; This function is called by:
  4365 ;;		_Digitron_Display
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368  0698                     _Digitron_Command:	
  4369                           
  4370 ;; hardware stack exceeded
  4371                           ; Regs used in _Digitron_Command: [wreg+status,2+status,0+pclath+cstack]
  4372                           ;Digitron_Command@device stored from wreg
  4373  0698  00DD               	movwf	Digitron_Command@device^(0+384)
  4374                           
  4375                           ;TM1616.c: 20: PORTD = 0xF0;
  4376  0699  30F0               	movlw	240
  4377  069A  1283               	bcf	3,5	;RP0=0, select bank0
  4378  069B  1303               	bcf	3,6	;RP1=0, select bank0
  4379  069C  0088               	movwf	8	;volatile
  4380                           
  4381                           ;TM1616.c: 21: PORTD = device;
  4382  069D  1683               	bsf	3,5	;RP0=1, select bank3
  4383  069E  1703               	bsf	3,6	;RP1=1, select bank3
  4384  069F  085D               	movf	Digitron_Command@device^(0+384),w
  4385  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  4386  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  4387  06A2  0088               	movwf	8	;volatile
  4388                           
  4389                           ;TM1616.c: 22: delay_us(1);
  4390  06A3  3001               	movlw	1
  4391  06A4  26A9  120A  118A   	fcall	_delay_us
  4392                           
  4393                           ;TM1616.c: 23: Digitron_Send_8bit(com);
  4394  06A7  085C               	movf	Digitron_Command@com^(0+384),w
  4395  06A8  2E7D               	ljmp	_Digitron_Send_8bit
  4396  06A9                     __end_of_Digitron_Command:	
  4397  06A9                     __ptext1205:	
  4398 ;; =============== function _initUART ends ============
  4399                           
  4400                           
  4401 ;; *************** function _delay_us *****************
  4402 ;; Defined at:
  4403 ;;		line 29 in file "timer.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;  usec            1    wreg     unsigned char 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;  usec            1    0[BANK3 ] unsigned char 
  4408 ;;  j               1    2[BANK3 ] unsigned char 
  4409 ;;  i               1    1[BANK3 ] unsigned char 
  4410 ;; Return value:  Size  Location     Type
  4411 ;;		None               void
  4412 ;; Registers used:
  4413 ;;		wreg, status,2, status,0
  4414 ;; Tracked objects:
  4415 ;;		On entry : 17F/100
  4416 ;;		On exit  : 17F/160
  4417 ;;		Unchanged: FFE80/0
  4418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4419 ;;      Params:         0       0       0       0       0
  4420 ;;      Locals:         0       0       0       3       0
  4421 ;;      Temps:          0       0       0       0       0
  4422 ;;      Totals:         0       0       0       3       0
  4423 ;;Total ram usage:        3 bytes
  4424 ;; Hardware stack levels used:    1
  4425 ;; Hardware stack levels required when called:    9
  4426 ;; This function calls:
  4427 ;;		Nothing
  4428 ;; This function is called by:
  4429 ;;		_Digitron_Command
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432  06A9                     _delay_us:	
  4433                           
  4434 ;; hardware stack exceeded
  4435                           ; Regs used in _delay_us: [wreg+status,2+status,0]
  4436                           ;delay_us@usec stored from wreg
  4437  06A9  1683               	bsf	3,5	;RP0=1, select bank3
  4438  06AA  1703               	bsf	3,6	;RP1=1, select bank3
  4439  06AB  00D9               	movwf	delay_us@usec^(0+384)
  4440                           
  4441                           ;timer.c: 30: for(unsigned char i = usec; i>0; i--)
  4442  06AC  00DA               	movwf	delay_us@i^(0+384)
  4443  06AD  08DA               	movf	delay_us@i^(0+384),f
  4444  06AE  1903               	btfsc	3,2
  4445  06AF  0008               	return
  4446  06B0                     l9085:	
  4447                           
  4448                           ;timer.c: 31: for(unsigned char j = 2; j>0; j--);
  4449  06B0  3002               	movlw	2
  4450  06B1  00DB               	movwf	delay_us@j^(0+384)
  4451  06B2                     l9091:	
  4452  06B2  0BDB               	decfsz	delay_us@j^(0+384),f
  4453  06B3  2EB2               	goto	l9091
  4454  06B4  0BDA               	decfsz	delay_us@i^(0+384),f
  4455  06B5  2EB0               	goto	l9085
  4456  06B6  0008               	return
  4457  06B7                     __end_of_delay_us:	
  4458                           
  4459                           	psect	text1202
  4460  1756                     __ptext1202:	
  4461 ;; =============== function _DelaySec ends ============
  4462                           
  4463                           
  4464 ;; *************** function _Interrupt_Gross *****************
  4465 ;; Defined at:
  4466 ;;		line 88 in file "interrupt.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;  mov             1    wreg     unsigned char 
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;  mov             1    0[BANK3 ] unsigned char 
  4471 ;; Return value:  Size  Location     Type
  4472 ;;		None               void
  4473 ;; Registers used:
  4474 ;;		wreg
  4475 ;; Tracked objects:
  4476 ;;		On entry : 7F/0
  4477 ;;		On exit  : 17F/60
  4478 ;;		Unchanged: FFE80/0
  4479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4480 ;;      Params:         0       0       0       0       0
  4481 ;;      Locals:         0       0       0       1       0
  4482 ;;      Temps:          0       0       0       0       0
  4483 ;;      Totals:         0       0       0       1       0
  4484 ;;Total ram usage:        1 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; Hardware stack levels required when called:    9
  4487 ;; This function calls:
  4488 ;;		Nothing
  4489 ;; This function is called by:
  4490 ;;		_main
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493  1756                     _Interrupt_Gross:	
  4494                           
  4495 ;; hardware stack exceeded
  4496                           ; Regs used in _Interrupt_Gross: [wreg]
  4497                           ;Interrupt_Gross@mov stored from wreg
  4498  1756  1683               	bsf	3,5	;RP0=1, select bank3
  4499  1757  1703               	bsf	3,6	;RP1=1, select bank3
  4500  1758  00D9               	movwf	Interrupt_Gross@mov^(0+384)
  4501                           
  4502                           ;interrupt.c: 89: if(mov)
  4503  1759  0859               	movf	Interrupt_Gross@mov^(0+384),w
  4504  175A  1D03               	skipz
  4505                           
  4506                           ;interrupt.c: 90: GIE = 1;
  4507  175B  178B               	bsf	11,7
  4508  175C  0008               	return
  4509  175D                     __end_of_Interrupt_Gross:	
  4510                           
  4511                           	psect	text1203
  4512  174F                     __ptext1203:	
  4513 ;; =============== function _Interrupt_Gross ends ============
  4514                           
  4515                           
  4516 ;; *************** function _Init_Timer0 *****************
  4517 ;; Defined at:
  4518 ;;		line 10 in file "timer.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;		None
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;		None
  4523 ;; Return value:  Size  Location     Type
  4524 ;;		None               void
  4525 ;; Registers used:
  4526 ;;		wreg
  4527 ;; Tracked objects:
  4528 ;;		On entry : 17F/120
  4529 ;;		On exit  : 17F/100
  4530 ;;		Unchanged: FFE80/0
  4531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4532 ;;      Params:         0       0       0       0       0
  4533 ;;      Locals:         0       0       0       0       0
  4534 ;;      Temps:          0       0       0       0       0
  4535 ;;      Totals:         0       0       0       0       0
  4536 ;;Total ram usage:        0 bytes
  4537 ;; Hardware stack levels used:    1
  4538 ;; Hardware stack levels required when called:    9
  4539 ;; This function calls:
  4540 ;;		Nothing
  4541 ;; This function is called by:
  4542 ;;		_main
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545  174F                     _Init_Timer0:	
  4546                           
  4547                           ;timer.c: 12: OPTION=0x07;
  4548                           
  4549 ;; hardware stack exceeded
  4550                           ; Regs used in _Init_Timer0: [wreg]
  4551  174F  3007               	movlw	7
  4552  1750  0081               	movwf	1	;volatile
  4553                           
  4554                           ;timer.c: 13: TMR0 = 0x28;
  4555  1751  3028               	movlw	40
  4556  1752  1283               	bcf	3,5	;RP0=0, select bank0
  4557  1753  0081               	movwf	1	;volatile
  4558                           
  4559                           ;timer.c: 15: T0IE = 1;
  4560  1754  168B               	bsf	11,5
  4561  1755  0008               	return
  4562  1756                     __end_of_Init_Timer0:	
  4563                           
  4564                           	psect	text1204
  4565  175D                     __ptext1204:	
  4566 ;; =============== function _Init_Timer0 ends ============
  4567                           
  4568                           
  4569 ;; *************** function _initUART *****************
  4570 ;; Defined at:
  4571 ;;		line 4 in file "uart.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;		None
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;		None
  4576 ;; Return value:  Size  Location     Type
  4577 ;;		None               void
  4578 ;; Registers used:
  4579 ;;		wreg
  4580 ;; Tracked objects:
  4581 ;;		On entry : 17F/160
  4582 ;;		On exit  : 17F/120
  4583 ;;		Unchanged: FFE80/0
  4584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4585 ;;      Params:         0       0       0       0       0
  4586 ;;      Locals:         0       0       0       0       0
  4587 ;;      Temps:          0       0       0       0       0
  4588 ;;      Totals:         0       0       0       0       0
  4589 ;;Total ram usage:        0 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; Hardware stack levels required when called:    9
  4592 ;; This function calls:
  4593 ;;		Nothing
  4594 ;; This function is called by:
  4595 ;;		_main
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598  175D                     _initUART:	
  4599                           
  4600                           ;uart.c: 6: CSRC=0;
  4601                           
  4602 ;; hardware stack exceeded
  4603                           ; Regs used in _initUART: [wreg]
  4604  175D  1303               	bcf	3,6	;RP1=0, select bank1
  4605  175E  1398               	bcf	24,7
  4606                           
  4607                           ;uart.c: 7: TX9=0;
  4608  175F  1318               	bcf	24,6
  4609                           
  4610                           ;uart.c: 8: TXEN=1;
  4611  1760  1698               	bsf	24,5
  4612                           
  4613                           ;uart.c: 9: SYNC=0;
  4614  1761  1218               	bcf	24,4
  4615                           
  4616                           ;uart.c: 10: BRGH=1;
  4617  1762  1518               	bsf	24,2
  4618                           
  4619                           ;uart.c: 11: TRMT=1;
  4620  1763  1498               	bsf	24,1
  4621                           
  4622                           ;uart.c: 12: TX9D=0;
  4623  1764  1018               	bcf	24,0
  4624                           
  4625                           ;uart.c: 14: SPEN=1;
  4626  1765  1283               	bcf	3,5	;RP0=0, select bank0
  4627  1766  1798               	bsf	24,7
  4628                           
  4629                           ;uart.c: 15: RX9=0;
  4630  1767  1318               	bcf	24,6
  4631                           
  4632                           ;uart.c: 16: SREN=1;
  4633  1768  1698               	bsf	24,5
  4634                           
  4635                           ;uart.c: 17: CREN=1;
  4636  1769  1618               	bsf	24,4
  4637                           
  4638                           ;uart.c: 18: ADDEN=0;
  4639  176A  1198               	bcf	24,3
  4640                           
  4641                           ;uart.c: 19: FERR=0;
  4642  176B  1118               	bcf	24,2
  4643                           
  4644                           ;uart.c: 20: OERR=0;
  4645  176C  1098               	bcf	24,1
  4646                           
  4647                           ;uart.c: 21: RX9D=0;
  4648  176D  1018               	bcf	24,0
  4649                           
  4650                           ;uart.c: 22: TRISC=0X80;
  4651  176E  3080               	movlw	128
  4652  176F  1683               	bsf	3,5	;RP0=1, select bank1
  4653  1770  0087               	movwf	7	;volatile
  4654                           
  4655                           ;uart.c: 23: SPBRG=0X05;
  4656  1771  3005               	movlw	5
  4657  1772  0099               	movwf	25	;volatile
  4658                           
  4659                           ;uart.c: 26: RCIE = 1;
  4660  1773  168C               	bsf	12,5
  4661                           
  4662                           ;uart.c: 29: PEIE=1;
  4663  1774  170B               	bsf	11,6
  4664  1775  0008               	return
  4665  1776                     __end_of_initUART:	
  4666                           
  4667                           	psect	text1208
  4668  00ED                     __ptext1208:	
  4669 ;; =============== function _queueArray_init ends ============
  4670                           
  4671                           
  4672 ;; *************** function _SerialService *****************
  4673 ;; Defined at:
  4674 ;;		line 5 in file "interrupt.c"
  4675 ;; Parameters:    Size  Location     Type
  4676 ;;		None
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;  tmp             1   78[BANK0 ] unsigned char 
  4679 ;; Return value:  Size  Location     Type
  4680 ;;		None               void
  4681 ;; Registers used:
  4682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4683 ;; Tracked objects:
  4684 ;;		On entry : 0/0
  4685 ;;		On exit  : 60/20
  4686 ;;		Unchanged: FFE00/0
  4687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4688 ;;      Params:         0       0       0       0       0
  4689 ;;      Locals:         0       1       0       0       0
  4690 ;;      Temps:          0       0       4       0       0
  4691 ;;      Totals:         0       1       4       0       0
  4692 ;;Total ram usage:        5 bytes
  4693 ;; Hardware stack levels used:    1
  4694 ;; Hardware stack levels required when called:    8
  4695 ;; This function calls:
  4696 ;;		_Pos_meet
  4697 ;; This function is called by:
  4698 ;;		Interrupt level 1
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701  00ED                     _SerialService:	
  4702                           
  4703                           ;interrupt.c: 6: char tmp;
  4704                           ;interrupt.c: 7: if(RCIE&&RCIF)
  4705  00ED  1E8C               	btfss	12,5
  4706  00EE  295B               	goto	i1l4704
  4707  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  4708  00F0  1E8C               	btfss	12,5
  4709  00F1  295B               	goto	i1l4704
  4710                           
  4711                           ;interrupt.c: 8: {
  4712                           ;interrupt.c: 11: RCIF=0;
  4713  00F2  128C               	bcf	12,5
  4714                           
  4715                           ;interrupt.c: 12: tmp=RCREG;
  4716  00F3  081A               	movf	26,w	;volatile
  4717  00F4  00EE               	movwf	SerialService@tmp
  4718                           
  4719                           ;interrupt.c: 13: rcv_wifi[WifiRcvCnt] = tmp;
  4720  00F5  086F               	movf	_WifiRcvCnt,w
  4721  00F6  3E10               	addlw	_rcv_wifi& (0+255)
  4722  00F7  0084               	movwf	4
  4723  00F8  086E               	movf	SerialService@tmp,w
  4724  00F9  1783               	bsf	3,7	;select IRP bank2
  4725  00FA  0080               	movwf	0
  4726                           
  4727                           ;interrupt.c: 14: WifiRcvCnt++;
  4728  00FB  0AEF               	incf	_WifiRcvCnt,f
  4729                           
  4730                           ;interrupt.c: 16: if(WifiRcvCnt > 50)
  4731  00FC  3033               	movlw	51
  4732  00FD  026F               	subwf	_WifiRcvCnt,w
  4733  00FE  1803               	btfsc	3,0
  4734                           
  4735                           ;interrupt.c: 17: {
  4736                           ;interrupt.c: 18: WifiRcvCnt = 0;
  4737  00FF  01EF               	clrf	_WifiRcvCnt
  4738                           
  4739                           ;interrupt.c: 19: }
  4740                           ;interrupt.c: 21: if(config_ok)
  4741  0100  1683               	bsf	3,5	;RP0=1, select bank1
  4742  0101  0869               	movf	_config_ok^(0+128),w
  4743  0102  1903               	btfsc	3,2
  4744  0103  295B               	goto	i1l4704
  4745                           
  4746                           ;interrupt.c: 22: {
  4747                           ;interrupt.c: 23: if(tmp == '+')
  4748  0104  1283               	bcf	3,5	;RP0=0, select bank0
  4749  0105  086E               	movf	SerialService@tmp,w
  4750  0106  3A2B               	xorlw	43
  4751                           
  4752                           ;interrupt.c: 24: {
  4753                           ;interrupt.c: 26: pos = 0;
  4754  0107  1683               	bsf	3,5	;RP0=1, select bank1
  4755  0108  1903               	btfsc	3,2
  4756  0109  01EA               	clrf	_pos^(0+128)
  4757                           
  4758                           ;interrupt.c: 27: }
  4759                           ;interrupt.c: 28: if((tmp == ',')||(tmp ==':'))
  4760  010A  1283               	bcf	3,5	;RP0=0, select bank0
  4761  010B  086E               	movf	SerialService@tmp,w
  4762  010C  3A2C               	xorlw	44
  4763  010D  1903               	skipnz
  4764  010E  2913               	goto	i1l9343
  4765  010F  086E               	movf	SerialService@tmp,w
  4766  0110  3A3A               	xorlw	58
  4767  0111  1D03               	skipz
  4768  0112  294A               	goto	i1l9371
  4769  0113                     i1l9343:	
  4770                           
  4771                           ;interrupt.c: 29: {
  4772                           ;interrupt.c: 30: pos++;
  4773  0113  1683               	bsf	3,5	;RP0=1, select bank1
  4774  0114  0AEA               	incf	_pos^(0+128),f
  4775                           
  4776                           ;interrupt.c: 31: Pos_meet(pos);
  4777  0115  086A               	movf	_pos^(0+128),w
  4778  0116  2179  120A  118A   	fcall	_Pos_meet
  4779                           
  4780                           ;interrupt.c: 32: }
  4781  0119  295B               	goto	i1l4704
  4782  011A                     i1l9347:	
  4783                           
  4784                           ;interrupt.c: 42: {
  4785                           ;interrupt.c: 43: arr_rcv_len[LenRcvCnt++] = tmp;
  4786  011A  0866               	movf	_LenRcvCnt^(0+128),w
  4787  011B  3ED6               	addlw	_arr_rcv_len& (0+255)
  4788  011C  0084               	movwf	4
  4789  011D  1283               	bcf	3,5	;RP0=0, select bank0
  4790  011E  086E               	movf	SerialService@tmp,w
  4791  011F  0080               	movwf	0
  4792  0120  1683               	bsf	3,5	;RP0=1, select bank1
  4793  0121  0AE6               	incf	_LenRcvCnt^(0+128),f
  4794                           
  4795                           ;interrupt.c: 44: break;
  4796  0122  295B               	goto	i1l4704
  4797  0123                     i1l9351:	
  4798                           
  4799                           ;interrupt.c: 47: {
  4800                           ;interrupt.c: 48: arr_rcv_who[WhoRcvCnt++] = tmp;
  4801  0123  0868               	movf	_WhoRcvCnt^(0+128),w
  4802  0124  3EDF               	addlw	_arr_rcv_who& (0+255)
  4803  0125  0084               	movwf	4
  4804  0126  1283               	bcf	3,5	;RP0=0, select bank0
  4805  0127  086E               	movf	SerialService@tmp,w
  4806  0128  1383               	bcf	3,7	;select IRP bank1
  4807  0129  0080               	movwf	0
  4808  012A  1683               	bsf	3,5	;RP0=1, select bank1
  4809  012B  0AE8               	incf	_WhoRcvCnt^(0+128),f
  4810                           
  4811                           ;interrupt.c: 49: break;
  4812  012C  295B               	goto	i1l4704
  4813  012D                     i1l9355:	
  4814                           
  4815                           ;interrupt.c: 52: {
  4816                           ;interrupt.c: 53: arr_rcv_section1[LatiRcvCnt++] = tmp;
  4817  012D  0865               	movf	_LatiRcvCnt^(0+128),w
  4818  012E  3E90               	addlw	_arr_rcv_section1& (0+255)
  4819  012F  0084               	movwf	4
  4820  0130  1283               	bcf	3,5	;RP0=0, select bank0
  4821  0131  086E               	movf	SerialService@tmp,w
  4822  0132  0080               	movwf	0
  4823  0133  1683               	bsf	3,5	;RP0=1, select bank1
  4824  0134  0AE5               	incf	_LatiRcvCnt^(0+128),f
  4825                           
  4826                           ;interrupt.c: 54: break;
  4827  0135  295B               	goto	i1l4704
  4828  0136                     i1l9359:	
  4829                           
  4830                           ;interrupt.c: 57: {
  4831                           ;interrupt.c: 58: arr_rcv_section2[LongiRcvCnt++] = tmp;
  4832  0136  0867               	movf	_LongiRcvCnt^(0+128),w
  4833  0137  3E9A               	addlw	_arr_rcv_section2& (0+255)
  4834  0138  0084               	movwf	4
  4835  0139  1283               	bcf	3,5	;RP0=0, select bank0
  4836  013A  086E               	movf	SerialService@tmp,w
  4837  013B  0080               	movwf	0
  4838  013C  1683               	bsf	3,5	;RP0=1, select bank1
  4839  013D  0AE7               	incf	_LongiRcvCnt^(0+128),f
  4840                           
  4841                           ;interrupt.c: 59: if(WifiRcvCnt == val_rcv_len)
  4842  013E  1283               	bcf	3,5	;RP0=0, select bank0
  4843  013F  086F               	movf	_WifiRcvCnt,w
  4844  0140  1683               	bsf	3,5	;RP0=1, select bank1
  4845  0141  066C               	xorwf	_val_rcv_len^(0+128),w
  4846  0142  1D03               	skipz
  4847  0143  295B               	goto	i1l4704
  4848                           
  4849                           ;interrupt.c: 60: {
  4850                           ;interrupt.c: 61: pos++;
  4851  0144  0AEA               	incf	_pos^(0+128),f
  4852                           
  4853                           ;interrupt.c: 62: Pos_meet(pos);
  4854  0145  086A               	movf	_pos^(0+128),w
  4855  0146  2179  120A  118A   	fcall	_Pos_meet
  4856  0149  295B               	goto	i1l4704
  4857  014A                     i1l9371:	
  4858  014A  1683               	bsf	3,5	;RP0=1, select bank1
  4859  014B  086A               	movf	_pos^(0+128),w
  4860                           
  4861                           ; Switch size 1, requested type "space"
  4862                           ; Number of cases is 5, Range of values is 1 to 5
  4863                           ; switch strategies available:
  4864                           ; Name         Bytes Cycles
  4865                           ; simple_byte    16     9 (average)
  4866                           ; direct_byte    37    22 (fixed)
  4867                           ;	Chosen strategy is simple_byte
  4868  014C  3A01               	xorlw	1	; case 1
  4869  014D  1903               	skipnz
  4870  014E  295B               	goto	i1l4704
  4871  014F  3A03               	xorlw	3	; case 2
  4872  0150  1903               	skipnz
  4873  0151  291A               	goto	i1l9347
  4874  0152  3A01               	xorlw	1	; case 3
  4875  0153  1903               	skipnz
  4876  0154  2923               	goto	i1l9351
  4877  0155  3A07               	xorlw	7	; case 4
  4878  0156  1903               	skipnz
  4879  0157  292D               	goto	i1l9355
  4880  0158  3A01               	xorlw	1	; case 5
  4881  0159  1903               	skipnz
  4882  015A  2936               	goto	i1l9359
  4883  015B                     i1l4704:	
  4884                           
  4885                           ;interrupt.c: 68: }
  4886                           ;interrupt.c: 69: }
  4887                           ;interrupt.c: 70: }
  4888                           ;interrupt.c: 72: if(T0IF == 1)
  4889  015B  1D0B               	btfss	11,2
  4890  015C  296B               	goto	i1l4722
  4891                           
  4892                           ;interrupt.c: 73: {
  4893                           ;interrupt.c: 74: T0IF = 0;
  4894  015D  110B               	bcf	11,2
  4895                           
  4896                           ;interrupt.c: 75: TMR0 = 0x28;
  4897  015E  3028               	movlw	40
  4898  015F  1283               	bcf	3,5	;RP0=0, select bank0
  4899  0160  0081               	movwf	1	;volatile
  4900                           
  4901                           ;interrupt.c: 76: if(timer0_cnt++ > 50)
  4902  0161  3034               	movlw	52
  4903  0162  1683               	bsf	3,5	;RP0=1, select bank1
  4904  0163  0AEB               	incf	_timer0_cnt^(0+128),f	;volatile
  4905  0164  026B               	subwf	_timer0_cnt^(0+128),w	;volatile
  4906  0165  1C03               	skipc
  4907  0166  296B               	goto	i1l4722
  4908                           
  4909                           ;interrupt.c: 77: {
  4910                           ;interrupt.c: 78: timer0_cnt = 0;
  4911  0167  01EB               	clrf	_timer0_cnt^(0+128)	;volatile
  4912                           
  4913                           ;interrupt.c: 79: sec_cnt++;
  4914  0168  0AE3               	incf	_sec_cnt^(0+128),f	;volatile
  4915  0169  1903               	skipnz
  4916  016A  0AE4               	incf	(_sec_cnt+1)^(0+128),f	;volatile
  4917  016B                     i1l4722:	
  4918  016B  1683               	bsf	3,5	;RP0=1, select bank1
  4919  016C  085E               	movf	(??_SerialService+3)^(0+128),w
  4920  016D  1283               	bcf	3,5	;RP0=0, select bank0
  4921  016E  00FF               	movwf	127
  4922  016F  1683               	bsf	3,5	;RP0=1, select bank1
  4923  0170  085D               	movf	(??_SerialService+2)^(0+128),w
  4924  0171  008A               	movwf	10
  4925  0172  085C               	movf	(??_SerialService+1)^(0+128),w
  4926  0173  0084               	movwf	4
  4927  0174  085B               	movf	??_SerialService^(0+128),w
  4928  0175  0083               	movwf	3
  4929  0176  0EFE               	swapf	126,f
  4930  0177  0E7E               	swapf	126,w
  4931  0178  0009               	retfie
  4932  0179                     __end_of_SerialService:	
  4933  0179                     __ptext1209:	
  4934 ;; =============== function _SerialService ends ============
  4935                           
  4936                           
  4937 ;; *************** function _Pos_meet *****************
  4938 ;; Defined at:
  4939 ;;		line 14 in file "Gps_recive.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;  pos             1    wreg     unsigned char 
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;  pos             1   54[BANK1 ] unsigned char 
  4944 ;;  j               1   58[BANK1 ] unsigned char 
  4945 ;;  j               1   56[BANK1 ] unsigned char 
  4946 ;;  i               1   57[BANK1 ] unsigned char 
  4947 ;;  i               1   55[BANK1 ] unsigned char 
  4948 ;;  arr_rcv_long    6   48[BANK1 ] unsigned char [6]
  4949 ;;  arr_rcv_lati    6   42[BANK1 ] unsigned char [6]
  4950 ;; Return value:  Size  Location     Type
  4951 ;;		None               void
  4952 ;; Registers used:
  4953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4954 ;; Tracked objects:
  4955 ;;		On entry : 160/120
  4956 ;;		On exit  : 60/20
  4957 ;;		Unchanged: FFE00/0
  4958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4959 ;;      Params:         0       0       0       0       0
  4960 ;;      Locals:         0       0      17       0       0
  4961 ;;      Temps:          0       0       3       0       0
  4962 ;;      Totals:         0       0      20       0       0
  4963 ;;Total ram usage:       20 bytes
  4964 ;; Hardware stack levels used:    1
  4965 ;; Hardware stack levels required when called:    7
  4966 ;; This function calls:
  4967 ;;		_atoi
  4968 ;;		_atol
  4969 ;;		_Distance_Update
  4970 ;;		_Digitron_Update
  4971 ;;		_CleanGpsRcv
  4972 ;; This function is called by:
  4973 ;;		_SerialService
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976  0179                     _Pos_meet:	
  4977                           
  4978 ;; hardware stack exceeded
  4979                           ; Regs used in _Pos_meet: [allreg]
  4980                           ;Pos_meet@pos stored from wreg
  4981  0179  00D6               	movwf	Pos_meet@pos^(0+128)
  4982                           
  4983                           ; Switch size 1, requested type "space"
  4984                           ; Number of cases is 4, Range of values is 3 to 6
  4985                           ; switch strategies available:
  4986                           ; Name         Bytes Cycles
  4987                           ; simple_byte    13     7 (average)
  4988                           ; direct_byte    34    22 (fixed)
  4989                           ;	Chosen strategy is simple_byte
  4990                           
  4991                           ;Gps_recive.c: 84: }
  4992                           ;Gps_recive.c: 85: }
  4993                           
  4994                           ;Gps_recive.c: 15: switch(pos)
  4995  017A  3A03               	xorlw	3	; case 3
  4996  017B  1903               	skipnz
  4997  017C  298F               	goto	i1l9385
  4998  017D  3A07               	xorlw	7	; case 4
  4999  017E  1903               	skipnz
  5000  017F  0008               	return
  5001  0180  3A01               	xorlw	1	; case 5
  5002  0181  1903               	skipnz
  5003  0182  0008               	return
  5004  0183  3A03               	xorlw	3	; case 6
  5005  0184  1D03               	btfss	3,2
  5006  0185  0008               	return
  5007  0186  085F               	movf	_arr_rcv_who^(0+128),w
  5008                           
  5009                           ; Switch size 1, requested type "space"
  5010                           ; Number of cases is 3, Range of values is 65 to 67
  5011                           ; switch strategies available:
  5012                           ; Name         Bytes Cycles
  5013                           ; simple_byte    10     6 (average)
  5014                           ; direct_byte    31    22 (fixed)
  5015                           ;	Chosen strategy is simple_byte
  5016  0187  3A41               	xorlw	65	; case 65
  5017  0188  1903               	skipnz
  5018  0189  2999               	goto	i1l9389
  5019  018A  3A03               	xorlw	3	; case 66
  5020  018B  1903               	skipnz
  5021  018C  2A1A               	goto	i1l9439
  5022  018D  3A01               	xorlw	1	; case 67
  5023  018E  2A1D               	goto	i1l9445
  5024  018F                     i1l9385:	
  5025                           
  5026                           ;Gps_recive.c: 18: {
  5027                           ;Gps_recive.c: 19: WifiRcvCnt = 0;
  5028  018F  1283               	bcf	3,5	;RP0=0, select bank0
  5029  0190  01EF               	clrf	_WifiRcvCnt
  5030                           
  5031                           ;Gps_recive.c: 20: val_rcv_len = atoi(arr_rcv_len);
  5032  0191  30D6               	movlw	_arr_rcv_len& (0+255)
  5033  0192  120A  118A  2788   	fcall	_atoi
  5034  0195  0876               	movf	?_atoi,w
  5035  0196  1683               	bsf	3,5	;RP0=1, select bank1
  5036  0197  00EC               	movwf	_val_rcv_len^(0+128)
  5037                           
  5038                           ;Gps_recive.c: 21: break;
  5039  0198  0008               	return
  5040  0199                     i1l9389:	
  5041                           
  5042                           ;Gps_recive.c: 37: {
  5043                           ;Gps_recive.c: 38: char arr_rcv_lati[6], arr_rcv_longi[6];
  5044                           ;Gps_recive.c: 41: for(char i = 0; i<10; i++)
  5045  0199  01D7               	clrf	Pos_meet@i^(0+128)
  5046  019A                     i1l9395:	
  5047                           
  5048                           ;Gps_recive.c: 42: {
  5049                           ;Gps_recive.c: 43: if(arr_rcv_section1[i]=='.')
  5050  019A  0857               	movf	Pos_meet@i^(0+128),w
  5051  019B  3E90               	addlw	_arr_rcv_section1& (0+255)
  5052  019C  0084               	movwf	4
  5053  019D  0800               	movf	0,w
  5054  019E  3A2E               	xorlw	46
  5055  019F  1D03               	skipz
  5056  01A0  29B8               	goto	i1l9409
  5057                           
  5058                           ;Gps_recive.c: 44: {
  5059                           ;Gps_recive.c: 45: for(char j = 0; j<10; j++)
  5060  01A1  01D8               	clrf	Pos_meet@j^(0+128)
  5061  01A2                     i1l9403:	
  5062                           
  5063                           ;Gps_recive.c: 46: {
  5064                           ;Gps_recive.c: 47: arr_rcv_lati[j] = arr_rcv_section1[i+j+1];
  5065  01A2  3091               	movlw	(_arr_rcv_section1+1)& (0+255)
  5066  01A3  0758               	addwf	Pos_meet@j^(0+128),w
  5067  01A4  00C7               	movwf	??_Pos_meet^(0+128)
  5068  01A5  0857               	movf	Pos_meet@i^(0+128),w
  5069  01A6  0747               	addwf	??_Pos_meet^(0+128),w
  5070  01A7  00C8               	movwf	(??_Pos_meet+1)^(0+128)
  5071  01A8  0084               	movwf	4
  5072  01A9  1783               	bsf	3,7	;select IRP bank3
  5073  01AA  0800               	movf	0,w
  5074  01AB  00C9               	movwf	(??_Pos_meet+2)^(0+128)
  5075  01AC  0858               	movf	Pos_meet@j^(0+128),w
  5076  01AD  3ECA               	addlw	Pos_meet@arr_rcv_lati& (0+255)
  5077  01AE  0084               	movwf	4
  5078  01AF  0849               	movf	(??_Pos_meet+2)^(0+128),w
  5079  01B0  1383               	bcf	3,7	;select IRP bank1
  5080  01B1  0080               	movwf	0
  5081  01B2  0AD8               	incf	Pos_meet@j^(0+128),f
  5082  01B3  300A               	movlw	10
  5083  01B4  0258               	subwf	Pos_meet@j^(0+128),w
  5084  01B5  1803               	btfsc	3,0
  5085  01B6  29BD               	goto	i1l9413
  5086  01B7  29A2               	goto	i1l9403
  5087  01B8                     i1l9409:	
  5088  01B8  0AD7               	incf	Pos_meet@i^(0+128),f
  5089  01B9  300A               	movlw	10
  5090  01BA  0257               	subwf	Pos_meet@i^(0+128),w
  5091  01BB  1C03               	skipc
  5092  01BC  299A               	goto	i1l9395
  5093  01BD                     i1l9413:	
  5094                           
  5095                           ;Gps_recive.c: 50: }
  5096                           ;Gps_recive.c: 51: }
  5097                           ;Gps_recive.c: 52: for(char i = 0; i<10; i++)
  5098  01BD  01D9               	clrf	Pos_meet@i_2817^(0+128)
  5099  01BE                     i1l9419:	
  5100                           
  5101                           ;Gps_recive.c: 53: {
  5102                           ;Gps_recive.c: 54: if(arr_rcv_section2[i]=='.')
  5103  01BE  0859               	movf	Pos_meet@i_2817^(0+128),w
  5104  01BF  3E9A               	addlw	_arr_rcv_section2& (0+255)
  5105  01C0  0084               	movwf	4
  5106  01C1  1783               	bsf	3,7	;select IRP bank3
  5107  01C2  0800               	movf	0,w
  5108  01C3  3A2E               	xorlw	46
  5109  01C4  1D03               	skipz
  5110  01C5  29DD               	goto	i1l9433
  5111                           
  5112                           ;Gps_recive.c: 55: {
  5113                           ;Gps_recive.c: 56: for(char j = 0; j<10; j++)
  5114  01C6  01DA               	clrf	Pos_meet@j_2818^(0+128)
  5115  01C7                     i1l9427:	
  5116                           
  5117                           ;Gps_recive.c: 57: {
  5118                           ;Gps_recive.c: 58: arr_rcv_longi[j] = arr_rcv_section2[i+j+1];
  5119  01C7  309B               	movlw	(_arr_rcv_section2+1)& (0+255)
  5120  01C8  075A               	addwf	Pos_meet@j_2818^(0+128),w
  5121  01C9  00C7               	movwf	??_Pos_meet^(0+128)
  5122  01CA  0859               	movf	Pos_meet@i_2817^(0+128),w
  5123  01CB  0747               	addwf	??_Pos_meet^(0+128),w
  5124  01CC  00C8               	movwf	(??_Pos_meet+1)^(0+128)
  5125  01CD  0084               	movwf	4
  5126  01CE  1783               	bsf	3,7	;select IRP bank3
  5127  01CF  0800               	movf	0,w
  5128  01D0  00C9               	movwf	(??_Pos_meet+2)^(0+128)
  5129  01D1  085A               	movf	Pos_meet@j_2818^(0+128),w
  5130  01D2  3ED0               	addlw	Pos_meet@arr_rcv_longi& (0+255)
  5131  01D3  0084               	movwf	4
  5132  01D4  0849               	movf	(??_Pos_meet+2)^(0+128),w
  5133  01D5  1383               	bcf	3,7	;select IRP bank1
  5134  01D6  0080               	movwf	0
  5135  01D7  0ADA               	incf	Pos_meet@j_2818^(0+128),f
  5136  01D8  300A               	movlw	10
  5137  01D9  025A               	subwf	Pos_meet@j_2818^(0+128),w
  5138  01DA  1803               	btfsc	3,0
  5139  01DB  29E2               	goto	i1l9437
  5140  01DC  29C7               	goto	i1l9427
  5141  01DD                     i1l9433:	
  5142  01DD  0AD9               	incf	Pos_meet@i_2817^(0+128),f
  5143  01DE  300A               	movlw	10
  5144  01DF  0259               	subwf	Pos_meet@i_2817^(0+128),w
  5145  01E0  1C03               	skipc
  5146  01E1  29BE               	goto	i1l9419
  5147  01E2                     i1l9437:	
  5148                           
  5149                           ;Gps_recive.c: 61: }
  5150                           ;Gps_recive.c: 62: }
  5151                           ;Gps_recive.c: 64: val_rcv_lati = atol(arr_rcv_lati);
  5152  01E2  30CA               	movlw	Pos_meet@arr_rcv_lati& (0+255)
  5153  01E3  221E  120A  118A   	fcall	_atol
  5154  01E6  0823               	movf	?_atol+3,w
  5155  01E7  1683               	bsf	3,5	;RP0=1, select bank3
  5156  01E8  1703               	bsf	3,6	;RP1=1, select bank3
  5157  01E9  00A7               	movwf	(_val_rcv_lati+3)^(0+384)
  5158  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  5159  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  5160  01EC  0822               	movf	?_atol+2,w
  5161  01ED  1683               	bsf	3,5	;RP0=1, select bank3
  5162  01EE  1703               	bsf	3,6	;RP1=1, select bank3
  5163  01EF  00A6               	movwf	(_val_rcv_lati+2)^(0+384)
  5164  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  5165  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  5166  01F2  0821               	movf	?_atol+1,w
  5167  01F3  1683               	bsf	3,5	;RP0=1, select bank3
  5168  01F4  1703               	bsf	3,6	;RP1=1, select bank3
  5169  01F5  00A5               	movwf	(_val_rcv_lati+1)^(0+384)
  5170  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  5171  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  5172  01F8  0820               	movf	?_atol,w
  5173  01F9  1683               	bsf	3,5	;RP0=1, select bank3
  5174  01FA  1703               	bsf	3,6	;RP1=1, select bank3
  5175  01FB  00A4               	movwf	_val_rcv_lati^(0+384)
  5176                           
  5177                           ;Gps_recive.c: 65: val_rcv_longi = atol(arr_rcv_longi);
  5178  01FC  30D0               	movlw	Pos_meet@arr_rcv_longi& (0+255)
  5179  01FD  221E  120A  118A   	fcall	_atol
  5180  0200  0823               	movf	?_atol+3,w
  5181  0201  1683               	bsf	3,5	;RP0=1, select bank3
  5182  0202  1703               	bsf	3,6	;RP1=1, select bank3
  5183  0203  00AB               	movwf	(_val_rcv_longi+3)^(0+384)
  5184  0204  1283               	bcf	3,5	;RP0=0, select bank0
  5185  0205  1303               	bcf	3,6	;RP1=0, select bank0
  5186  0206  0822               	movf	?_atol+2,w
  5187  0207  1683               	bsf	3,5	;RP0=1, select bank3
  5188  0208  1703               	bsf	3,6	;RP1=1, select bank3
  5189  0209  00AA               	movwf	(_val_rcv_longi+2)^(0+384)
  5190  020A  1283               	bcf	3,5	;RP0=0, select bank0
  5191  020B  1303               	bcf	3,6	;RP1=0, select bank0
  5192  020C  0821               	movf	?_atol+1,w
  5193  020D  1683               	bsf	3,5	;RP0=1, select bank3
  5194  020E  1703               	bsf	3,6	;RP1=1, select bank3
  5195  020F  00A9               	movwf	(_val_rcv_longi+1)^(0+384)
  5196  0210  1283               	bcf	3,5	;RP0=0, select bank0
  5197  0211  1303               	bcf	3,6	;RP1=0, select bank0
  5198  0212  0820               	movf	?_atol,w
  5199  0213  1683               	bsf	3,5	;RP0=1, select bank3
  5200  0214  1703               	bsf	3,6	;RP1=1, select bank3
  5201  0215  00A8               	movwf	_val_rcv_longi^(0+384)
  5202                           
  5203                           ;Gps_recive.c: 70: Distance_Update();
  5204  0216  23F1  120A  118A   	fcall	_Distance_Update
  5205                           
  5206                           ;Gps_recive.c: 71: break;
  5207  0219  2A1D               	goto	i1l9445
  5208  021A                     i1l9439:	
  5209                           
  5210                           ;Gps_recive.c: 74: {
  5211                           ;Gps_recive.c: 75: Digitron_Update();
  5212  021A  22D2  120A  118A   	fcall	_Digitron_Update
  5213  021D                     i1l9445:	
  5214                           ;Gps_recive.c: 76: break;
  5215                           
  5216                           
  5217                           ;Gps_recive.c: 83: CleanGpsRcv();
  5218  021D  2C8F               	ljmp	i1l9541
  5219  021E                     __end_of_Pos_meet:	
  5220  021E                     __ptext1229:	
  5221 ;; =============== function ___ftadd ends ============
  5222                           
  5223                           
  5224 ;; *************** function _atol *****************
  5225 ;; Defined at:
  5226 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\atol.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;  s               1    wreg     PTR const unsigned char 
  5229 ;;		 -> Pos_meet@arr_rcv_longi(6), Pos_meet@arr_rcv_lati(6), 
  5230 ;; Auto vars:     Size  Location     Type
  5231 ;;  s               1   13[BANK0 ] PTR const unsigned char 
  5232 ;;		 -> Pos_meet@arr_rcv_longi(6), Pos_meet@arr_rcv_lati(6), 
  5233 ;;  a               4    9[BANK0 ] long 
  5234 ;;  c               1   14[BANK0 ] unsigned char 
  5235 ;;  sign            1    8[BANK0 ] unsigned char 
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  4    0[BANK0 ] long 
  5238 ;; Registers used:
  5239 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5240 ;; Tracked objects:
  5241 ;;		On entry : 20/20
  5242 ;;		On exit  : 160/0
  5243 ;;		Unchanged: FFE9F/0
  5244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5245 ;;      Params:         0       4       0       0       0
  5246 ;;      Locals:         0       7       0       0       0
  5247 ;;      Temps:          0       4       0       0       0
  5248 ;;      Totals:         0      15       0       0       0
  5249 ;;Total ram usage:       15 bytes
  5250 ;; Hardware stack levels used:    1
  5251 ;; Hardware stack levels required when called:    1
  5252 ;; This function calls:
  5253 ;;		___lmul
  5254 ;;		_isdigit
  5255 ;; This function is called by:
  5256 ;;		_Pos_meet
  5257 ;; This function uses a non-reentrant model
  5258 ;;
  5259  021E                     _atol:	
  5260                           
  5261                           ; Regs used in _atol: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5262                           ;atol@s stored from wreg
  5263  021E  1283               	bcf	3,5	;RP0=0, select bank0
  5264  021F  1303               	bcf	3,6	;RP1=0, select bank0
  5265  0220  00AD               	movwf	atol@s
  5266  0221                     i1l6049:	
  5267  0221  082D               	movf	atol@s,w
  5268  0222  0084               	movwf	4
  5269  0223  1383               	bcf	3,7	;select IRP bank0
  5270  0224  0800               	movf	0,w
  5271  0225  00AE               	movwf	atol@c
  5272  0226  0AAD               	incf	atol@s,f
  5273  0227  3A20               	xorlw	32
  5274  0228  1903               	skipnz
  5275  0229  2A21               	goto	i1l6049
  5276  022A  082E               	movf	atol@c,w
  5277  022B  3A09               	xorlw	9
  5278  022C  1903               	skipnz
  5279  022D  2A21               	goto	i1l6049
  5280  022E  01A9               	clrf	atol@a
  5281  022F  01AA               	clrf	atol@a+1
  5282  0230  01AB               	clrf	atol@a+2
  5283  0231  01AC               	clrf	atol@a+3
  5284  0232  01A8               	clrf	atol@sign
  5285  0233  082E               	movf	atol@c,w
  5286  0234  3A2D               	xorlw	45
  5287  0235  1D03               	skipz
  5288  0236  2A39               	goto	i1l9467
  5289  0237  0AA8               	incf	atol@sign,f
  5290  0238  2A6F               	goto	i1l9463
  5291  0239                     i1l9467:	
  5292  0239  082E               	movf	atol@c,w
  5293  023A  3A2B               	xorlw	43
  5294  023B  1903               	btfsc	3,2
  5295  023C  2A6F               	goto	i1l9463
  5296  023D                     i1l9479:	
  5297  023D  082E               	movf	atol@c,w
  5298  023E  2291  120A  118A   	fcall	_isdigit
  5299  0241  1C03               	btfss	3,0
  5300  0242  2A75               	goto	i1l9481
  5301  0243  082E               	movf	atol@c,w
  5302  0244  3ED0               	addlw	208
  5303  0245  00A4               	movwf	??_atol
  5304  0246  01A5               	clrf	??_atol+1
  5305  0247  01A6               	clrf	??_atol+2
  5306  0248  01A7               	clrf	??_atol+3
  5307  0249  082C               	movf	atol@a+3,w
  5308  024A  00F3               	movwf	?___lmul+3
  5309  024B  082B               	movf	atol@a+2,w
  5310  024C  00F2               	movwf	?___lmul+2
  5311  024D  082A               	movf	atol@a+1,w
  5312  024E  00F1               	movwf	?___lmul+1
  5313  024F  0829               	movf	atol@a,w
  5314  0250  00F0               	movwf	?___lmul
  5315  0251  300A               	movlw	10
  5316  0252  00F4               	movwf	?___lmul+4
  5317  0253  01F5               	clrf	?___lmul+5
  5318  0254  01F6               	clrf	?___lmul+6
  5319  0255  01F7               	clrf	?___lmul+7
  5320  0256  229F  120A  118A   	fcall	___lmul
  5321  0259  0870               	movf	?___lmul,w
  5322  025A  07A4               	addwf	??_atol,f
  5323  025B  0871               	movf	?___lmul+1,w
  5324  025C  1803               	skipnc
  5325  025D  0F71               	incfsz	?___lmul+1,w
  5326  025E  07A5               	addwf	??_atol+1,f
  5327  025F  0872               	movf	?___lmul+2,w
  5328  0260  1803               	skipnc
  5329  0261  0F72               	incfsz	?___lmul+2,w
  5330  0262  07A6               	addwf	??_atol+2,f
  5331  0263  0873               	movf	?___lmul+3,w
  5332  0264  1803               	skipnc
  5333  0265  0A73               	incf	?___lmul+3,w
  5334  0266  07A7               	addwf	??_atol+3,f
  5335  0267  0827               	movf	??_atol+3,w
  5336  0268  00AC               	movwf	atol@a+3
  5337  0269  0826               	movf	??_atol+2,w
  5338  026A  00AB               	movwf	atol@a+2
  5339  026B  0825               	movf	??_atol+1,w
  5340  026C  00AA               	movwf	atol@a+1
  5341  026D  0824               	movf	??_atol,w
  5342  026E  00A9               	movwf	atol@a
  5343  026F                     i1l9463:	
  5344  026F  082D               	movf	atol@s,w
  5345  0270  0084               	movwf	4
  5346  0271  0800               	movf	0,w
  5347  0272  00AE               	movwf	atol@c
  5348  0273  0AAD               	incf	atol@s,f
  5349  0274  2A3D               	goto	i1l9479
  5350  0275                     i1l9481:	
  5351  0275  0828               	movf	atol@sign,w
  5352  0276  1903               	btfsc	3,2
  5353  0277  2A88               	goto	i1l9487
  5354  0278  0929               	comf	atol@a,w
  5355  0279  00A0               	movwf	?_atol
  5356  027A  092A               	comf	atol@a+1,w
  5357  027B  00A1               	movwf	?_atol+1
  5358  027C  092B               	comf	atol@a+2,w
  5359  027D  00A2               	movwf	?_atol+2
  5360  027E  092C               	comf	atol@a+3,w
  5361  027F  00A3               	movwf	?_atol+3
  5362  0280  0AA0               	incf	?_atol,f
  5363  0281  1903               	skipnz
  5364  0282  0AA1               	incf	?_atol+1,f
  5365  0283  1903               	skipnz
  5366  0284  0AA2               	incf	?_atol+2,f
  5367  0285  1903               	skipnz
  5368  0286  0AA3               	incf	?_atol+3,f
  5369  0287  0008               	return
  5370  0288                     i1l9487:	
  5371  0288  082C               	movf	atol@a+3,w
  5372  0289  00A3               	movwf	?_atol+3
  5373  028A  082B               	movf	atol@a+2,w
  5374  028B  00A2               	movwf	?_atol+2
  5375  028C  082A               	movf	atol@a+1,w
  5376  028D  00A1               	movwf	?_atol+1
  5377  028E  0829               	movf	atol@a,w
  5378  028F  00A0               	movwf	?_atol
  5379  0290  0008               	return
  5380  0291                     __end_of_atol:	
  5381  0291                     __ptext1241:	
  5382 ;; =============== function ___wmul ends ============
  5383                           
  5384                           
  5385 ;; *************** function _isdigit *****************
  5386 ;; Defined at:
  5387 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\isdigit.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;  c               1    wreg     unsigned char 
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;  c               1    1[COMMON] unsigned char 
  5392 ;; Return value:  Size  Location     Type
  5393 ;;		None               void
  5394 ;; Registers used:
  5395 ;;		wreg, status,2, status,0
  5396 ;; Tracked objects:
  5397 ;;		On entry : 60/0
  5398 ;;		On exit  : 60/0
  5399 ;;		Unchanged: FFF9F/0
  5400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5401 ;;      Params:         0       0       0       0       0
  5402 ;;      Locals:         2       0       0       0       0
  5403 ;;      Temps:          0       0       0       0       0
  5404 ;;      Totals:         2       0       0       0       0
  5405 ;;Total ram usage:        2 bytes
  5406 ;; Hardware stack levels used:    1
  5407 ;; This function calls:
  5408 ;;		Nothing
  5409 ;; This function is called by:
  5410 ;;		_atoi
  5411 ;;		_atol
  5412 ;; This function uses a non-reentrant model
  5413 ;;
  5414  0291                     _isdigit:	
  5415                           
  5416                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5417                           ;isdigit@c stored from wreg
  5418  0291  00F1               	movwf	isdigit@c
  5419  0292  01F0               	clrf	_isdigit$3171
  5420  0293  303A               	movlw	58
  5421  0294  0271               	subwf	isdigit@c,w
  5422  0295  1803               	skipnc
  5423  0296  2A9D               	goto	i1l9681
  5424  0297  3030               	movlw	48
  5425  0298  0271               	subwf	isdigit@c,w
  5426  0299  1C03               	skipc
  5427  029A  2A9D               	goto	i1l9681
  5428  029B  01F0               	clrf	_isdigit$3171
  5429  029C  0AF0               	incf	_isdigit$3171,f
  5430  029D                     i1l9681:	
  5431  029D  0C70               	rrf	_isdigit$3171,w
  5432  029E  0008               	return
  5433  029F                     __end_of_isdigit:	
  5434  029F                     __ptext1237:	
  5435 ;; =============== function ___fttol ends ============
  5436                           
  5437                           
  5438 ;; *************** function ___lmul *****************
  5439 ;; Defined at:
  5440 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\lmul.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;  multiplier      4    0[COMMON] unsigned long 
  5443 ;;  multiplicand    4    4[COMMON] unsigned long 
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;  product         4    8[COMMON] unsigned long 
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  4    0[COMMON] unsigned long 
  5448 ;; Registers used:
  5449 ;;		wreg, status,2, status,0
  5450 ;; Tracked objects:
  5451 ;;		On entry : 60/0
  5452 ;;		On exit  : 160/0
  5453 ;;		Unchanged: FFE9F/0
  5454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5455 ;;      Params:         8       0       0       0       0
  5456 ;;      Locals:         4       0       0       0       0
  5457 ;;      Temps:          0       0       0       0       0
  5458 ;;      Totals:        12       0       0       0       0
  5459 ;;Total ram usage:       12 bytes
  5460 ;; Hardware stack levels used:    1
  5461 ;; This function calls:
  5462 ;;		Nothing
  5463 ;; This function is called by:
  5464 ;;		_atol
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467  029F                     ___lmul:	
  5468                           
  5469                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5470  029F  01F8               	clrf	___lmul@product
  5471  02A0  01F9               	clrf	___lmul@product+1
  5472  02A1  01FA               	clrf	___lmul@product+2
  5473  02A2  01FB               	clrf	___lmul@product+3
  5474  02A3                     i1l6199:	
  5475  02A3  1C70               	btfss	___lmul@multiplier,0
  5476  02A4  2AB9               	goto	i1l9937
  5477  02A5  0874               	movf	___lmul@multiplicand,w
  5478  02A6  07F8               	addwf	___lmul@product,f
  5479  02A7  0875               	movf	___lmul@multiplicand+1,w
  5480  02A8  1103               	clrz
  5481  02A9  1803               	skipnc
  5482  02AA  3E01               	addlw	1
  5483  02AB  1D03               	btfss	3,2
  5484  02AC  07F9               	addwf	___lmul@product+1,f
  5485  02AD  0876               	movf	___lmul@multiplicand+2,w
  5486  02AE  1103               	clrz
  5487  02AF  1803               	skipnc
  5488  02B0  3E01               	addlw	1
  5489  02B1  1D03               	btfss	3,2
  5490  02B2  07FA               	addwf	___lmul@product+2,f
  5491  02B3  0877               	movf	___lmul@multiplicand+3,w
  5492  02B4  1103               	clrz
  5493  02B5  1803               	skipnc
  5494  02B6  3E01               	addlw	1
  5495  02B7  1D03               	btfss	3,2
  5496  02B8  07FB               	addwf	___lmul@product+3,f
  5497  02B9                     i1l9937:	
  5498  02B9  1003               	clrc
  5499  02BA  0DF4               	rlf	___lmul@multiplicand,f
  5500  02BB  0DF5               	rlf	___lmul@multiplicand+1,f
  5501  02BC  0DF6               	rlf	___lmul@multiplicand+2,f
  5502  02BD  0DF7               	rlf	___lmul@multiplicand+3,f
  5503  02BE  1003               	clrc
  5504  02BF  0CF3               	rrf	___lmul@multiplier+3,f
  5505  02C0  0CF2               	rrf	___lmul@multiplier+2,f
  5506  02C1  0CF1               	rrf	___lmul@multiplier+1,f
  5507  02C2  0CF0               	rrf	___lmul@multiplier,f
  5508  02C3  0873               	movf	___lmul@multiplier+3,w
  5509  02C4  0472               	iorwf	___lmul@multiplier+2,w
  5510  02C5  0471               	iorwf	___lmul@multiplier+1,w
  5511  02C6  0470               	iorwf	___lmul@multiplier,w
  5512  02C7  1D03               	skipz
  5513  02C8  2AA3               	goto	i1l6199
  5514  02C9  087B               	movf	___lmul@product+3,w
  5515  02CA  00F3               	movwf	?___lmul+3
  5516  02CB  087A               	movf	___lmul@product+2,w
  5517  02CC  00F2               	movwf	?___lmul+2
  5518  02CD  0879               	movf	___lmul@product+1,w
  5519  02CE  00F1               	movwf	?___lmul+1
  5520  02CF  0878               	movf	___lmul@product,w
  5521  02D0  00F0               	movwf	?___lmul
  5522  02D1  0008               	return
  5523  02D2                     __end_of___lmul:	
  5524  02D2                     __ptext1216:	
  5525 ;; =============== function _sqrt ends ============
  5526                           
  5527                           
  5528 ;; *************** function _Digitron_Update *****************
  5529 ;; Defined at:
  5530 ;;		line 53 in file "LED/led.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;		None
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;  i               1    5[BANK0 ] unsigned char 
  5535 ;;  order_num       4    0[BANK0 ] unsigned char [4]
  5536 ;;  rider           1    4[BANK0 ] unsigned char 
  5537 ;; Return value:  Size  Location     Type
  5538 ;;		None               void
  5539 ;; Registers used:
  5540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5541 ;; Tracked objects:
  5542 ;;		On entry : 160/120
  5543 ;;		On exit  : 60/0
  5544 ;;		Unchanged: FFE9F/0
  5545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5546 ;;      Params:         0       0       0       0       0
  5547 ;;      Locals:         0       6       0       0       0
  5548 ;;      Temps:          1       0       0       0       0
  5549 ;;      Totals:         1       6       0       0       0
  5550 ;;Total ram usage:        7 bytes
  5551 ;; Hardware stack levels used:    1
  5552 ;; Hardware stack levels required when called:    3
  5553 ;; This function calls:
  5554 ;;		_queueArray_in
  5555 ;;		i1_Digitron_Display
  5556 ;; This function is called by:
  5557 ;;		_Pos_meet
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560  02D2                     _Digitron_Update:	
  5561                           
  5562                           ;led.c: 54: char order_num[4], rider;
  5563                           ;led.c: 55: for(unsigned char i=0;i<4;i++)
  5564                           
  5565 ;; hardware stack exceeded
  5566                           ; Regs used in _Digitron_Update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5567  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  5568  02D3  01A5               	clrf	Digitron_Update@i
  5569  02D4                     i1l9035:	
  5570                           
  5571                           ;led.c: 56: order_num[i]=arr_rcv_section1[i];
  5572  02D4  0825               	movf	Digitron_Update@i,w
  5573  02D5  3E90               	addlw	_arr_rcv_section1& (0+255)
  5574  02D6  0084               	movwf	4
  5575  02D7  1783               	bsf	3,7	;select IRP bank3
  5576  02D8  0800               	movf	0,w
  5577  02D9  00FD               	movwf	??_Digitron_Update
  5578  02DA  0825               	movf	Digitron_Update@i,w
  5579  02DB  3E20               	addlw	Digitron_Update@order_num& (0+255)
  5580  02DC  0084               	movwf	4
  5581  02DD  087D               	movf	??_Digitron_Update,w
  5582  02DE  1383               	bcf	3,7	;select IRP bank0
  5583  02DF  0080               	movwf	0
  5584  02E0  0AA5               	incf	Digitron_Update@i,f
  5585  02E1  3004               	movlw	4
  5586  02E2  0225               	subwf	Digitron_Update@i,w
  5587  02E3  1C03               	skipc
  5588  02E4  2AD4               	goto	i1l9035
  5589                           
  5590                           ;led.c: 57: rider = arr_rcv_section2[0];
  5591  02E5  1683               	bsf	3,5	;RP0=1, select bank3
  5592  02E6  1703               	bsf	3,6	;RP1=1, select bank3
  5593  02E7  081A               	movf	_arr_rcv_section2^(0+384),w
  5594  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  5595  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  5596  02EA  00A4               	movwf	Digitron_Update@rider
  5597                           
  5598                           ;led.c: 61: switch(rider)
  5599  02EB  2B09               	goto	i1l9045
  5600  02EC                     i1l9043:	
  5601                           
  5602                           ;led.c: 64: {
  5603                           ;led.c: 65: queueArray_in(&digitron1, order_num);
  5604  02EC  3020               	movlw	Digitron_Update@order_num& (0+255)
  5605  02ED  00F0               	movwf	?_queueArray_in
  5606  02EE  30AC               	movlw	_digitron1& (0+255)
  5607  02EF  2314  120A  118A   	fcall	_queueArray_in
  5608                           
  5609                           ;led.c: 66: Digitron_Display(&digitron1);
  5610  02F2  30AC               	movlw	_digitron1& (0+255)
  5611  02F3  236C  120A  118A   	fcall	i1_Digitron_Display
  5612  02F6                     i1l1162:	
  5613                           ;led.c: 67: }
  5614                           ;led.c: 68: case '2':
  5615                           
  5616                           
  5617                           ;led.c: 69: {
  5618                           ;led.c: 70: queueArray_in(&digitron2, order_num);
  5619  02F6  3020               	movlw	Digitron_Update@order_num& (0+255)
  5620  02F7  00F0               	movwf	?_queueArray_in
  5621  02F8  30BA               	movlw	_digitron2& (0+255)
  5622  02F9  2314  120A  118A   	fcall	_queueArray_in
  5623                           
  5624                           ;led.c: 71: Digitron_Display(&digitron2);
  5625  02FC  30BA               	movlw	_digitron2& (0+255)
  5626  02FD  236C  120A  118A   	fcall	i1_Digitron_Display
  5627  0300                     i1l1163:	
  5628                           ;led.c: 72: }
  5629                           ;led.c: 73: case '3':
  5630                           
  5631                           
  5632                           ;led.c: 74: {
  5633                           ;led.c: 75: queueArray_in(&digitron3, order_num);
  5634  0300  3020               	movlw	Digitron_Update@order_num& (0+255)
  5635  0301  00F0               	movwf	?_queueArray_in
  5636  0302  30C8               	movlw	_digitron3& (0+255)
  5637  0303  2314  120A  118A   	fcall	_queueArray_in
  5638                           
  5639                           ;led.c: 76: Digitron_Display(&digitron3);
  5640  0306  30C8               	movlw	_digitron3& (0+255)
  5641  0307  236C               	fcall	i1_Digitron_Display
  5642                           
  5643                           ;led.c: 77: }
  5644                           ;led.c: 78: }
  5645  0308  0008               	return
  5646  0309                     i1l9045:	
  5647  0309  0824               	movf	Digitron_Update@rider,w
  5648                           
  5649                           ; Switch size 1, requested type "space"
  5650                           ; Number of cases is 3, Range of values is 49 to 51
  5651                           ; switch strategies available:
  5652                           ; Name         Bytes Cycles
  5653                           ; simple_byte    10     6 (average)
  5654                           ; direct_byte    31    22 (fixed)
  5655                           ;	Chosen strategy is simple_byte
  5656  030A  3A31               	xorlw	49	; case 49
  5657  030B  1903               	skipnz
  5658  030C  2AEC               	goto	i1l9043
  5659  030D  3A03               	xorlw	3	; case 50
  5660  030E  1903               	skipnz
  5661  030F  2AF6               	goto	i1l1162
  5662  0310  3A01               	xorlw	1	; case 51
  5663  0311  1D03               	btfss	3,2
  5664  0312  0008               	return
  5665  0313  2B00               	goto	i1l1163
  5666  0314                     __end_of_Digitron_Update:	
  5667  0314                     __ptext1243:	
  5668 ;; =============== function _CleanGpsRcv ends ============
  5669                           
  5670                           
  5671 ;; *************** function _queueArray_in *****************
  5672 ;; Defined at:
  5673 ;;		line 15 in file "data_structure/queue.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;  Q               1    wreg     PTR struct .
  5676 ;;		 -> digitron3(14), digitron2(14), digitron1(14), 
  5677 ;;  buf             1    0[COMMON] PTR unsigned char 
  5678 ;;		 -> Digitron_Update@order_num(4), 
  5679 ;; Auto vars:     Size  Location     Type
  5680 ;;  Q               1    7[COMMON] PTR struct .
  5681 ;;		 -> digitron3(14), digitron2(14), digitron1(14), 
  5682 ;;  i               1    6[COMMON] unsigned char 
  5683 ;; Return value:  Size  Location     Type
  5684 ;;		None               void
  5685 ;; Registers used:
  5686 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5687 ;; Tracked objects:
  5688 ;;		On entry : 40/0
  5689 ;;		On exit  : 160/120
  5690 ;;		Unchanged: FFE9F/0
  5691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5692 ;;      Params:         1       0       0       0       0
  5693 ;;      Locals:         2       0       0       0       0
  5694 ;;      Temps:          5       0       0       0       0
  5695 ;;      Totals:         8       0       0       0       0
  5696 ;;Total ram usage:        8 bytes
  5697 ;; Hardware stack levels used:    1
  5698 ;; This function calls:
  5699 ;;		Nothing
  5700 ;; This function is called by:
  5701 ;;		_Digitron_Update
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704  0314                     _queueArray_in:	
  5705                           
  5706                           ; Regs used in _queueArray_in: [wreg-fsr0h+status,2+status,0]
  5707                           ;queueArray_in@Q stored from wreg
  5708  0314  00F7               	movwf	queueArray_in@Q
  5709                           
  5710                           ;queue.c: 16: for(unsigned char i=0; i<4; i++)
  5711  0315  01F6               	clrf	queueArray_in@i
  5712  0316                     i1l9053:	
  5713                           
  5714                           ;queue.c: 17: {
  5715                           ;queue.c: 18: Q->data[Q->rear][i] = buf[i];
  5716  0316  0876               	movf	queueArray_in@i,w
  5717  0317  0770               	addwf	queueArray_in@buf,w
  5718  0318  00F1               	movwf	??_queueArray_in
  5719  0319  0084               	movwf	4
  5720  031A  1383               	bcf	3,7	;select IRP bank0
  5721  031B  0800               	movf	0,w
  5722  031C  00F2               	movwf	??_queueArray_in+1
  5723  031D  0877               	movf	queueArray_in@Q,w
  5724  031E  0084               	movwf	4
  5725  031F  1783               	bsf	3,7	;select IRP bank2
  5726  0320  0800               	movf	0,w
  5727  0321  00F3               	movwf	??_queueArray_in+2
  5728  0322  1003               	clrc
  5729  0323  0DF3               	rlf	??_queueArray_in+2,f
  5730  0324  1003               	clrc
  5731  0325  0D73               	rlf	??_queueArray_in+2,w
  5732  0326  0777               	addwf	queueArray_in@Q,w
  5733  0327  00F4               	movwf	??_queueArray_in+3
  5734  0328  0876               	movf	queueArray_in@i,w
  5735  0329  0774               	addwf	??_queueArray_in+3,w
  5736  032A  00F5               	movwf	??_queueArray_in+4
  5737  032B  3E02               	addlw	2
  5738  032C  0084               	movwf	4
  5739  032D  0872               	movf	??_queueArray_in+1,w
  5740  032E  0080               	movwf	0
  5741  032F  0AF6               	incf	queueArray_in@i,f
  5742  0330  3004               	movlw	4
  5743  0331  0276               	subwf	queueArray_in@i,w
  5744  0332  1C03               	skipc
  5745  0333  2B16               	goto	i1l9053
  5746                           
  5747                           ;queue.c: 19: }
  5748                           ;queue.c: 21: if(first_time)
  5749  0334  1683               	bsf	3,5	;RP0=1, select bank1
  5750  0335  086D               	movf	_first_time^(0+128),w
  5751  0336  1903               	btfsc	3,2
  5752  0337  2B3D               	goto	i1l9065
  5753                           
  5754                           ;queue.c: 22: {
  5755                           ;queue.c: 23: Q->rear++;
  5756  0338  0877               	movf	queueArray_in@Q,w
  5757  0339  0084               	movwf	4
  5758  033A  0A80               	incf	0,f
  5759                           
  5760                           ;queue.c: 24: first_time = 0;
  5761  033B  01ED               	clrf	_first_time^(0+128)
  5762                           
  5763                           ;queue.c: 25: }
  5764  033C  0008               	return
  5765  033D                     i1l9065:	
  5766                           
  5767                           ;queue.c: 26: else if(Q->rear == Q->front)
  5768  033D  0877               	movf	queueArray_in@Q,w
  5769  033E  3E01               	addlw	1
  5770  033F  0084               	movwf	4
  5771  0340  0800               	movf	0,w
  5772  0341  00F1               	movwf	??_queueArray_in
  5773  0342  0877               	movf	queueArray_in@Q,w
  5774  0343  0084               	movwf	4
  5775  0344  0800               	movf	0,w
  5776  0345  0671               	xorwf	??_queueArray_in,w
  5777  0346  1D03               	skipz
  5778  0347  2B5E               	goto	i1l9073
  5779                           
  5780                           ;queue.c: 27: {
  5781                           ;queue.c: 28: if(Q->rear == 3-1)
  5782  0348  0877               	movf	queueArray_in@Q,w
  5783  0349  0084               	movwf	4
  5784  034A  0800               	movf	0,w
  5785  034B  3A02               	xorlw	2
  5786  034C  1D03               	skipz
  5787  034D  2B56               	goto	i1l9071
  5788                           
  5789                           ;queue.c: 29: {
  5790                           ;queue.c: 30: Q->rear = 0;
  5791  034E  0877               	movf	queueArray_in@Q,w
  5792  034F  0084               	movwf	4
  5793  0350  0180               	clrf	0
  5794                           
  5795                           ;queue.c: 31: Q->front = 0;
  5796  0351  0877               	movf	queueArray_in@Q,w
  5797  0352  3E01               	addlw	1
  5798  0353  0084               	movwf	4
  5799  0354  0180               	clrf	0
  5800                           
  5801                           ;queue.c: 32: }
  5802  0355  0008               	return
  5803  0356                     i1l9071:	
  5804                           
  5805                           ;queue.c: 33: else
  5806                           ;queue.c: 34: {
  5807                           ;queue.c: 35: Q->rear++;
  5808  0356  0877               	movf	queueArray_in@Q,w
  5809  0357  0084               	movwf	4
  5810  0358  0A80               	incf	0,f
  5811                           
  5812                           ;queue.c: 36: Q->front++;
  5813  0359  0877               	movf	queueArray_in@Q,w
  5814  035A  3E01               	addlw	1
  5815  035B  0084               	movwf	4
  5816  035C  0A80               	incf	0,f
  5817  035D  0008               	return
  5818  035E                     i1l9073:	
  5819                           
  5820                           ;queue.c: 39: else
  5821                           ;queue.c: 40: {
  5822                           ;queue.c: 41: if(Q->rear == 3-1)
  5823  035E  0877               	movf	queueArray_in@Q,w
  5824  035F  0084               	movwf	4
  5825  0360  0800               	movf	0,w
  5826  0361  3A02               	xorlw	2
  5827  0362  1D03               	skipz
  5828  0363  2B68               	goto	i1l9077
  5829                           
  5830                           ;queue.c: 42: Q->rear = 0;
  5831  0364  0877               	movf	queueArray_in@Q,w
  5832  0365  0084               	movwf	4
  5833  0366  0180               	clrf	0
  5834  0367  0008               	return
  5835  0368                     i1l9077:	
  5836                           
  5837                           ;queue.c: 43: else
  5838                           ;queue.c: 44: Q->rear++;
  5839  0368  0877               	movf	queueArray_in@Q,w
  5840  0369  0084               	movwf	4
  5841  036A  0A80               	incf	0,f
  5842  036B  0008               	return
  5843  036C                     __end_of_queueArray_in:	
  5844  036C                     __ptext1217:	
  5845 ;; =============== function _Digitron_Update ends ============
  5846                           
  5847                           
  5848 ;; *************** function i1_Digitron_Display *****************
  5849 ;; Defined at:
  5850 ;;		line 23 in file "LED/led.c"
  5851 ;; Parameters:    Size  Location     Type
  5852 ;;  Digitron_Dis    1    wreg     PTR struct .
  5853 ;;		 -> digitron3(14), digitron2(14), digitron1(14), 
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;  Digitron_Dis    1    8[COMMON] PTR struct .
  5856 ;;		 -> digitron3(14), digitron2(14), digitron1(14), 
  5857 ;;  Digitron_Dis    1   12[COMMON] unsigned char 
  5858 ;;  Digitron_Dis    1   11[COMMON] unsigned char 
  5859 ;;  Digitron_Dis    1   10[COMMON] unsigned char 
  5860 ;;  Digitron_Dis    1    9[COMMON] unsigned char 
  5861 ;; Return value:  Size  Location     Type
  5862 ;;		None               void
  5863 ;; Registers used:
  5864 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5865 ;; Tracked objects:
  5866 ;;		On entry : 160/120
  5867 ;;		On exit  : 160/100
  5868 ;;		Unchanged: FFE9F/0
  5869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5870 ;;      Params:         0       0       0       0       0
  5871 ;;      Locals:         5       0       0       0       0
  5872 ;;      Temps:          3       0       0       0       0
  5873 ;;      Totals:         8       0       0       0       0
  5874 ;;Total ram usage:        8 bytes
  5875 ;; Hardware stack levels used:    1
  5876 ;; Hardware stack levels required when called:    2
  5877 ;; This function calls:
  5878 ;;		i1_Digitron_Command
  5879 ;;		i1_Digitron_Send_8bit
  5880 ;; This function is called by:
  5881 ;;		_Digitron_Update
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884  036C                     i1_Digitron_Display:	
  5885                           
  5886 ;; hardware stack exceeded
  5887                           ; Regs used in i1_Digitron_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5888                           ;i1Digitron_Display@que stored from wreg
  5889  036C  00F8               	movwf	i1Digitron_Display@que
  5890                           
  5891                           ;led.c: 24: unsigned char fro = que->front;
  5892  036D  3E01               	addlw	1
  5893  036E  0084               	movwf	4
  5894  036F  0800               	movf	0,w
  5895  0370  00FA               	movwf	i1Digitron_Display@fro
  5896                           
  5897                           ;led.c: 25: for(unsigned char i=0; i<3; i++)
  5898  0371  01FC               	clrf	i1Digitron_Display@i
  5899  0372                     i1l10261:	
  5900                           
  5901                           ;led.c: 26: {
  5902                           ;led.c: 27: if(fro+i == 3)
  5903  0372  087A               	movf	i1Digitron_Display@fro,w
  5904  0373  077C               	addwf	i1Digitron_Display@i,w
  5905  0374  00F5               	movwf	??i1_Digitron_Display
  5906  0375  01F6               	clrf	??i1_Digitron_Display+1
  5907  0376  0DF6               	rlf	??i1_Digitron_Display+1,f
  5908  0377  3A03               	xorlw	3
  5909  0378  0476               	iorwf	??i1_Digitron_Display+1,w
  5910  0379  1D03               	skipz
  5911  037A  2B7D               	goto	i1l10265
  5912                           
  5913                           ;led.c: 28: fro = 0;
  5914  037B  01FA               	clrf	i1Digitron_Display@fro
  5915  037C  2B7F               	goto	i1l10267
  5916  037D                     i1l10265:	
  5917                           
  5918                           ;led.c: 29: else
  5919                           ;led.c: 30: fro = fro+i;
  5920  037D  087C               	movf	i1Digitron_Display@i,w
  5921  037E  07FA               	addwf	i1Digitron_Display@fro,f
  5922  037F                     i1l10267:	
  5923                           
  5924                           ;led.c: 32: Digitron_Command(i, 0x00);
  5925  037F  01F3               	clrf	?i1_Digitron_Command
  5926  0380  087C               	movf	i1Digitron_Display@i,w
  5927  0381  23D8  120A  118A   	fcall	i1_Digitron_Command
  5928                           
  5929                           ;led.c: 33: Digitron_Command(i, 0x40);
  5930  0384  3040               	movlw	64
  5931  0385  00F3               	movwf	?i1_Digitron_Command
  5932  0386  087C               	movf	i1Digitron_Display@i,w
  5933  0387  23D8  120A  118A   	fcall	i1_Digitron_Command
  5934                           
  5935                           ;led.c: 34: Digitron_Command(i, 0xc0);
  5936  038A  30C0               	movlw	192
  5937  038B  00F3               	movwf	?i1_Digitron_Command
  5938  038C  087C               	movf	i1Digitron_Display@i,w
  5939  038D  23D8  120A  118A   	fcall	i1_Digitron_Command
  5940                           
  5941                           ;led.c: 35: for(unsigned char j=0;j<4;j++)
  5942  0390  01FB               	clrf	i1Digitron_Display@j
  5943  0391                     i1l10279:	
  5944                           
  5945                           ;led.c: 36: {
  5946                           ;led.c: 37: unsigned char num = que->data[fro][j]-0x30;
  5947  0391  087A               	movf	i1Digitron_Display@fro,w
  5948  0392  00F5               	movwf	??i1_Digitron_Display
  5949  0393  1003               	clrc
  5950  0394  0DF5               	rlf	??i1_Digitron_Display,f
  5951  0395  1003               	clrc
  5952  0396  0D75               	rlf	??i1_Digitron_Display,w
  5953  0397  0778               	addwf	i1Digitron_Display@que,w
  5954  0398  00F6               	movwf	??i1_Digitron_Display+1
  5955  0399  087B               	movf	i1Digitron_Display@j,w
  5956  039A  0776               	addwf	??i1_Digitron_Display+1,w
  5957  039B  00F7               	movwf	??i1_Digitron_Display+2
  5958  039C  3E02               	addlw	2
  5959  039D  0084               	movwf	4
  5960  039E  0800               	movf	0,w
  5961  039F  3ED0               	addlw	208
  5962  03A0  00F9               	movwf	i1Digitron_Display@num
  5963                           
  5964                           ;led.c: 38: if(num>10)
  5965  03A1  300B               	movlw	11
  5966  03A2  0279               	subwf	i1Digitron_Display@num,w
  5967  03A3  1C03               	skipc
  5968  03A4  2BA7               	goto	i1l10285
  5969                           
  5970                           ;led.c: 39: {
  5971                           ;led.c: 41: num = 9;
  5972  03A5  3009               	movlw	9
  5973  03A6  00F9               	movwf	i1Digitron_Display@num
  5974  03A7                     i1l10285:	
  5975                           
  5976                           ;led.c: 42: }
  5977                           ;led.c: 43: Digitron_Send_8bit(CODE[num]);
  5978  03A7  0879               	movf	i1Digitron_Display@num,w
  5979  03A8  3E01               	addlw	low (_CODE-__stringbase)
  5980  03A9  0084               	movwf	4
  5981  03AA  120A  118A  2021   	fcall	stringdir
      +       120A  118A         
  5982  03AF  23C7  120A  118A   	fcall	i1_Digitron_Send_8bit
  5983                           
  5984                           ;led.c: 44: Digitron_Send_8bit(0);
  5985  03B2  3000               	movlw	0
  5986  03B3  23C7  120A  118A   	fcall	i1_Digitron_Send_8bit
  5987  03B6  0AFB               	incf	i1Digitron_Display@j,f
  5988  03B7  3004               	movlw	4
  5989  03B8  027B               	subwf	i1Digitron_Display@j,w
  5990  03B9  1C03               	skipc
  5991  03BA  2B91               	goto	i1l10279
  5992                           
  5993                           ;led.c: 46: }
  5994                           ;led.c: 47: Digitron_Send_8bit(0x8F);
  5995  03BB  308F               	movlw	143
  5996  03BC  23C7  120A  118A   	fcall	i1_Digitron_Send_8bit
  5997                           
  5998                           ;led.c: 48: PORTD = 0xF0;
  5999  03BF  30F0               	movlw	240
  6000  03C0  0088               	movwf	8	;volatile
  6001  03C1  0AFC               	incf	i1Digitron_Display@i,f
  6002  03C2  3003               	movlw	3
  6003  03C3  027C               	subwf	i1Digitron_Display@i,w
  6004  03C4  1803               	btfsc	3,0
  6005  03C5  0008               	return
  6006  03C6  2B72               	goto	i1l10261
  6007  03C7                     __end_ofi1_Digitron_Display:	
  6008  03C7                     __ptext1232:	
  6009 ;; =============== function i1_delay_us ends ============
  6010                           
  6011                           
  6012 ;; *************** function i1_Digitron_Send_8bit *****************
  6013 ;; Defined at:
  6014 ;;		line 4 in file "TM1616/TM1616.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;  Digitron_Sen    1    wreg     unsigned char 
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;  Digitron_Sen    1    0[COMMON] unsigned char 
  6019 ;;  Digitron_Sen    1    1[COMMON] unsigned char 
  6020 ;; Return value:  Size  Location     Type
  6021 ;;		None               void
  6022 ;; Registers used:
  6023 ;;		wreg, status,2, status,0
  6024 ;; Tracked objects:
  6025 ;;		On entry : 140/100
  6026 ;;		On exit  : 160/100
  6027 ;;		Unchanged: FFE9F/0
  6028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6029 ;;      Params:         0       0       0       0       0
  6030 ;;      Locals:         2       0       0       0       0
  6031 ;;      Temps:          0       0       0       0       0
  6032 ;;      Totals:         2       0       0       0       0
  6033 ;;Total ram usage:        2 bytes
  6034 ;; Hardware stack levels used:    1
  6035 ;; This function calls:
  6036 ;;		Nothing
  6037 ;; This function is called by:
  6038 ;;		i1_Digitron_Display
  6039 ;;		i1_Digitron_Command
  6040 ;; This function uses a non-reentrant model
  6041 ;;
  6042  03C7                     i1_Digitron_Send_8bit:	
  6043                           
  6044 ;; hardware stack exceeded
  6045                           ; Regs used in i1_Digitron_Send_8bit: [wreg+status,2+status,0]
  6046                           ;i1Digitron_Send_8bit@dat stored from wreg
  6047  03C7  00F0               	movwf	i1Digitron_Send_8bit@dat
  6048                           
  6049                           ;TM1616.c: 5: unsigned char i;
  6050                           ;TM1616.c: 6: for(i=0;i<8;i++)
  6051  03C8  01F1               	clrf	i1Digitron_Send_8bit@i
  6052  03C9                     i1l1726:	
  6053                           
  6054                           ;TM1616.c: 7: {
  6055                           ;TM1616.c: 8: if(dat&0x01) {
  6056  03C9  1C70               	btfss	i1Digitron_Send_8bit@dat,0
  6057  03CA  2BCD               	goto	i1l1728
  6058                           
  6059                           ;TM1616.c: 9: RC3=1;
  6060  03CB  1587               	bsf	7,3
  6061                           
  6062                           ;TM1616.c: 10: }
  6063  03CC  2BCE               	goto	i1l1729
  6064  03CD                     i1l1728:	
  6065                           
  6066                           ;TM1616.c: 11: else{ RC3=0;}
  6067  03CD  1187               	bcf	7,3
  6068  03CE                     i1l1729:	
  6069                           
  6070                           ;TM1616.c: 12: RC2=0;
  6071  03CE  1107               	bcf	7,2
  6072                           
  6073                           ;TM1616.c: 13: dat=dat>>1;
  6074  03CF  1003               	clrc
  6075  03D0  0CF0               	rrf	i1Digitron_Send_8bit@dat,f
  6076                           
  6077                           ;TM1616.c: 14: RC2=1;
  6078  03D1  1507               	bsf	7,2
  6079  03D2  0AF1               	incf	i1Digitron_Send_8bit@i,f
  6080  03D3  3008               	movlw	8
  6081  03D4  0271               	subwf	i1Digitron_Send_8bit@i,w
  6082  03D5  1803               	btfsc	3,0
  6083  03D6  0008               	return
  6084  03D7  2BC9               	goto	i1l1726
  6085  03D8                     __end_ofi1_Digitron_Send_8bit:	
  6086  03D8                     __ptext1221:	
  6087 ;; =============== function ___ftsub ends ============
  6088                           
  6089                           
  6090 ;; *************** function i1_Digitron_Command *****************
  6091 ;; Defined at:
  6092 ;;		line 19 in file "TM1616/TM1616.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;  Digitron_Com    1    wreg     unsigned char 
  6095 ;;  Digitron_Com    1    3[COMMON] unsigned char 
  6096 ;; Auto vars:     Size  Location     Type
  6097 ;;  Digitron_Com    1    4[COMMON] unsigned char 
  6098 ;; Return value:  Size  Location     Type
  6099 ;;		None               void
  6100 ;; Registers used:
  6101 ;;		wreg, status,2, status,0, pclath, cstack
  6102 ;; Tracked objects:
  6103 ;;		On entry : 140/120
  6104 ;;		On exit  : 160/100
  6105 ;;		Unchanged: FFE9F/0
  6106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6107 ;;      Params:         1       0       0       0       0
  6108 ;;      Locals:         1       0       0       0       0
  6109 ;;      Temps:          0       0       0       0       0
  6110 ;;      Totals:         2       0       0       0       0
  6111 ;;Total ram usage:        2 bytes
  6112 ;; Hardware stack levels used:    1
  6113 ;; Hardware stack levels required when called:    1
  6114 ;; This function calls:
  6115 ;;		i1_delay_us
  6116 ;;		i1_Digitron_Send_8bit
  6117 ;; This function is called by:
  6118 ;;		i1_Digitron_Display
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121  03D8                     i1_Digitron_Command:	
  6122                           
  6123 ;; hardware stack exceeded
  6124                           ; Regs used in i1_Digitron_Command: [wreg+status,2+status,0+pclath+cstack]
  6125                           ;i1Digitron_Command@device stored from wreg
  6126  03D8  00F4               	movwf	i1Digitron_Command@device
  6127                           
  6128                           ;TM1616.c: 20: PORTD = 0xF0;
  6129  03D9  30F0               	movlw	240
  6130  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  6131  03DB  0088               	movwf	8	;volatile
  6132                           
  6133                           ;TM1616.c: 21: PORTD = device;
  6134  03DC  0874               	movf	i1Digitron_Command@device,w
  6135  03DD  0088               	movwf	8	;volatile
  6136                           
  6137                           ;TM1616.c: 22: delay_us(1);
  6138  03DE  3001               	movlw	1
  6139  03DF  23E5  120A  118A   	fcall	i1_delay_us
  6140                           
  6141                           ;TM1616.c: 23: Digitron_Send_8bit(com);
  6142  03E2  0873               	movf	i1Digitron_Command@com,w
  6143  03E3  23C7               	fcall	i1_Digitron_Send_8bit
  6144  03E4  0008               	return
  6145  03E5                     __end_ofi1_Digitron_Command:	
  6146  03E5                     __ptext1231:	
  6147 ;; =============== function _atoi ends ============
  6148                           
  6149                           
  6150 ;; *************** function i1_delay_us *****************
  6151 ;; Defined at:
  6152 ;;		line 29 in file "timer.c"
  6153 ;; Parameters:    Size  Location     Type
  6154 ;;  delay_us        1    wreg     unsigned char 
  6155 ;; Auto vars:     Size  Location     Type
  6156 ;;  delay_us        1    0[COMMON] unsigned char 
  6157 ;;  delay_us        1    2[COMMON] unsigned char 
  6158 ;;  delay_us        1    1[COMMON] unsigned char 
  6159 ;; Return value:  Size  Location     Type
  6160 ;;		None               void
  6161 ;; Registers used:
  6162 ;;		wreg, status,2, status,0
  6163 ;; Tracked objects:
  6164 ;;		On entry : 160/100
  6165 ;;		On exit  : 160/100
  6166 ;;		Unchanged: FFE9F/0
  6167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6168 ;;      Params:         0       0       0       0       0
  6169 ;;      Locals:         3       0       0       0       0
  6170 ;;      Temps:          0       0       0       0       0
  6171 ;;      Totals:         3       0       0       0       0
  6172 ;;Total ram usage:        3 bytes
  6173 ;; Hardware stack levels used:    1
  6174 ;; This function calls:
  6175 ;;		Nothing
  6176 ;; This function is called by:
  6177 ;;		i1_Digitron_Command
  6178 ;; This function uses a non-reentrant model
  6179 ;;
  6180  03E5                     i1_delay_us:	
  6181                           
  6182 ;; hardware stack exceeded
  6183                           ; Regs used in i1_delay_us: [wreg+status,2+status,0]
  6184                           ;i1delay_us@usec stored from wreg
  6185  03E5  00F0               	movwf	i1delay_us@usec
  6186                           
  6187                           ;timer.c: 30: for(unsigned char i = usec; i>0; i--)
  6188  03E6  00F1               	movwf	i1delay_us@i
  6189  03E7  08F1               	movf	i1delay_us@i,f
  6190  03E8  1903               	btfsc	3,2
  6191  03E9  0008               	return
  6192  03EA                     i1l10325:	
  6193                           
  6194                           ;timer.c: 31: for(unsigned char j = 2; j>0; j--);
  6195  03EA  3002               	movlw	2
  6196  03EB  00F2               	movwf	i1delay_us@j
  6197  03EC                     i1l10331:	
  6198  03EC  0BF2               	decfsz	i1delay_us@j,f
  6199  03ED  2BEC               	goto	i1l10331
  6200  03EE  0BF1               	decfsz	i1delay_us@i,f
  6201  03EF  2BEA               	goto	i1l10325
  6202  03F0  0008               	return
  6203  03F1                     __end_ofi1_delay_us:	
  6204  03F1                     __ptext1210:	
  6205 ;; =============== function _Pos_meet ends ============
  6206                           
  6207                           
  6208 ;; *************** function _Distance_Update *****************
  6209 ;; Defined at:
  6210 ;;		line 124 in file "Gps_recive.c"
  6211 ;; Parameters:    Size  Location     Type
  6212 ;;		None
  6213 ;; Auto vars:     Size  Location     Type
  6214 ;;  dat             2   36[BANK1 ] unsigned int 
  6215 ;;  mask            2   32[BANK1 ] unsigned int 
  6216 ;;  dat             2   34[BANK1 ] unsigned int 
  6217 ;;  mask            2   30[BANK1 ] unsigned int 
  6218 ;;  mask            2   28[BANK1 ] unsigned int 
  6219 ;;  dat             2   26[BANK1 ] unsigned int 
  6220 ;;  level           1   38[BANK1 ] unsigned char 
  6221 ;; Return value:  Size  Location     Type
  6222 ;;		None               void
  6223 ;; Registers used:
  6224 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6225 ;; Tracked objects:
  6226 ;;		On entry : 160/60
  6227 ;;		On exit  : 40/0
  6228 ;;		Unchanged: FFE00/0
  6229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6230 ;;      Params:         0       0       0       0       0
  6231 ;;      Locals:         0       0      13       0       0
  6232 ;;      Temps:          0       0       0       0       0
  6233 ;;      Totals:         0       0      13       0       0
  6234 ;;Total ram usage:       13 bytes
  6235 ;; Hardware stack levels used:    1
  6236 ;; Hardware stack levels required when called:    6
  6237 ;; This function calls:
  6238 ;;		_Calc_DistanceLevel
  6239 ;;		_Register_SendData
  6240 ;; This function is called by:
  6241 ;;		_Pos_meet
  6242 ;; This function uses a non-reentrant model
  6243 ;;
  6244  03F1                     _Distance_Update:	
  6245                           
  6246                           ;Gps_recive.c: 125: unsigned char level;
  6247                           ;Gps_recive.c: 127: level = Calc_DistanceLevel();
  6248                           
  6249 ;; hardware stack exceeded
  6250                           ; Regs used in _Distance_Update: [allreg]
  6251  03F1  120A  158A  200A   	fcall	_Calc_DistanceLevel
      +       120A  118A         
  6252  03F6  00C6               	movwf	Distance_Update@level^(0+128)
  6253                           
  6254                           ;Gps_recive.c: 128: level--;
  6255  03F7  03C6               	decf	Distance_Update@level^(0+128),f
  6256                           
  6257                           ;Gps_recive.c: 168: }
  6258                           ;Gps_recive.c: 170: }
  6259                           
  6260                           ;Gps_recive.c: 129: switch(arr_rcv_who[1])
  6261  03F8  0860               	movf	(_arr_rcv_who^(0+128)+1),w
  6262                           
  6263                           ; Switch size 1, requested type "space"
  6264                           ; Number of cases is 3, Range of values is 49 to 51
  6265                           ; switch strategies available:
  6266                           ; Name         Bytes Cycles
  6267                           ; simple_byte    10     6 (average)
  6268                           ; direct_byte    31    22 (fixed)
  6269                           ;	Chosen strategy is simple_byte
  6270  03F9  3A31               	xorlw	49	; case 49
  6271  03FA  1903               	skipnz
  6272  03FB  2C03               	goto	i1l9495
  6273  03FC  3A03               	xorlw	3	; case 50
  6274  03FD  1903               	skipnz
  6275  03FE  2C25               	goto	i1l9507
  6276  03FF  3A01               	xorlw	1	; case 51
  6277  0400  1D03               	btfss	3,2
  6278  0401  0008               	return
  6279  0402  2C50               	goto	i1l9523
  6280  0403                     i1l9495:	
  6281                           
  6282                           ;Gps_recive.c: 132: {
  6283                           ;Gps_recive.c: 133: unsigned int dat;
  6284                           ;Gps_recive.c: 134: unsigned int mask = 0x07FF;
  6285  0403  30FF               	movlw	255
  6286  0404  00BC               	movwf	Distance_Update@mask^(0+128)
  6287  0405  3007               	movlw	7
  6288  0406  00BD               	movwf	(Distance_Update@mask^(0+128)+1)
  6289                           
  6290                           ;Gps_recive.c: 135: dat = 0xF800<<level;
  6291  0407  01BA               	clrf	Distance_Update@dat^(0+128)
  6292  0408  30F8               	movlw	248
  6293  0409  00BB               	movwf	(Distance_Update@dat^(0+128)+1)
  6294  040A  0A46               	incf	Distance_Update@level^(0+128),w
  6295  040B  2C0F               	goto	u266_20
  6296  040C                     u266_25:	
  6297  040C  1003               	clrc
  6298  040D  0DBA               	rlf	Distance_Update@dat^(0+128),f
  6299  040E  0DBB               	rlf	(Distance_Update@dat+1)^(0+128),f
  6300  040F                     u266_20:	
  6301  040F  3EFF               	addlw	-1
  6302  0410  1D03               	skipz
  6303  0411  2C0C               	goto	u266_25
  6304                           
  6305                           ;Gps_recive.c: 136: mask |= dat;
  6306  0412  083A               	movf	Distance_Update@dat^(0+128),w
  6307  0413  04BC               	iorwf	Distance_Update@mask^(0+128),f
  6308  0414  083B               	movf	(Distance_Update@dat+1)^(0+128),w
  6309  0415  04BD               	iorwf	(Distance_Update@mask+1)^(0+128),f
  6310                           
  6311                           ;Gps_recive.c: 138: gps_location |= 0xF800;
  6312  0416  30F8               	movlw	248
  6313  0417  04E2               	iorwf	(_gps_location+1)^(0+128),f
  6314                           
  6315                           ;Gps_recive.c: 139: gps_location &= mask;
  6316  0418  083C               	movf	Distance_Update@mask^(0+128),w
  6317  0419  05E1               	andwf	_gps_location^(0+128),f
  6318  041A  083D               	movf	(Distance_Update@mask+1)^(0+128),w
  6319  041B  05E2               	andwf	(_gps_location+1)^(0+128),f
  6320                           
  6321                           ;Gps_recive.c: 141: Register_SendData(gps_location, 16);
  6322  041C  0862               	movf	(_gps_location+1)^(0+128),w
  6323  041D  00F1               	movwf	?_Register_SendData+1
  6324  041E  0861               	movf	_gps_location^(0+128),w
  6325  041F  00F0               	movwf	?_Register_SendData
  6326  0420  3010               	movlw	16
  6327  0421  00F2               	movwf	?_Register_SendData+2
  6328  0422  2478  120A  118A   	fcall	_Register_SendData
  6329  0425                     i1l9507:	
  6330                           
  6331                           ;Gps_recive.c: 144: {
  6332                           ;Gps_recive.c: 145: unsigned int dat;
  6333                           ;Gps_recive.c: 146: unsigned int mask = 0xF83F;
  6334  0425  303F               	movlw	63
  6335  0426  1683               	bsf	3,5	;RP0=1, select bank1
  6336  0427  00BE               	movwf	Distance_Update@mask_2829^(0+128)
  6337  0428  30F8               	movlw	248
  6338  0429  00BF               	movwf	(Distance_Update@mask_2829^(0+128)+1)
  6339                           
  6340                           ;Gps_recive.c: 147: dat = 0xF800<<level;
  6341  042A  01C2               	clrf	Distance_Update@dat_2828^(0+128)
  6342  042B  00C3               	movwf	(Distance_Update@dat_2828^(0+128)+1)
  6343  042C  0A46               	incf	Distance_Update@level^(0+128),w
  6344  042D  2C31               	goto	u267_20
  6345  042E                     u267_25:	
  6346  042E  1003               	clrc
  6347  042F  0DC2               	rlf	Distance_Update@dat_2828^(0+128),f
  6348  0430  0DC3               	rlf	(Distance_Update@dat_2828+1)^(0+128),f
  6349  0431                     u267_20:	
  6350  0431  3EFF               	addlw	-1
  6351  0432  1D03               	skipz
  6352  0433  2C2E               	goto	u267_25
  6353                           
  6354                           ;Gps_recive.c: 148: dat = dat >> 5;
  6355  0434  3005               	movlw	5
  6356  0435                     u268_25:	
  6357  0435  1003               	clrc
  6358  0436  0CC3               	rrf	(Distance_Update@dat_2828+1)^(0+128),f
  6359  0437  0CC2               	rrf	Distance_Update@dat_2828^(0+128),f
  6360  0438  3EFF               	addlw	-1
  6361  0439  1D03               	skipz
  6362  043A  2C35               	goto	u268_25
  6363                           
  6364                           ;Gps_recive.c: 149: mask |= dat;
  6365  043B  0842               	movf	Distance_Update@dat_2828^(0+128),w
  6366  043C  04BE               	iorwf	Distance_Update@mask_2829^(0+128),f
  6367  043D  0843               	movf	(Distance_Update@dat_2828+1)^(0+128),w
  6368  043E  04BF               	iorwf	(Distance_Update@mask_2829+1)^(0+128),f
  6369                           
  6370                           ;Gps_recive.c: 151: gps_location |= 0x07C0;
  6371  043F  30C0               	movlw	192
  6372  0440  04E1               	iorwf	_gps_location^(0+128),f
  6373  0441  3007               	movlw	7
  6374  0442  04E2               	iorwf	(_gps_location+1)^(0+128),f
  6375                           
  6376                           ;Gps_recive.c: 152: gps_location &= mask;
  6377  0443  083E               	movf	Distance_Update@mask_2829^(0+128),w
  6378  0444  05E1               	andwf	_gps_location^(0+128),f
  6379  0445  083F               	movf	(Distance_Update@mask_2829+1)^(0+128),w
  6380  0446  05E2               	andwf	(_gps_location+1)^(0+128),f
  6381                           
  6382                           ;Gps_recive.c: 154: Register_SendData(gps_location, 16);
  6383  0447  0862               	movf	(_gps_location+1)^(0+128),w
  6384  0448  00F1               	movwf	?_Register_SendData+1
  6385  0449  0861               	movf	_gps_location^(0+128),w
  6386  044A  00F0               	movwf	?_Register_SendData
  6387  044B  3010               	movlw	16
  6388  044C  00F2               	movwf	?_Register_SendData+2
  6389  044D  2478  120A  118A   	fcall	_Register_SendData
  6390  0450                     i1l9523:	
  6391                           
  6392                           ;Gps_recive.c: 157: {
  6393                           ;Gps_recive.c: 158: unsigned int dat;
  6394                           ;Gps_recive.c: 159: unsigned int mask = 0xFFC1;
  6395  0450  30C1               	movlw	193
  6396  0451  1683               	bsf	3,5	;RP0=1, select bank1
  6397  0452  00C0               	movwf	Distance_Update@mask_2831^(0+128)
  6398  0453  30FF               	movlw	255
  6399  0454  00C1               	movwf	(Distance_Update@mask_2831^(0+128)+1)
  6400                           
  6401                           ;Gps_recive.c: 160: dat = 0xF800<<level;
  6402  0455  01C4               	clrf	Distance_Update@dat_2830^(0+128)
  6403  0456  30F8               	movlw	248
  6404  0457  00C5               	movwf	(Distance_Update@dat_2830^(0+128)+1)
  6405  0458  0A46               	incf	Distance_Update@level^(0+128),w
  6406  0459  2C5D               	goto	u269_20
  6407  045A                     u269_25:	
  6408  045A  1003               	clrc
  6409  045B  0DC4               	rlf	Distance_Update@dat_2830^(0+128),f
  6410  045C  0DC5               	rlf	(Distance_Update@dat_2830+1)^(0+128),f
  6411  045D                     u269_20:	
  6412  045D  3EFF               	addlw	-1
  6413  045E  1D03               	skipz
  6414  045F  2C5A               	goto	u269_25
  6415                           
  6416                           ;Gps_recive.c: 161: dat = dat >> 10;
  6417  0460  300A               	movlw	10
  6418  0461                     u270_25:	
  6419  0461  1003               	clrc
  6420  0462  0CC5               	rrf	(Distance_Update@dat_2830+1)^(0+128),f
  6421  0463  0CC4               	rrf	Distance_Update@dat_2830^(0+128),f
  6422  0464  3EFF               	addlw	-1
  6423  0465  1D03               	skipz
  6424  0466  2C61               	goto	u270_25
  6425                           
  6426                           ;Gps_recive.c: 162: mask |= dat;
  6427  0467  0844               	movf	Distance_Update@dat_2830^(0+128),w
  6428  0468  04C0               	iorwf	Distance_Update@mask_2831^(0+128),f
  6429  0469  0845               	movf	(Distance_Update@dat_2830+1)^(0+128),w
  6430  046A  04C1               	iorwf	(Distance_Update@mask_2831+1)^(0+128),f
  6431                           
  6432                           ;Gps_recive.c: 164: gps_location |= 0x003E;
  6433  046B  303E               	movlw	62
  6434  046C  04E1               	iorwf	_gps_location^(0+128),f
  6435                           
  6436                           ;Gps_recive.c: 165: gps_location &= mask;
  6437  046D  0840               	movf	Distance_Update@mask_2831^(0+128),w
  6438  046E  05E1               	andwf	_gps_location^(0+128),f
  6439  046F  0841               	movf	(Distance_Update@mask_2831+1)^(0+128),w
  6440  0470  05E2               	andwf	(_gps_location+1)^(0+128),f
  6441                           
  6442                           ;Gps_recive.c: 167: Register_SendData(gps_location, 16);
  6443  0471  0862               	movf	(_gps_location+1)^(0+128),w
  6444  0472  00F1               	movwf	?_Register_SendData+1
  6445  0473  0861               	movf	_gps_location^(0+128),w
  6446  0474  00F0               	movwf	?_Register_SendData
  6447  0475  3010               	movlw	16
  6448  0476  00F2               	movwf	?_Register_SendData+2
  6449  0477  2C78               	ljmp	i1l8927
  6450  0478                     __end_of_Distance_Update:	
  6451  0478                     __ptext1244:	
  6452 ;; =============== function _queueArray_in ends ============
  6453                           
  6454                           
  6455 ;; *************** function _Register_SendData *****************
  6456 ;; Defined at:
  6457 ;;		line 4 in file "74HC595/74HC595.c"
  6458 ;; Parameters:    Size  Location     Type
  6459 ;;  dat             2    0[COMMON] unsigned int 
  6460 ;;  length          1    2[COMMON] unsigned char 
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;  i               1    3[COMMON] unsigned char 
  6463 ;; Return value:  Size  Location     Type
  6464 ;;		None               void
  6465 ;; Registers used:
  6466 ;;		wreg, status,2, status,0
  6467 ;; Tracked objects:
  6468 ;;		On entry : 60/20
  6469 ;;		On exit  : 60/0
  6470 ;;		Unchanged: FFF9F/0
  6471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6472 ;;      Params:         3       0       0       0       0
  6473 ;;      Locals:         1       0       0       0       0
  6474 ;;      Temps:          0       0       0       0       0
  6475 ;;      Totals:         4       0       0       0       0
  6476 ;;Total ram usage:        4 bytes
  6477 ;; Hardware stack levels used:    1
  6478 ;; This function calls:
  6479 ;;		Nothing
  6480 ;; This function is called by:
  6481 ;;		_Distance_Update
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484  0478                     _Register_SendData:	
  6485  0478                     i1l8927:	
  6486                           ; Regs used in _Register_SendData: [wreg+status,2+status,0]
  6487                           
  6488                           
  6489                           ;74HC595.c: 5: for(unsigned char i = 0; i<length; i++)
  6490  0478  01F3               	clrf	Register_SendData@i
  6491  0479                     i1l8935:	
  6492  0479  0872               	movf	Register_SendData@length,w
  6493  047A  0273               	subwf	Register_SendData@i,w
  6494  047B  1803               	btfsc	3,0
  6495  047C  2C8B               	goto	i1l563
  6496                           
  6497                           ;74HC595.c: 6: {
  6498                           ;74HC595.c: 7: if(dat&0x01)
  6499  047D  1C70               	btfss	Register_SendData@dat,0
  6500  047E  2C82               	goto	i1l561
  6501                           
  6502                           ;74HC595.c: 8: RE1=1;
  6503  047F  1283               	bcf	3,5	;RP0=0, select bank0
  6504  0480  1489               	bsf	9,1
  6505  0481  2C84               	goto	i1l562
  6506  0482                     i1l561:	
  6507                           
  6508                           ;74HC595.c: 9: else RE1=0;
  6509  0482  1283               	bcf	3,5	;RP0=0, select bank0
  6510  0483  1089               	bcf	9,1
  6511  0484                     i1l562:	
  6512                           
  6513                           ;74HC595.c: 10: RE0 = 1;
  6514  0484  1409               	bsf	9,0
  6515                           
  6516                           ;74HC595.c: 11: dat = dat >> 1;
  6517  0485  1003               	clrc
  6518  0486  0CF1               	rrf	Register_SendData@dat+1,f
  6519  0487  0CF0               	rrf	Register_SendData@dat,f
  6520                           
  6521                           ;74HC595.c: 12: RE0 = 0;
  6522  0488  1009               	bcf	9,0
  6523  0489  0AF3               	incf	Register_SendData@i,f
  6524  048A  2C79               	goto	i1l8935
  6525  048B                     i1l563:	
  6526                           
  6527                           ;74HC595.c: 13: }
  6528                           ;74HC595.c: 14: RE2 = 1;
  6529  048B  1283               	bcf	3,5	;RP0=0, select bank0
  6530  048C  1509               	bsf	9,2
  6531                           
  6532                           ;74HC595.c: 15: RE2 = 0;
  6533  048D  1109               	bcf	9,2
  6534  048E  0008               	return
  6535  048F                     __end_of_Register_SendData:	
  6536  048F                     __ptext1242:	
  6537 ;; =============== function _isdigit ends ============
  6538                           
  6539                           
  6540 ;; *************** function _CleanGpsRcv *****************
  6541 ;; Defined at:
  6542 ;;		line 89 in file "Gps_recive.c"
  6543 ;; Parameters:    Size  Location     Type
  6544 ;;		None
  6545 ;; Auto vars:     Size  Location     Type
  6546 ;;  i               1    0[COMMON] unsigned char 
  6547 ;; Return value:  Size  Location     Type
  6548 ;;		None               void
  6549 ;; Registers used:
  6550 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6551 ;; Tracked objects:
  6552 ;;		On entry : 40/20
  6553 ;;		On exit  : 160/20
  6554 ;;		Unchanged: FFE9F/0
  6555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6556 ;;      Params:         0       0       0       0       0
  6557 ;;      Locals:         1       0       0       0       0
  6558 ;;      Temps:          0       0       0       0       0
  6559 ;;      Totals:         1       0       0       0       0
  6560 ;;Total ram usage:        1 bytes
  6561 ;; Hardware stack levels used:    1
  6562 ;; This function calls:
  6563 ;;		Nothing
  6564 ;; This function is called by:
  6565 ;;		_Pos_meet
  6566 ;; This function uses a non-reentrant model
  6567 ;;
  6568  048F                     _CleanGpsRcv:	
  6569  048F                     i1l9541:	
  6570                           ; Regs used in _CleanGpsRcv: [wreg-fsr0h+status,2+status,0]
  6571                           
  6572                           
  6573                           ;Gps_recive.c: 90: unsigned char i = 0;
  6574  048F  01F0               	clrf	CleanGpsRcv@i
  6575                           
  6576                           ;Gps_recive.c: 91: for(i=0; i<=10; i++)
  6577  0490  01F0               	clrf	CleanGpsRcv@i
  6578  0491                     i1l9547:	
  6579                           
  6580                           ;Gps_recive.c: 92: {
  6581                           ;Gps_recive.c: 93: arr_rcv_section1[i] = 0;
  6582  0491  0870               	movf	CleanGpsRcv@i,w
  6583  0492  3E90               	addlw	_arr_rcv_section1& (0+255)
  6584  0493  0084               	movwf	4
  6585  0494  1783               	bsf	3,7	;select IRP bank3
  6586  0495  0180               	clrf	0
  6587  0496  0AF0               	incf	CleanGpsRcv@i,f
  6588  0497  300B               	movlw	11
  6589  0498  0270               	subwf	CleanGpsRcv@i,w
  6590  0499  1C03               	skipc
  6591  049A  2C91               	goto	i1l9547
  6592                           
  6593                           ;Gps_recive.c: 94: }
  6594                           ;Gps_recive.c: 95: for(i=0; i<=10; i++)
  6595  049B  01F0               	clrf	CleanGpsRcv@i
  6596  049C                     i1l9559:	
  6597                           
  6598                           ;Gps_recive.c: 96: {
  6599                           ;Gps_recive.c: 97: arr_rcv_section2[i] = 0;
  6600  049C  0870               	movf	CleanGpsRcv@i,w
  6601  049D  3E9A               	addlw	_arr_rcv_section2& (0+255)
  6602  049E  0084               	movwf	4
  6603  049F  0180               	clrf	0
  6604  04A0  0AF0               	incf	CleanGpsRcv@i,f
  6605  04A1  300B               	movlw	11
  6606  04A2  0270               	subwf	CleanGpsRcv@i,w
  6607  04A3  1C03               	skipc
  6608  04A4  2C9C               	goto	i1l9559
  6609                           
  6610                           ;Gps_recive.c: 98: }
  6611                           ;Gps_recive.c: 99: for(i=0; i<=2; i++)
  6612  04A5  01F0               	clrf	CleanGpsRcv@i
  6613  04A6                     i1l9571:	
  6614                           
  6615                           ;Gps_recive.c: 100: {
  6616                           ;Gps_recive.c: 101: arr_rcv_len[i] = 0;
  6617  04A6  0870               	movf	CleanGpsRcv@i,w
  6618  04A7  3ED6               	addlw	_arr_rcv_len& (0+255)
  6619  04A8  0084               	movwf	4
  6620  04A9  0180               	clrf	0
  6621  04AA  0AF0               	incf	CleanGpsRcv@i,f
  6622  04AB  3003               	movlw	3
  6623  04AC  0270               	subwf	CleanGpsRcv@i,w
  6624  04AD  1C03               	skipc
  6625  04AE  2CA6               	goto	i1l9571
  6626                           
  6627                           ;Gps_recive.c: 102: }
  6628                           ;Gps_recive.c: 103: for(i=0; i<=2; i++)
  6629  04AF  01F0               	clrf	CleanGpsRcv@i
  6630  04B0                     i1l9583:	
  6631                           
  6632                           ;Gps_recive.c: 104: {
  6633                           ;Gps_recive.c: 105: arr_rcv_who[i] = 0;
  6634  04B0  0870               	movf	CleanGpsRcv@i,w
  6635  04B1  3EDF               	addlw	_arr_rcv_who& (0+255)
  6636  04B2  0084               	movwf	4
  6637  04B3  1383               	bcf	3,7	;select IRP bank1
  6638  04B4  0180               	clrf	0
  6639  04B5  0AF0               	incf	CleanGpsRcv@i,f
  6640  04B6  3003               	movlw	3
  6641  04B7  0270               	subwf	CleanGpsRcv@i,w
  6642  04B8  1C03               	skipc
  6643  04B9  2CB0               	goto	i1l9583
  6644                           
  6645                           ;Gps_recive.c: 106: }
  6646                           ;Gps_recive.c: 107: LatiRcvCnt = 0;
  6647  04BA  1683               	bsf	3,5	;RP0=1, select bank1
  6648  04BB  01E5               	clrf	_LatiRcvCnt^(0+128)
  6649                           
  6650                           ;Gps_recive.c: 108: LongiRcvCnt = 0;
  6651  04BC  01E7               	clrf	_LongiRcvCnt^(0+128)
  6652                           
  6653                           ;Gps_recive.c: 109: LenRcvCnt = 0;
  6654  04BD  01E6               	clrf	_LenRcvCnt^(0+128)
  6655                           
  6656                           ;Gps_recive.c: 110: WhoRcvCnt = 0;
  6657  04BE  01E8               	clrf	_WhoRcvCnt^(0+128)
  6658  04BF  0008               	return
  6659  04C0                     __end_of_CleanGpsRcv:	
  6660                           
  6661                           	psect	intentry
  6662  0004                     __pintentry:	
  6663 ;; hardware stack exceeded
  6664                           ; Regs used in _SerialService: [allreg]
  6665                           
  6666  0004                     interrupt_function:	
  6667  007E                     saved_w	set	btemp
  6668  0004  00FE               	movwf	btemp
  6669  0005  0803               	movf	3,w
  6670  0006  1683               	bsf	3,5	;RP0=1, select bank1
  6671  0007  1303               	bcf	3,6	;RP1=0, select bank1
  6672  0008  00DB               	movwf	??_SerialService^(0+128)
  6673  0009  0804               	movf	4,w
  6674  000A  00DC               	movwf	(??_SerialService+1)^(0+128)
  6675  000B  080A               	movf	10,w
  6676  000C  00DD               	movwf	(??_SerialService+2)^(0+128)
  6677  000D  1283               	bcf	3,5	;RP0=0, select bank0
  6678  000E  087F               	movf	btemp+1,w
  6679  000F  1683               	bsf	3,5	;RP0=1, select bank1
  6680  0010  00DE               	movwf	(??_SerialService+3)^(0+128)
  6681  0011  120A  118A  28ED   	ljmp	_SerialService
  6682                           
  6683                           	psect	text1211
  6684  080A                     __ptext1211:	
  6685 ;; =============== function _Distance_Update ends ============
  6686                           
  6687                           
  6688 ;; *************** function _Calc_DistanceLevel *****************
  6689 ;; Defined at:
  6690 ;;		line 115 in file "Gps_recive.c"
  6691 ;; Parameters:    Size  Location     Type
  6692 ;;		None
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;  t               2   23[BANK1 ] unsigned int 
  6695 ;;  level           1   25[BANK1 ] unsigned char 
  6696 ;; Return value:  Size  Location     Type
  6697 ;;                  1    wreg      unsigned char 
  6698 ;; Registers used:
  6699 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6700 ;; Tracked objects:
  6701 ;;		On entry : 160/60
  6702 ;;		On exit  : 60/20
  6703 ;;		Unchanged: FFE00/0
  6704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6705 ;;      Params:         0       0       0       0       0
  6706 ;;      Locals:         0       0      12       0       0
  6707 ;;      Temps:          0       0       0       0       0
  6708 ;;      Totals:         0       0      12       0       0
  6709 ;;Total ram usage:       12 bytes
  6710 ;; Hardware stack levels used:    1
  6711 ;; Hardware stack levels required when called:    5
  6712 ;; This function calls:
  6713 ;;		___altoft
  6714 ;;		_pow
  6715 ;;		___ftadd
  6716 ;;		_sqrt
  6717 ;;		___fttol
  6718 ;;		___lwdiv
  6719 ;; This function is called by:
  6720 ;;		_Distance_Update
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723  080A                     _Calc_DistanceLevel:	
  6724                           
  6725                           ;Gps_recive.c: 116: unsigned char level;
  6726                           ;Gps_recive.c: 117: unsigned int t;
  6727                           ;Gps_recive.c: 118: t = (unsigned int)sqrt(pow(val_rcv_longi - 89100, 2)+pow(val_rcv_lat
      +                          i-500, 2));
  6728                           
  6729 ;; hardware stack exceeded
  6730                           ; Regs used in _Calc_DistanceLevel: [allreg]
  6731  080A  082B               	movf	(_val_rcv_longi+3)^(0+384),w
  6732  080B  1283               	bcf	3,5	;RP0=0, select bank0
  6733  080C  1303               	bcf	3,6	;RP1=0, select bank0
  6734  080D  00AC               	movwf	?___altoft+3
  6735  080E  1683               	bsf	3,5	;RP0=1, select bank3
  6736  080F  1703               	bsf	3,6	;RP1=1, select bank3
  6737  0810  082A               	movf	(_val_rcv_longi+2)^(0+384),w
  6738  0811  1283               	bcf	3,5	;RP0=0, select bank0
  6739  0812  1303               	bcf	3,6	;RP1=0, select bank0
  6740  0813  00AB               	movwf	?___altoft+2
  6741  0814  1683               	bsf	3,5	;RP0=1, select bank3
  6742  0815  1703               	bsf	3,6	;RP1=1, select bank3
  6743  0816  0829               	movf	(_val_rcv_longi+1)^(0+384),w
  6744  0817  1283               	bcf	3,5	;RP0=0, select bank0
  6745  0818  1303               	bcf	3,6	;RP1=0, select bank0
  6746  0819  00AA               	movwf	?___altoft+1
  6747  081A  1683               	bsf	3,5	;RP0=1, select bank3
  6748  081B  1703               	bsf	3,6	;RP1=1, select bank3
  6749  081C  0828               	movf	_val_rcv_longi^(0+384),w
  6750  081D  1283               	bcf	3,5	;RP0=0, select bank0
  6751  081E  1303               	bcf	3,6	;RP1=0, select bank0
  6752  081F  00A9               	movwf	?___altoft
  6753  0820  30F4               	movlw	244
  6754  0821  07A9               	addwf	?___altoft,f
  6755  0822  30A3               	movlw	163
  6756  0823  1803               	skipnc
  6757  0824  30A4               	movlw	164
  6758  0825  07AA               	addwf	?___altoft+1,f
  6759  0826  30FE               	movlw	254
  6760  0827  1803               	skipnc
  6761  0828  30FF               	movlw	255
  6762  0829  07AB               	addwf	?___altoft+2,f
  6763  082A  30FF               	movlw	255
  6764  082B  1C03               	skipc
  6765  082C  07AC               	addwf	?___altoft+3,f
  6766  082D  27A7  120A  158A   	fcall	___altoft
  6767  0830  0829               	movf	?___altoft,w
  6768  0831  1683               	bsf	3,5	;RP0=1, select bank1
  6769  0832  00AE               	movwf	_Calc_DistanceLevel$3685^(0+128)
  6770  0833  1283               	bcf	3,5	;RP0=0, select bank0
  6771  0834  082A               	movf	?___altoft+1,w
  6772  0835  1683               	bsf	3,5	;RP0=1, select bank1
  6773  0836  00AF               	movwf	(_Calc_DistanceLevel$3685+1)^(0+128)
  6774  0837  1283               	bcf	3,5	;RP0=0, select bank0
  6775  0838  082B               	movf	?___altoft+2,w
  6776  0839  1683               	bsf	3,5	;RP0=1, select bank1
  6777  083A  00B0               	movwf	(_Calc_DistanceLevel$3685+2)^(0+128)
  6778                           
  6779                           ;Gps_recive.c: 116: unsigned char level;
  6780                           ;Gps_recive.c: 117: unsigned int t;
  6781                           ;Gps_recive.c: 118: t = (unsigned int)sqrt(pow(val_rcv_longi - 89100, 2)+pow(val_rcv_lat
      +                          i-500, 2));
  6782  083B  1703               	bsf	3,6	;RP1=1, select bank3
  6783  083C  0827               	movf	(_val_rcv_lati+3)^(0+384),w
  6784  083D  1283               	bcf	3,5	;RP0=0, select bank0
  6785  083E  1303               	bcf	3,6	;RP1=0, select bank0
  6786  083F  00AC               	movwf	?___altoft+3
  6787  0840  1683               	bsf	3,5	;RP0=1, select bank3
  6788  0841  1703               	bsf	3,6	;RP1=1, select bank3
  6789  0842  0826               	movf	(_val_rcv_lati+2)^(0+384),w
  6790  0843  1283               	bcf	3,5	;RP0=0, select bank0
  6791  0844  1303               	bcf	3,6	;RP1=0, select bank0
  6792  0845  00AB               	movwf	?___altoft+2
  6793  0846  1683               	bsf	3,5	;RP0=1, select bank3
  6794  0847  1703               	bsf	3,6	;RP1=1, select bank3
  6795  0848  0825               	movf	(_val_rcv_lati+1)^(0+384),w
  6796  0849  1283               	bcf	3,5	;RP0=0, select bank0
  6797  084A  1303               	bcf	3,6	;RP1=0, select bank0
  6798  084B  00AA               	movwf	?___altoft+1
  6799  084C  1683               	bsf	3,5	;RP0=1, select bank3
  6800  084D  1703               	bsf	3,6	;RP1=1, select bank3
  6801  084E  0824               	movf	_val_rcv_lati^(0+384),w
  6802  084F  1283               	bcf	3,5	;RP0=0, select bank0
  6803  0850  1303               	bcf	3,6	;RP1=0, select bank0
  6804  0851  00A9               	movwf	?___altoft
  6805  0852  300C               	movlw	12
  6806  0853  07A9               	addwf	?___altoft,f
  6807  0854  30FE               	movlw	254
  6808  0855  1803               	skipnc
  6809  0856  30FF               	movlw	255
  6810  0857  07AA               	addwf	?___altoft+1,f
  6811  0858  30FF               	movlw	255
  6812  0859  1C03               	skipc
  6813  085A  07AB               	addwf	?___altoft+2,f
  6814  085B  1C03               	skipc
  6815  085C  07AC               	addwf	?___altoft+3,f
  6816  085D  27A7  120A  158A   	fcall	___altoft
  6817  0860  0829               	movf	?___altoft,w
  6818  0861  1683               	bsf	3,5	;RP0=1, select bank1
  6819  0862  00B1               	movwf	_Calc_DistanceLevel$3686^(0+128)
  6820  0863  1283               	bcf	3,5	;RP0=0, select bank0
  6821  0864  082A               	movf	?___altoft+1,w
  6822  0865  1683               	bsf	3,5	;RP0=1, select bank1
  6823  0866  00B2               	movwf	(_Calc_DistanceLevel$3686+1)^(0+128)
  6824  0867  1283               	bcf	3,5	;RP0=0, select bank0
  6825  0868  082B               	movf	?___altoft+2,w
  6826  0869  1683               	bsf	3,5	;RP0=1, select bank1
  6827  086A  00B3               	movwf	(_Calc_DistanceLevel$3686+2)^(0+128)
  6828                           
  6829                           ;Gps_recive.c: 116: unsigned char level;
  6830                           ;Gps_recive.c: 117: unsigned int t;
  6831                           ;Gps_recive.c: 118: t = (unsigned int)sqrt(pow(val_rcv_longi - 89100, 2)+pow(val_rcv_lat
      +                          i-500, 2));
  6832  086B  01A3               	clrf	(?_pow^(0+128)+3)
  6833  086C  01A4               	clrf	((?_pow+1)^(0+128)+3)
  6834  086D  3040               	movlw	64
  6835  086E  00A5               	movwf	((?_pow+2)^(0+128)+3)
  6836  086F  0831               	movf	_Calc_DistanceLevel$3686^(0+128),w
  6837  0870  00A0               	movwf	?_pow^(0+128)
  6838  0871  0832               	movf	(_Calc_DistanceLevel$3686+1)^(0+128),w
  6839  0872  00A1               	movwf	(?_pow+1)^(0+128)
  6840  0873  0833               	movf	(_Calc_DistanceLevel$3686+2)^(0+128),w
  6841  0874  00A2               	movwf	(?_pow+2)^(0+128)
  6842  0875  20C8  120A  158A   	fcall	_pow
  6843  0878  0820               	movf	?_pow^(0+128),w
  6844  0879  00B4               	movwf	_Calc_DistanceLevel$3687^(0+128)
  6845  087A  0821               	movf	(?_pow+1)^(0+128),w
  6846  087B  00B5               	movwf	(_Calc_DistanceLevel$3687+1)^(0+128)
  6847  087C  0822               	movf	(?_pow+2)^(0+128),w
  6848  087D  00B6               	movwf	(_Calc_DistanceLevel$3687+2)^(0+128)
  6849                           
  6850                           ;Gps_recive.c: 116: unsigned char level;
  6851                           ;Gps_recive.c: 117: unsigned int t;
  6852                           ;Gps_recive.c: 118: t = (unsigned int)sqrt(pow(val_rcv_longi - 89100, 2)+pow(val_rcv_lat
      +                          i-500, 2));
  6853  087E  01A3               	clrf	(?_pow^(0+128)+3)
  6854  087F  01A4               	clrf	((?_pow+1)^(0+128)+3)
  6855  0880  3040               	movlw	64
  6856  0881  00A5               	movwf	((?_pow+2)^(0+128)+3)
  6857  0882  082E               	movf	_Calc_DistanceLevel$3685^(0+128),w
  6858  0883  00A0               	movwf	?_pow^(0+128)
  6859  0884  082F               	movf	(_Calc_DistanceLevel$3685+1)^(0+128),w
  6860  0885  00A1               	movwf	(?_pow+1)^(0+128)
  6861  0886  0830               	movf	(_Calc_DistanceLevel$3685+2)^(0+128),w
  6862  0887  00A2               	movwf	(?_pow+2)^(0+128)
  6863  0888  20C8  120A  158A   	fcall	_pow
  6864  088B  0820               	movf	?_pow^(0+128),w
  6865  088C  1283               	bcf	3,5	;RP0=0, select bank0
  6866  088D  00B2               	movwf	?___ftadd+3
  6867  088E  1683               	bsf	3,5	;RP0=1, select bank1
  6868  088F  0821               	movf	(?_pow+1)^(0+128),w
  6869  0890  1283               	bcf	3,5	;RP0=0, select bank0
  6870  0891  00B3               	movwf	?___ftadd+4
  6871  0892  1683               	bsf	3,5	;RP0=1, select bank1
  6872  0893  0822               	movf	(?_pow+2)^(0+128),w
  6873  0894  1283               	bcf	3,5	;RP0=0, select bank0
  6874  0895  00B4               	movwf	?___ftadd+5
  6875  0896  1683               	bsf	3,5	;RP0=1, select bank1
  6876  0897  0834               	movf	_Calc_DistanceLevel$3687^(0+128),w
  6877  0898  1283               	bcf	3,5	;RP0=0, select bank0
  6878  0899  00AF               	movwf	?___ftadd
  6879  089A  1683               	bsf	3,5	;RP0=1, select bank1
  6880  089B  0835               	movf	(_Calc_DistanceLevel$3687+1)^(0+128),w
  6881  089C  1283               	bcf	3,5	;RP0=0, select bank0
  6882  089D  00B0               	movwf	?___ftadd+1
  6883  089E  1683               	bsf	3,5	;RP0=1, select bank1
  6884  089F  0836               	movf	(_Calc_DistanceLevel$3687+2)^(0+128),w
  6885  08A0  1283               	bcf	3,5	;RP0=0, select bank0
  6886  08A1  00B1               	movwf	?___ftadd+2
  6887  08A2  24E5  120A  158A   	fcall	___ftadd
  6888  08A5  082F               	movf	?___ftadd,w
  6889  08A6  00DE               	movwf	?_sqrt
  6890  08A7  0830               	movf	?___ftadd+1,w
  6891  08A8  00DF               	movwf	?_sqrt+1
  6892  08A9  0831               	movf	?___ftadd+2,w
  6893  08AA  00E0               	movwf	?_sqrt+2
  6894  08AB  23C4  120A  158A   	fcall	_sqrt
  6895  08AE  085E               	movf	?_sqrt,w
  6896  08AF  00F8               	movwf	?___fttol
  6897  08B0  085F               	movf	?_sqrt+1,w
  6898  08B1  00F9               	movwf	?___fttol+1
  6899  08B2  0860               	movf	?_sqrt+2,w
  6900  08B3  00FA               	movwf	?___fttol+2
  6901  08B4  218D  120A  158A   	fcall	___fttol
  6902  08B7  0879               	movf	?___fttol+1,w
  6903  08B8  1683               	bsf	3,5	;RP0=1, select bank1
  6904  08B9  00B8               	movwf	(Calc_DistanceLevel@t+1)^(0+128)
  6905  08BA  0878               	movf	?___fttol,w
  6906  08BB  00B7               	movwf	Calc_DistanceLevel@t^(0+128)
  6907                           
  6908                           ;Gps_recive.c: 119: level = (unsigned char)(t/6823);
  6909  08BC  30A7               	movlw	167
  6910  08BD  00F0               	movwf	?___lwdiv
  6911  08BE  301A               	movlw	26
  6912  08BF  00F1               	movwf	?___lwdiv+1
  6913  08C0  0838               	movf	(Calc_DistanceLevel@t+1)^(0+128),w
  6914  08C1  00F3               	movwf	?___lwdiv+3
  6915  08C2  0837               	movf	Calc_DistanceLevel@t^(0+128),w
  6916  08C3  00F2               	movwf	?___lwdiv+2
  6917  08C4  27D6               	fcall	___lwdiv
  6918  08C5  0870               	movf	?___lwdiv,w
  6919  08C6  00B9               	movwf	Calc_DistanceLevel@level^(0+128)
  6920                           
  6921                           ;Gps_recive.c: 120: return level;
  6922  08C7  0008               	return
  6923  08C8                     __end_of_Calc_DistanceLevel:	
  6924  08C8                     __ptext1212:	
  6925 ;; =============== function _Calc_DistanceLevel ends ============
  6926                           
  6927                           
  6928 ;; *************** function _pow *****************
  6929 ;; Defined at:
  6930 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\pow.c"
  6931 ;; Parameters:    Size  Location     Type
  6932 ;;  x               3    0[BANK1 ] unsigned char 
  6933 ;;  y               3    3[BANK1 ] unsigned char 
  6934 ;; Auto vars:     Size  Location     Type
  6935 ;;  yi              4   10[BANK1 ] unsigned long 
  6936 ;;  sign            1    9[BANK1 ] unsigned char 
  6937 ;; Return value:  Size  Location     Type
  6938 ;;                  3    0[BANK1 ] unsigned char 
  6939 ;; Registers used:
  6940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6941 ;; Tracked objects:
  6942 ;;		On entry : 60/20
  6943 ;;		On exit  : 60/20
  6944 ;;		Unchanged: FFE00/0
  6945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6946 ;;      Params:         0       0       6       0       0
  6947 ;;      Locals:         0       0       8       0       0
  6948 ;;      Temps:          0       0       0       0       0
  6949 ;;      Totals:         0       0      14       0       0
  6950 ;;Total ram usage:       14 bytes
  6951 ;; Hardware stack levels used:    1
  6952 ;; Hardware stack levels required when called:    4
  6953 ;; This function calls:
  6954 ;;		___ftge
  6955 ;;		___fttol
  6956 ;;		___lltoft
  6957 ;;		___ftneg
  6958 ;;		_log
  6959 ;;		___ftmul
  6960 ;;		_exp
  6961 ;; This function is called by:
  6962 ;;		_Calc_DistanceLevel
  6963 ;; This function uses a non-reentrant model
  6964 ;;
  6965  08C8                     _pow:	
  6966                           
  6967 ;; hardware stack exceeded
  6968                           ; Regs used in _pow: [allreg]
  6969  08C8  01A9               	clrf	pow@sign^(0+128)
  6970  08C9  0822               	movf	(pow@x+2)^(0+128),w
  6971  08CA  0421               	iorwf	(pow@x+1)^(0+128),w
  6972  08CB  0420               	iorwf	pow@x^(0+128),w
  6973  08CC  1D03               	skipz
  6974  08CD  28DC               	goto	i1l9611
  6975  08CE  01F0               	clrf	?___ftge
  6976  08CF  01F1               	clrf	?___ftge+1
  6977  08D0  01F2               	clrf	?___ftge+2
  6978  08D1  0823               	movf	pow@y^(0+128),w
  6979  08D2  00F3               	movwf	?___ftge+3
  6980  08D3  0824               	movf	(pow@y+1)^(0+128),w
  6981  08D4  00F4               	movwf	?___ftge+4
  6982  08D5  0825               	movf	(pow@y+2)^(0+128),w
  6983  08D6  00F5               	movwf	?___ftge+5
  6984  08D7  265E               	fcall	___ftge
  6985  08D8  01A0               	clrf	?_pow^(0+128)
  6986  08D9  01A1               	clrf	(?_pow+1)^(0+128)
  6987  08DA  01A2               	clrf	(?_pow+2)^(0+128)
  6988  08DB  0008               	return
  6989  08DC                     i1l9611:	
  6990  08DC  0825               	movf	(pow@y+2)^(0+128),w
  6991  08DD  0424               	iorwf	(pow@y+1)^(0+128),w
  6992  08DE  0423               	iorwf	pow@y^(0+128),w
  6993  08DF  1D03               	skipz
  6994  08E0  28E7               	goto	i1l9617
  6995  08E1  01A0               	clrf	?_pow^(0+128)
  6996  08E2  3080               	movlw	128
  6997  08E3  00A1               	movwf	(?_pow+1)^(0+128)
  6998  08E4  303F               	movlw	63
  6999  08E5  00A2               	movwf	(?_pow+2)^(0+128)
  7000  08E6  0008               	return
  7001  08E7                     i1l9617:	
  7002  08E7  0820               	movf	pow@x^(0+128),w
  7003  08E8  00F0               	movwf	?___ftge
  7004  08E9  0821               	movf	(pow@x+1)^(0+128),w
  7005  08EA  00F1               	movwf	?___ftge+1
  7006  08EB  0822               	movf	(pow@x+2)^(0+128),w
  7007  08EC  00F2               	movwf	?___ftge+2
  7008  08ED  01F3               	clrf	?___ftge+3
  7009  08EE  01F4               	clrf	?___ftge+4
  7010  08EF  01F5               	clrf	?___ftge+5
  7011  08F0  265E  120A  158A   	fcall	___ftge
  7012  08F3  1803               	btfsc	3,0
  7013  08F4  2935               	goto	i1l9631
  7014  08F5  0823               	movf	pow@y^(0+128),w
  7015  08F6  00F8               	movwf	?___fttol
  7016  08F7  0824               	movf	(pow@y+1)^(0+128),w
  7017  08F8  00F9               	movwf	?___fttol+1
  7018  08F9  0825               	movf	(pow@y+2)^(0+128),w
  7019  08FA  00FA               	movwf	?___fttol+2
  7020  08FB  218D  120A  158A   	fcall	___fttol
  7021  08FE  087B               	movf	?___fttol+3,w
  7022  08FF  1683               	bsf	3,5	;RP0=1, select bank1
  7023  0900  00AD               	movwf	(pow@yi+3)^(0+128)
  7024  0901  087A               	movf	?___fttol+2,w
  7025  0902  00AC               	movwf	(pow@yi+2)^(0+128)
  7026  0903  0879               	movf	?___fttol+1,w
  7027  0904  00AB               	movwf	(pow@yi+1)^(0+128)
  7028  0905  0878               	movf	?___fttol,w
  7029  0906  00AA               	movwf	pow@yi^(0+128)
  7030  0907  082D               	movf	(pow@yi+3)^(0+128),w
  7031  0908  00FB               	movwf	?___lltoft+3
  7032  0909  082C               	movf	(pow@yi+2)^(0+128),w
  7033  090A  00FA               	movwf	?___lltoft+2
  7034  090B  082B               	movf	(pow@yi+1)^(0+128),w
  7035  090C  00F9               	movwf	?___lltoft+1
  7036  090D  082A               	movf	pow@yi^(0+128),w
  7037  090E  00F8               	movwf	?___lltoft
  7038  090F  21EF  120A  158A   	fcall	___lltoft
  7039  0912  0825               	movf	(pow@y+2)^(0+128),w
  7040  0913  067A               	xorwf	?___lltoft+2,w
  7041  0914  1D03               	skipz
  7042  0915  291C               	goto	u278_25
  7043  0916  0824               	movf	(pow@y+1)^(0+128),w
  7044  0917  0679               	xorwf	?___lltoft+1,w
  7045  0918  1D03               	skipz
  7046  0919  291C               	goto	u278_25
  7047  091A  0823               	movf	pow@y^(0+128),w
  7048  091B  0678               	xorwf	?___lltoft,w
  7049  091C                     u278_25:	
  7050  091C  1903               	skipnz
  7051  091D  2922               	goto	i1l9625
  7052  091E  01A0               	clrf	?_pow^(0+128)
  7053  091F  01A1               	clrf	(?_pow+1)^(0+128)
  7054  0920  01A2               	clrf	(?_pow+2)^(0+128)
  7055  0921  0008               	return
  7056  0922                     i1l9625:	
  7057  0922  082A               	movf	pow@yi^(0+128),w
  7058  0923  00A9               	movwf	pow@sign^(0+128)
  7059  0924  3001               	movlw	1
  7060  0925  05A9               	andwf	pow@sign^(0+128),f
  7061  0926  0820               	movf	pow@x^(0+128),w
  7062  0927  00F0               	movwf	?___ftneg
  7063  0928  0821               	movf	(pow@x+1)^(0+128),w
  7064  0929  00F1               	movwf	?___ftneg+1
  7065  092A  0822               	movf	(pow@x+2)^(0+128),w
  7066  092B  00F2               	movwf	?___ftneg+2
  7067  092C  26A0  120A  158A   	fcall	___ftneg
  7068  092F  0870               	movf	?___ftneg,w
  7069  0930  00A0               	movwf	pow@x^(0+128)
  7070  0931  0871               	movf	?___ftneg+1,w
  7071  0932  00A1               	movwf	(pow@x+1)^(0+128)
  7072  0933  0872               	movf	?___ftneg+2,w
  7073  0934  00A2               	movwf	(pow@x+2)^(0+128)
  7074  0935                     i1l9631:	
  7075  0935  0820               	movf	pow@x^(0+128),w
  7076  0936  1283               	bcf	3,5	;RP0=0, select bank0
  7077  0937  00D0               	movwf	?_log
  7078  0938  1683               	bsf	3,5	;RP0=1, select bank1
  7079  0939  0821               	movf	(pow@x+1)^(0+128),w
  7080  093A  1283               	bcf	3,5	;RP0=0, select bank0
  7081  093B  00D1               	movwf	?_log+1
  7082  093C  1683               	bsf	3,5	;RP0=1, select bank1
  7083  093D  0822               	movf	(pow@x+2)^(0+128),w
  7084  093E  1283               	bcf	3,5	;RP0=0, select bank0
  7085  093F  00D2               	movwf	?_log+2
  7086  0940  220D  120A  158A   	fcall	_log
  7087  0943  0850               	movf	?_log,w
  7088  0944  1683               	bsf	3,5	;RP0=1, select bank1
  7089  0945  00A6               	movwf	_pow$3688^(0+128)
  7090  0946  1283               	bcf	3,5	;RP0=0, select bank0
  7091  0947  0851               	movf	?_log+1,w
  7092  0948  1683               	bsf	3,5	;RP0=1, select bank1
  7093  0949  00A7               	movwf	(_pow$3688+1)^(0+128)
  7094  094A  1283               	bcf	3,5	;RP0=0, select bank0
  7095  094B  0852               	movf	?_log+2,w
  7096  094C  1683               	bsf	3,5	;RP0=1, select bank1
  7097  094D  00A8               	movwf	(_pow$3688+2)^(0+128)
  7098  094E  0823               	movf	pow@y^(0+128),w
  7099  094F  1283               	bcf	3,5	;RP0=0, select bank0
  7100  0950  00A0               	movwf	?___ftmul
  7101  0951  1683               	bsf	3,5	;RP0=1, select bank1
  7102  0952  0824               	movf	(pow@y+1)^(0+128),w
  7103  0953  1283               	bcf	3,5	;RP0=0, select bank0
  7104  0954  00A1               	movwf	?___ftmul+1
  7105  0955  1683               	bsf	3,5	;RP0=1, select bank1
  7106  0956  0825               	movf	(pow@y+2)^(0+128),w
  7107  0957  1283               	bcf	3,5	;RP0=0, select bank0
  7108  0958  00A2               	movwf	?___ftmul+2
  7109  0959  1683               	bsf	3,5	;RP0=1, select bank1
  7110  095A  0826               	movf	_pow$3688^(0+128),w
  7111  095B  1283               	bcf	3,5	;RP0=0, select bank0
  7112  095C  00A3               	movwf	?___ftmul+3
  7113  095D  1683               	bsf	3,5	;RP0=1, select bank1
  7114  095E  0827               	movf	(_pow$3688+1)^(0+128),w
  7115  095F  1283               	bcf	3,5	;RP0=0, select bank0
  7116  0960  00A4               	movwf	?___ftmul+4
  7117  0961  1683               	bsf	3,5	;RP0=1, select bank1
  7118  0962  0828               	movf	(_pow$3688+2)^(0+128),w
  7119  0963  1283               	bcf	3,5	;RP0=0, select bank0
  7120  0964  00A5               	movwf	?___ftmul+5
  7121  0965  25A5  120A  158A   	fcall	___ftmul
  7122  0968  0820               	movf	?___ftmul,w
  7123  0969  00D5               	movwf	?_exp
  7124  096A  0821               	movf	?___ftmul+1,w
  7125  096B  00D6               	movwf	?_exp+1
  7126  096C  0822               	movf	?___ftmul+2,w
  7127  096D  00D7               	movwf	?_exp+2
  7128  096E  22D2  120A  158A   	fcall	_exp
  7129  0971  0855               	movf	?_exp,w
  7130  0972  1683               	bsf	3,5	;RP0=1, select bank1
  7131  0973  00A0               	movwf	pow@x^(0+128)
  7132  0974  1283               	bcf	3,5	;RP0=0, select bank0
  7133  0975  0856               	movf	?_exp+1,w
  7134  0976  1683               	bsf	3,5	;RP0=1, select bank1
  7135  0977  00A1               	movwf	(pow@x+1)^(0+128)
  7136  0978  1283               	bcf	3,5	;RP0=0, select bank0
  7137  0979  0857               	movf	?_exp+2,w
  7138  097A  1683               	bsf	3,5	;RP0=1, select bank1
  7139  097B  00A2               	movwf	(pow@x+2)^(0+128)
  7140  097C  0829               	movf	pow@sign^(0+128),w
  7141  097D  1903               	btfsc	3,2
  7142  097E  0008               	return
  7143  097F  0820               	movf	pow@x^(0+128),w
  7144  0980  00F0               	movwf	?___ftneg
  7145  0981  0821               	movf	(pow@x+1)^(0+128),w
  7146  0982  00F1               	movwf	?___ftneg+1
  7147  0983  0822               	movf	(pow@x+2)^(0+128),w
  7148  0984  00F2               	movwf	?___ftneg+2
  7149  0985  26A0               	fcall	___ftneg
  7150  0986  0870               	movf	?___ftneg,w
  7151  0987  00A0               	movwf	?_pow^(0+128)
  7152  0988  0871               	movf	?___ftneg+1,w
  7153  0989  00A1               	movwf	(?_pow+1)^(0+128)
  7154  098A  0872               	movf	?___ftneg+2,w
  7155  098B  00A2               	movwf	(?_pow+2)^(0+128)
  7156  098C  0008               	return
  7157  098D                     __end_of_pow:	
  7158  098D                     __ptext1236:	
  7159 ;; =============== function ___ftneg ends ============
  7160                           
  7161                           
  7162 ;; *************** function ___fttol *****************
  7163 ;; Defined at:
  7164 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\fttol.c"
  7165 ;; Parameters:    Size  Location     Type
  7166 ;;  f1              3    8[COMMON] float 
  7167 ;; Auto vars:     Size  Location     Type
  7168 ;;  lval            4    4[BANK0 ] unsigned long 
  7169 ;;  exp1            1    8[BANK0 ] unsigned char 
  7170 ;;  sign1           1    3[BANK0 ] unsigned char 
  7171 ;; Return value:  Size  Location     Type
  7172 ;;                  4    8[COMMON] long 
  7173 ;; Registers used:
  7174 ;;		wreg, status,2, status,0
  7175 ;; Tracked objects:
  7176 ;;		On entry : 40/0
  7177 ;;		On exit  : 60/0
  7178 ;;		Unchanged: FFF9F/0
  7179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7180 ;;      Params:         4       0       0       0       0
  7181 ;;      Locals:         0       6       0       0       0
  7182 ;;      Temps:          0       3       0       0       0
  7183 ;;      Totals:         4       9       0       0       0
  7184 ;;Total ram usage:       13 bytes
  7185 ;; Hardware stack levels used:    1
  7186 ;; This function calls:
  7187 ;;		Nothing
  7188 ;; This function is called by:
  7189 ;;		_Calc_DistanceLevel
  7190 ;;		_pow
  7191 ;;		_exp
  7192 ;;		_floor
  7193 ;; This function uses a non-reentrant model
  7194 ;;
  7195  098D                     ___fttol:	
  7196                           
  7197 ;; hardware stack exceeded
  7198                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7199  098D  0878               	movf	___fttol@f1,w
  7200  098E  1283               	bcf	3,5	;RP0=0, select bank0
  7201  098F  00A0               	movwf	??___fttol
  7202  0990  0879               	movf	___fttol@f1+1,w
  7203  0991  00A1               	movwf	??___fttol+1
  7204  0992  087A               	movf	___fttol@f1+2,w
  7205  0993  00A2               	movwf	??___fttol+2
  7206  0994  1003               	clrc
  7207  0995  0D21               	rlf	??___fttol+1,w
  7208  0996  0D22               	rlf	??___fttol+2,w
  7209  0997  00A8               	movwf	___fttol@exp1
  7210  0998  08A8               	movf	___fttol@exp1,f
  7211  0999  1D03               	skipz
  7212  099A  29A0               	goto	i1l10055
  7213  099B                     i1l10053:	
  7214  099B  01F8               	clrf	?___fttol
  7215  099C  01F9               	clrf	?___fttol+1
  7216  099D  01FA               	clrf	?___fttol+2
  7217  099E  01FB               	clrf	?___fttol+3
  7218  099F  0008               	return
  7219  09A0                     i1l10055:	
  7220  09A0  0878               	movf	___fttol@f1,w
  7221  09A1  00A0               	movwf	??___fttol
  7222  09A2  0879               	movf	___fttol@f1+1,w
  7223  09A3  00A1               	movwf	??___fttol+1
  7224  09A4  087A               	movf	___fttol@f1+2,w
  7225  09A5  00A2               	movwf	??___fttol+2
  7226  09A6  3017               	movlw	23
  7227  09A7                     u347_25:	
  7228  09A7  1003               	clrc
  7229  09A8  0CA2               	rrf	??___fttol+2,f
  7230  09A9  0CA1               	rrf	??___fttol+1,f
  7231  09AA  0CA0               	rrf	??___fttol,f
  7232  09AB  3EFF               	addlw	-1
  7233  09AC  1D03               	skipz
  7234  09AD  29A7               	goto	u347_25
  7235  09AE  0820               	movf	??___fttol,w
  7236  09AF  00A3               	movwf	___fttol@sign1
  7237  09B0  17F9               	bsf	___fttol@f1+1,7
  7238  09B1  01FA               	clrf	___fttol@f1+2
  7239  09B2  0878               	movf	___fttol@f1,w
  7240  09B3  00A4               	movwf	___fttol@lval
  7241  09B4  0879               	movf	___fttol@f1+1,w
  7242  09B5  00A5               	movwf	___fttol@lval+1
  7243  09B6  087A               	movf	___fttol@f1+2,w
  7244  09B7  00A6               	movwf	___fttol@lval+2
  7245  09B8  01A7               	clrf	___fttol@lval+3
  7246  09B9  308E               	movlw	142
  7247  09BA  02A8               	subwf	___fttol@exp1,f
  7248  09BB  1FA8               	btfss	___fttol@exp1,7
  7249  09BC  29CA               	goto	i1l10075
  7250  09BD  0828               	movf	___fttol@exp1,w
  7251  09BE  3A80               	xorlw	128
  7252  09BF  3E8F               	addlw	143
  7253  09C0  1C03               	btfss	3,0
  7254  09C1  299B               	goto	i1l10053
  7255  09C2                     i1l10071:	
  7256  09C2  1003               	clrc
  7257  09C3  0CA7               	rrf	___fttol@lval+3,f
  7258  09C4  0CA6               	rrf	___fttol@lval+2,f
  7259  09C5  0CA5               	rrf	___fttol@lval+1,f
  7260  09C6  0CA4               	rrf	___fttol@lval,f
  7261  09C7  0FA8               	incfsz	___fttol@exp1,f
  7262  09C8  29C2               	goto	i1l10071
  7263  09C9  29D8               	goto	i1l10081
  7264  09CA                     i1l10075:	
  7265  09CA  3018               	movlw	24
  7266  09CB  0228               	subwf	___fttol@exp1,w
  7267  09CC  1803               	btfsc	3,0
  7268  09CD  299B               	goto	i1l10053
  7269  09CE                     i1l6241:	
  7270  09CE  08A8               	movf	___fttol@exp1,f
  7271  09CF  1903               	btfsc	3,2
  7272  09D0  29D8               	goto	i1l10081
  7273  09D1  1003               	clrc
  7274  09D2  0DA4               	rlf	___fttol@lval,f
  7275  09D3  0DA5               	rlf	___fttol@lval+1,f
  7276  09D4  0DA6               	rlf	___fttol@lval+2,f
  7277  09D5  0DA7               	rlf	___fttol@lval+3,f
  7278  09D6  03A8               	decf	___fttol@exp1,f
  7279  09D7  29CE               	goto	i1l6241
  7280  09D8                     i1l10081:	
  7281  09D8  0823               	movf	___fttol@sign1,w
  7282  09D9  1903               	btfsc	3,2
  7283  09DA  29E6               	goto	i1l10085
  7284  09DB  09A4               	comf	___fttol@lval,f
  7285  09DC  09A5               	comf	___fttol@lval+1,f
  7286  09DD  09A6               	comf	___fttol@lval+2,f
  7287  09DE  09A7               	comf	___fttol@lval+3,f
  7288  09DF  0AA4               	incf	___fttol@lval,f
  7289  09E0  1903               	skipnz
  7290  09E1  0AA5               	incf	___fttol@lval+1,f
  7291  09E2  1903               	skipnz
  7292  09E3  0AA6               	incf	___fttol@lval+2,f
  7293  09E4  1903               	skipnz
  7294  09E5  0AA7               	incf	___fttol@lval+3,f
  7295  09E6                     i1l10085:	
  7296  09E6  0827               	movf	___fttol@lval+3,w
  7297  09E7  00FB               	movwf	?___fttol+3
  7298  09E8  0826               	movf	___fttol@lval+2,w
  7299  09E9  00FA               	movwf	?___fttol+2
  7300  09EA  0825               	movf	___fttol@lval+1,w
  7301  09EB  00F9               	movwf	?___fttol+1
  7302  09EC  0824               	movf	___fttol@lval,w
  7303  09ED  00F8               	movwf	?___fttol
  7304  09EE  0008               	return
  7305  09EF                     __end_of___fttol:	
  7306  09EF                     __ptext1223:	
  7307 ;; =============== function _ldexp ends ============
  7308                           
  7309                           
  7310 ;; *************** function ___lltoft *****************
  7311 ;; Defined at:
  7312 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\lltoft.c"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;  c               4    8[COMMON] unsigned long 
  7315 ;; Auto vars:     Size  Location     Type
  7316 ;;  exp             1   12[COMMON] unsigned char 
  7317 ;; Return value:  Size  Location     Type
  7318 ;;                  3    8[COMMON] float 
  7319 ;; Registers used:
  7320 ;;		wreg, status,2, status,0, pclath, cstack
  7321 ;; Tracked objects:
  7322 ;;		On entry : 60/20
  7323 ;;		On exit  : 60/20
  7324 ;;		Unchanged: FFF9F/0
  7325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7326 ;;      Params:         4       0       0       0       0
  7327 ;;      Locals:         1       0       0       0       0
  7328 ;;      Temps:          0       0       0       0       0
  7329 ;;      Totals:         5       0       0       0       0
  7330 ;;Total ram usage:        5 bytes
  7331 ;; Hardware stack levels used:    1
  7332 ;; Hardware stack levels required when called:    1
  7333 ;; This function calls:
  7334 ;;		___ftpack
  7335 ;; This function is called by:
  7336 ;;		_pow
  7337 ;; This function uses a non-reentrant model
  7338 ;;
  7339  09EF                     ___lltoft:	
  7340                           
  7341 ;; hardware stack exceeded
  7342                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  7343  09EF  308E               	movlw	142
  7344  09F0  00FC               	movwf	___lltoft@exp
  7345  09F1                     i1l10149:	
  7346  09F1  30FF               	movlw	255
  7347  09F2  057B               	andwf	___lltoft@c+3,w
  7348  09F3  1903               	btfsc	3,2
  7349  09F4  29FC               	goto	i1l10151
  7350  09F5  1003               	clrc
  7351  09F6  0CFB               	rrf	___lltoft@c+3,f
  7352  09F7  0CFA               	rrf	___lltoft@c+2,f
  7353  09F8  0CF9               	rrf	___lltoft@c+1,f
  7354  09F9  0CF8               	rrf	___lltoft@c,f
  7355  09FA  0AFC               	incf	___lltoft@exp,f
  7356  09FB  29F1               	goto	i1l10149
  7357  09FC                     i1l10151:	
  7358  09FC  0878               	movf	___lltoft@c,w
  7359  09FD  00F0               	movwf	?___ftpack
  7360  09FE  0879               	movf	___lltoft@c+1,w
  7361  09FF  00F1               	movwf	?___ftpack+1
  7362  0A00  087A               	movf	___lltoft@c+2,w
  7363  0A01  00F2               	movwf	?___ftpack+2
  7364  0A02  087C               	movf	___lltoft@exp,w
  7365  0A03  00F3               	movwf	?___ftpack+3
  7366  0A04  01F4               	clrf	?___ftpack+4
  7367  0A05  2620               	fcall	___ftpack
  7368  0A06  0870               	movf	?___ftpack,w
  7369  0A07  00F8               	movwf	?___lltoft
  7370  0A08  0871               	movf	?___ftpack+1,w
  7371  0A09  00F9               	movwf	?___lltoft+1
  7372  0A0A  0872               	movf	?___ftpack+2,w
  7373  0A0B  00FA               	movwf	?___lltoft+2
  7374  0A0C  0008               	return
  7375  0A0D                     __end_of___lltoft:	
  7376  0A0D                     __ptext1214:	
  7377 ;; =============== function _exp ends ============
  7378                           
  7379                           
  7380 ;; *************** function _log *****************
  7381 ;; Defined at:
  7382 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\log.c"
  7383 ;; Parameters:    Size  Location     Type
  7384 ;;  x               3   48[BANK0 ] unsigned char 
  7385 ;; Auto vars:     Size  Location     Type
  7386 ;;  exp             2   51[BANK0 ] int 
  7387 ;; Return value:  Size  Location     Type
  7388 ;;                  3   48[BANK0 ] int 
  7389 ;; Registers used:
  7390 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7391 ;; Tracked objects:
  7392 ;;		On entry : 60/0
  7393 ;;		On exit  : 60/0
  7394 ;;		Unchanged: FFE9F/0
  7395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7396 ;;      Params:         0       3       0       0       0
  7397 ;;      Locals:         0       2       0       0       0
  7398 ;;      Temps:          0       0       0       0       0
  7399 ;;      Totals:         0       5       0       0       0
  7400 ;;Total ram usage:        5 bytes
  7401 ;; Hardware stack levels used:    1
  7402 ;; Hardware stack levels required when called:    3
  7403 ;; This function calls:
  7404 ;;		___ftge
  7405 ;;		_frexp
  7406 ;;		___ftmul
  7407 ;;		___ftadd
  7408 ;;		_eval_poly
  7409 ;;		___awtoft
  7410 ;; This function is called by:
  7411 ;;		_pow
  7412 ;; This function uses a non-reentrant model
  7413 ;;
  7414  0A0D                     _log:	
  7415                           
  7416 ;; hardware stack exceeded
  7417                           ; Regs used in _log: [allreg]
  7418  0A0D  0850               	movf	log@x,w
  7419  0A0E  00F0               	movwf	?___ftge
  7420  0A0F  0851               	movf	log@x+1,w
  7421  0A10  00F1               	movwf	?___ftge+1
  7422  0A11  0852               	movf	log@x+2,w
  7423  0A12  00F2               	movwf	?___ftge+2
  7424  0A13  01F3               	clrf	?___ftge+3
  7425  0A14  01F4               	clrf	?___ftge+4
  7426  0A15  01F5               	clrf	?___ftge+5
  7427  0A16  265E  120A  158A   	fcall	___ftge
  7428  0A19  1803               	btfsc	3,0
  7429  0A1A  2A1F               	goto	i1l9691
  7430  0A1B  01D0               	clrf	?_log
  7431  0A1C  01D1               	clrf	?_log+1
  7432  0A1D  01D2               	clrf	?_log+2
  7433  0A1E  0008               	return
  7434  0A1F                     i1l9691:	
  7435  0A1F  0852               	movf	log@x+2,w
  7436  0A20  0451               	iorwf	log@x+1,w
  7437  0A21  0450               	iorwf	log@x,w
  7438  0A22  1D03               	skipz
  7439  0A23  2A28               	goto	i1l9697
  7440  0A24  01D0               	clrf	?_log
  7441  0A25  01D1               	clrf	?_log+1
  7442  0A26  01D2               	clrf	?_log+2
  7443  0A27  0008               	return
  7444  0A28                     i1l9697:	
  7445  0A28  01AF               	clrf	?___ftadd
  7446  0A29  3080               	movlw	128
  7447  0A2A  00B0               	movwf	?___ftadd+1
  7448  0A2B  30BF               	movlw	191
  7449  0A2C  00B1               	movwf	?___ftadd+2
  7450  0A2D  01A0               	clrf	?___ftmul
  7451  0A2E  01A1               	clrf	?___ftmul+1
  7452  0A2F  3040               	movlw	64
  7453  0A30  00A2               	movwf	?___ftmul+2
  7454  0A31  3053               	movlw	log@exp& (0+255)
  7455  0A32  00F3               	movwf	?_frexp+3
  7456  0A33  0850               	movf	log@x,w
  7457  0A34  00F0               	movwf	?_frexp
  7458  0A35  0851               	movf	log@x+1,w
  7459  0A36  00F1               	movwf	?_frexp+1
  7460  0A37  0852               	movf	log@x+2,w
  7461  0A38  00F2               	movwf	?_frexp+2
  7462  0A39  2296  120A  158A   	fcall	_frexp
  7463  0A3C  0870               	movf	?_frexp,w
  7464  0A3D  00A3               	movwf	?___ftmul+3
  7465  0A3E  0871               	movf	?_frexp+1,w
  7466  0A3F  00A4               	movwf	?___ftmul+4
  7467  0A40  0872               	movf	?_frexp+2,w
  7468  0A41  00A5               	movwf	?___ftmul+5
  7469  0A42  25A5  120A  158A   	fcall	___ftmul
  7470  0A45  0820               	movf	?___ftmul,w
  7471  0A46  00B2               	movwf	?___ftadd+3
  7472  0A47  0821               	movf	?___ftmul+1,w
  7473  0A48  00B3               	movwf	?___ftadd+4
  7474  0A49  0822               	movf	?___ftmul+2,w
  7475  0A4A  00B4               	movwf	?___ftadd+5
  7476  0A4B  24E5  120A  158A   	fcall	___ftadd
  7477  0A4E  082F               	movf	?___ftadd,w
  7478  0A4F  00D0               	movwf	log@x
  7479  0A50  0830               	movf	?___ftadd+1,w
  7480  0A51  00D1               	movwf	log@x+1
  7481  0A52  0831               	movf	?___ftadd+2,w
  7482  0A53  00D2               	movwf	log@x+2
  7483  0A54  30FF               	movlw	-1
  7484  0A55  07D3               	addwf	log@exp,f
  7485  0A56  1C03               	skipc
  7486  0A57  03D4               	decf	log@exp+1,f
  7487  0A58  0850               	movf	log@x,w
  7488  0A59  00C5               	movwf	?_eval_poly
  7489  0A5A  0851               	movf	log@x+1,w
  7490  0A5B  00C6               	movwf	?_eval_poly+1
  7491  0A5C  0852               	movf	log@x+2,w
  7492  0A5D  00C7               	movwf	?_eval_poly+2
  7493  0A5E  3029               	movlw	(log@coeff-__stringbase)& (0+255)
  7494  0A5F  00C8               	movwf	?_eval_poly+3
  7495  0A60  3008               	movlw	8
  7496  0A61  00C9               	movwf	?_eval_poly+4
  7497  0A62  01CA               	clrf	?_eval_poly+5
  7498  0A63  2487  120A  158A   	fcall	_eval_poly
  7499  0A66  0845               	movf	?_eval_poly,w
  7500  0A67  00D0               	movwf	log@x
  7501  0A68  0846               	movf	?_eval_poly+1,w
  7502  0A69  00D1               	movwf	log@x+1
  7503  0A6A  0847               	movf	?_eval_poly+2,w
  7504  0A6B  00D2               	movwf	log@x+2
  7505  0A6C  0850               	movf	log@x,w
  7506  0A6D  00AF               	movwf	?___ftadd
  7507  0A6E  0851               	movf	log@x+1,w
  7508  0A6F  00B0               	movwf	?___ftadd+1
  7509  0A70  0852               	movf	log@x+2,w
  7510  0A71  00B1               	movwf	?___ftadd+2
  7511  0A72  3072               	movlw	114
  7512  0A73  00A0               	movwf	?___ftmul
  7513  0A74  3031               	movlw	49
  7514  0A75  00A1               	movwf	?___ftmul+1
  7515  0A76  303F               	movlw	63
  7516  0A77  00A2               	movwf	?___ftmul+2
  7517  0A78  0854               	movf	log@exp+1,w
  7518  0A79  00F9               	movwf	?___awtoft+1
  7519  0A7A  0853               	movf	log@exp,w
  7520  0A7B  00F8               	movwf	?___awtoft
  7521  0A7C  26A8  120A  158A   	fcall	___awtoft
  7522  0A7F  0878               	movf	?___awtoft,w
  7523  0A80  00A3               	movwf	?___ftmul+3
  7524  0A81  0879               	movf	?___awtoft+1,w
  7525  0A82  00A4               	movwf	?___ftmul+4
  7526  0A83  087A               	movf	?___awtoft+2,w
  7527  0A84  00A5               	movwf	?___ftmul+5
  7528  0A85  25A5  120A  158A   	fcall	___ftmul
  7529  0A88  0820               	movf	?___ftmul,w
  7530  0A89  00B2               	movwf	?___ftadd+3
  7531  0A8A  0821               	movf	?___ftmul+1,w
  7532  0A8B  00B3               	movwf	?___ftadd+4
  7533  0A8C  0822               	movf	?___ftmul+2,w
  7534  0A8D  00B4               	movwf	?___ftadd+5
  7535  0A8E  24E5               	fcall	___ftadd
  7536  0A8F  082F               	movf	?___ftadd,w
  7537  0A90  00D0               	movwf	?_log
  7538  0A91  0830               	movf	?___ftadd+1,w
  7539  0A92  00D1               	movwf	?_log+1
  7540  0A93  0831               	movf	?___ftadd+2,w
  7541  0A94  00D2               	movwf	?_log+2
  7542  0A95  0008               	return
  7543  0A96                     __end_of_log:	
  7544  0A96                     __ptext1233:	
  7545 ;; =============== function i1_Digitron_Send_8bit ends ============
  7546                           
  7547                           
  7548 ;; *************** function _frexp *****************
  7549 ;; Defined at:
  7550 ;;		line 255 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\frexp.c"
  7551 ;; Parameters:    Size  Location     Type
  7552 ;;  value           3    0[COMMON] unsigned char 
  7553 ;;  eptr            1    3[COMMON] PTR int 
  7554 ;;		 -> log@exp(2), floor@expon(2), 
  7555 ;; Auto vars:     Size  Location     Type
  7556 ;;		None
  7557 ;; Return value:  Size  Location     Type
  7558 ;;                  3    0[COMMON] PTR int 
  7559 ;; Registers used:
  7560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  7561 ;; Tracked objects:
  7562 ;;		On entry : 60/0
  7563 ;;		On exit  : 160/0
  7564 ;;		Unchanged: FFE9F/0
  7565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7566 ;;      Params:         4       0       0       0       0
  7567 ;;      Locals:         0       0       0       0       0
  7568 ;;      Temps:          2       0       0       0       0
  7569 ;;      Totals:         6       0       0       0       0
  7570 ;;Total ram usage:        6 bytes
  7571 ;; Hardware stack levels used:    1
  7572 ;; This function calls:
  7573 ;;		Nothing
  7574 ;; This function is called by:
  7575 ;;		_floor
  7576 ;;		_log
  7577 ;; This function uses a non-reentrant model
  7578 ;;
  7579  0A96                     _frexp:	
  7580                           
  7581 ;; hardware stack exceeded
  7582                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  7583  0A96  0872               	movf	frexp@value+2,w
  7584  0A97  0471               	iorwf	frexp@value+1,w
  7585  0A98  0470               	iorwf	frexp@value,w
  7586  0A99  1D03               	skipz
  7587  0A9A  2AA5               	goto	i1l10241
  7588  0A9B  0873               	movf	frexp@eptr,w
  7589  0A9C  0084               	movwf	4
  7590  0A9D  1383               	bcf	3,7	;select IRP bank0
  7591  0A9E  0180               	clrf	0
  7592  0A9F  0A84               	incf	4,f
  7593  0AA0  0180               	clrf	0
  7594  0AA1  01F0               	clrf	?_frexp
  7595  0AA2  01F1               	clrf	?_frexp+1
  7596  0AA3  01F2               	clrf	?_frexp+2
  7597  0AA4  0008               	return
  7598  0AA5                     i1l10241:	
  7599  0AA5  0872               	movf	frexp@value+2,w
  7600  0AA6  397F               	andlw	127
  7601  0AA7  00F4               	movwf	??_frexp
  7602  0AA8  01F5               	clrf	??_frexp+1
  7603  0AA9  1003               	clrc
  7604  0AAA  0DF4               	rlf	??_frexp,f
  7605  0AAB  0DF5               	rlf	??_frexp+1,f
  7606  0AAC  0873               	movf	frexp@eptr,w
  7607  0AAD  0084               	movwf	4
  7608  0AAE  0874               	movf	??_frexp,w
  7609  0AAF  1383               	bcf	3,7	;select IRP bank0
  7610  0AB0  0080               	movwf	0
  7611  0AB1  0A84               	incf	4,f
  7612  0AB2  0875               	movf	??_frexp+1,w
  7613  0AB3  0080               	movwf	0
  7614  0AB4  0D71               	rlf	frexp@value+1,w
  7615  0AB5  0D71               	rlf	frexp@value+1,w
  7616  0AB6  3901               	andlw	1
  7617  0AB7  00F4               	movwf	??_frexp
  7618  0AB8  01F5               	clrf	??_frexp+1
  7619  0AB9  0873               	movf	frexp@eptr,w
  7620  0ABA  0084               	movwf	4
  7621  0ABB  0874               	movf	??_frexp,w
  7622  0ABC  0480               	iorwf	0,f
  7623  0ABD  0A84               	incf	4,f
  7624  0ABE  0875               	movf	??_frexp+1,w
  7625  0ABF  0480               	iorwf	0,f
  7626  0AC0  0873               	movf	frexp@eptr,w
  7627  0AC1  0084               	movwf	4
  7628  0AC2  3082               	movlw	130
  7629  0AC3  0780               	addwf	0,f
  7630  0AC4  0F84               	incfsz	4,f
  7631  0AC5  0800               	movf	0,w
  7632  0AC6  1803               	skipnc
  7633  0AC7  0A00               	incf	0,w
  7634  0AC8  00FF               	movwf	127
  7635  0AC9  3EFF               	addlw	255
  7636  0ACA  0080               	movwf	0
  7637  0ACB  0384               	decf	4,f
  7638  0ACC  0872               	movf	frexp@value+2,w
  7639  0ACD  3980               	andlw	-128
  7640  0ACE  383F               	iorlw	63
  7641  0ACF  00F2               	movwf	frexp@value+2
  7642  0AD0  13F1               	bcf	frexp@value+1,7
  7643  0AD1  0008               	return
  7644  0AD2                     __end_of_frexp:	
  7645  0AD2                     __ptext1213:	
  7646 ;; =============== function _pow ends ============
  7647                           
  7648                           
  7649 ;; *************** function _exp *****************
  7650 ;; Defined at:
  7651 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\exp.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;  x               3   53[BANK0 ] unsigned char 
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;  exp             2   59[BANK0 ] int 
  7656 ;;  sign            1   61[BANK0 ] unsigned char 
  7657 ;; Return value:  Size  Location     Type
  7658 ;;                  3   53[BANK0 ] unsigned char 
  7659 ;; Registers used:
  7660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7661 ;; Tracked objects:
  7662 ;;		On entry : 60/0
  7663 ;;		On exit  : 60/0
  7664 ;;		Unchanged: FFE00/0
  7665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7666 ;;      Params:         0       3       0       0       0
  7667 ;;      Locals:         0       6       0       0       0
  7668 ;;      Temps:          0       0       0       0       0
  7669 ;;      Totals:         0       9       0       0       0
  7670 ;;Total ram usage:        9 bytes
  7671 ;; Hardware stack levels used:    1
  7672 ;; Hardware stack levels required when called:    3
  7673 ;; This function calls:
  7674 ;;		___ftge
  7675 ;;		___ftneg
  7676 ;;		___ftmul
  7677 ;;		_floor
  7678 ;;		___fttol
  7679 ;;		___awtoft
  7680 ;;		___ftsub
  7681 ;;		_eval_poly
  7682 ;;		_ldexp
  7683 ;;		___ftdiv
  7684 ;; This function is called by:
  7685 ;;		_pow
  7686 ;; This function uses a non-reentrant model
  7687 ;;
  7688  0AD2                     _exp:	
  7689                           
  7690 ;; hardware stack exceeded
  7691                           ; Regs used in _exp: [allreg]
  7692  0AD2  0857               	movf	exp@x+2,w
  7693  0AD3  0456               	iorwf	exp@x+1,w
  7694  0AD4  0455               	iorwf	exp@x,w
  7695  0AD5  1D03               	skipz
  7696  0AD6  2ADD               	goto	i1l9713
  7697  0AD7  01D5               	clrf	?_exp
  7698  0AD8  3080               	movlw	128
  7699  0AD9  00D6               	movwf	?_exp+1
  7700  0ADA  303F               	movlw	63
  7701  0ADB  00D7               	movwf	?_exp+2
  7702  0ADC  0008               	return
  7703  0ADD                     i1l9713:	
  7704  0ADD  3072               	movlw	114
  7705  0ADE  00F0               	movwf	?___ftge
  7706  0ADF  3031               	movlw	49
  7707  0AE0  00F1               	movwf	?___ftge+1
  7708  0AE1  3044               	movlw	68
  7709  0AE2  00F2               	movwf	?___ftge+2
  7710  0AE3  0855               	movf	exp@x,w
  7711  0AE4  00F3               	movwf	?___ftge+3
  7712  0AE5  0856               	movf	exp@x+1,w
  7713  0AE6  00F4               	movwf	?___ftge+4
  7714  0AE7  0857               	movf	exp@x+2,w
  7715  0AE8  00F5               	movwf	?___ftge+5
  7716  0AE9  265E  120A  158A   	fcall	___ftge
  7717  0AEC  1803               	btfsc	3,0
  7718  0AED  2AF4               	goto	i1l9723
  7719  0AEE  30FF               	movlw	255
  7720  0AEF  00D5               	movwf	?_exp
  7721  0AF0  307F               	movlw	127
  7722  0AF1  00D6               	movwf	?_exp+1
  7723  0AF2  00D7               	movwf	?_exp+2
  7724  0AF3  0008               	return
  7725  0AF4                     i1l9723:	
  7726  0AF4  0855               	movf	exp@x,w
  7727  0AF5  00F0               	movwf	?___ftge
  7728  0AF6  0856               	movf	exp@x+1,w
  7729  0AF7  00F1               	movwf	?___ftge+1
  7730  0AF8  0857               	movf	exp@x+2,w
  7731  0AF9  00F2               	movwf	?___ftge+2
  7732  0AFA  3049               	movlw	73
  7733  0AFB  00F3               	movwf	?___ftge+3
  7734  0AFC  303A               	movlw	58
  7735  0AFD  00F4               	movwf	?___ftge+4
  7736  0AFE  30C4               	movlw	196
  7737  0AFF  00F5               	movwf	?___ftge+5
  7738  0B00  265E  120A  158A   	fcall	___ftge
  7739  0B03  1803               	btfsc	3,0
  7740  0B04  2B09               	goto	i1l9729
  7741  0B05  01D5               	clrf	?_exp
  7742  0B06  01D6               	clrf	?_exp+1
  7743  0B07  01D7               	clrf	?_exp+2
  7744  0B08  0008               	return
  7745  0B09                     i1l9729:	
  7746  0B09  0855               	movf	exp@x,w
  7747  0B0A  00F0               	movwf	?___ftge
  7748  0B0B  0856               	movf	exp@x+1,w
  7749  0B0C  00F1               	movwf	?___ftge+1
  7750  0B0D  0857               	movf	exp@x+2,w
  7751  0B0E  00F2               	movwf	?___ftge+2
  7752  0B0F  01F3               	clrf	?___ftge+3
  7753  0B10  01F4               	clrf	?___ftge+4
  7754  0B11  01F5               	clrf	?___ftge+5
  7755  0B12  265E  120A  158A   	fcall	___ftge
  7756  0B15  3000               	movlw	0
  7757  0B16  1C03               	btfss	3,0
  7758  0B17  3001               	movlw	1
  7759  0B18  00DD               	movwf	exp@sign
  7760  0B19  085D               	movf	exp@sign,w
  7761  0B1A  1903               	btfsc	3,2
  7762  0B1B  2B2B               	goto	i1l9735
  7763  0B1C  0855               	movf	exp@x,w
  7764  0B1D  00F0               	movwf	?___ftneg
  7765  0B1E  0856               	movf	exp@x+1,w
  7766  0B1F  00F1               	movwf	?___ftneg+1
  7767  0B20  0857               	movf	exp@x+2,w
  7768  0B21  00F2               	movwf	?___ftneg+2
  7769  0B22  26A0  120A  158A   	fcall	___ftneg
  7770  0B25  0870               	movf	?___ftneg,w
  7771  0B26  00D5               	movwf	exp@x
  7772  0B27  0871               	movf	?___ftneg+1,w
  7773  0B28  00D6               	movwf	exp@x+1
  7774  0B29  0872               	movf	?___ftneg+2,w
  7775  0B2A  00D7               	movwf	exp@x+2
  7776  0B2B                     i1l9735:	
  7777  0B2B  30AA               	movlw	170
  7778  0B2C  00A0               	movwf	?___ftmul
  7779  0B2D  30B8               	movlw	184
  7780  0B2E  00A1               	movwf	?___ftmul+1
  7781  0B2F  303F               	movlw	63
  7782  0B30  00A2               	movwf	?___ftmul+2
  7783  0B31  0855               	movf	exp@x,w
  7784  0B32  00A3               	movwf	?___ftmul+3
  7785  0B33  0856               	movf	exp@x+1,w
  7786  0B34  00A4               	movwf	?___ftmul+4
  7787  0B35  0857               	movf	exp@x+2,w
  7788  0B36  00A5               	movwf	?___ftmul+5
  7789  0B37  25A5  120A  158A   	fcall	___ftmul
  7790  0B3A  0820               	movf	?___ftmul,w
  7791  0B3B  00D5               	movwf	exp@x
  7792  0B3C  0821               	movf	?___ftmul+1,w
  7793  0B3D  00D6               	movwf	exp@x+1
  7794  0B3E  0822               	movf	?___ftmul+2,w
  7795  0B3F  00D7               	movwf	exp@x+2
  7796  0B40  0855               	movf	exp@x,w
  7797  0B41  00BB               	movwf	?_floor
  7798  0B42  0856               	movf	exp@x+1,w
  7799  0B43  00BC               	movwf	?_floor+1
  7800  0B44  0857               	movf	exp@x+2,w
  7801  0B45  00BD               	movwf	?_floor+2
  7802  0B46  2737  120A  158A   	fcall	_floor
  7803  0B49  083B               	movf	?_floor,w
  7804  0B4A  00F8               	movwf	?___fttol
  7805  0B4B  083C               	movf	?_floor+1,w
  7806  0B4C  00F9               	movwf	?___fttol+1
  7807  0B4D  083D               	movf	?_floor+2,w
  7808  0B4E  00FA               	movwf	?___fttol+2
  7809  0B4F  218D  120A  158A   	fcall	___fttol
  7810  0B52  0879               	movf	?___fttol+1,w
  7811  0B53  00DC               	movwf	exp@exp+1
  7812  0B54  0878               	movf	?___fttol,w
  7813  0B55  00DB               	movwf	exp@exp
  7814  0B56  085C               	movf	exp@exp+1,w
  7815  0B57  00F9               	movwf	?___awtoft+1
  7816  0B58  085B               	movf	exp@exp,w
  7817  0B59  00F8               	movwf	?___awtoft
  7818  0B5A  26A8  120A  158A   	fcall	___awtoft
  7819  0B5D  0878               	movf	?___awtoft,w
  7820  0B5E  00BB               	movwf	?___ftsub
  7821  0B5F  0879               	movf	?___awtoft+1,w
  7822  0B60  00BC               	movwf	?___ftsub+1
  7823  0B61  087A               	movf	?___awtoft+2,w
  7824  0B62  00BD               	movwf	?___ftsub+2
  7825  0B63  0855               	movf	exp@x,w
  7826  0B64  00BE               	movwf	?___ftsub+3
  7827  0B65  0856               	movf	exp@x+1,w
  7828  0B66  00BF               	movwf	?___ftsub+4
  7829  0B67  0857               	movf	exp@x+2,w
  7830  0B68  00C0               	movwf	?___ftsub+5
  7831  0B69  268A  120A  158A   	fcall	___ftsub
  7832  0B6C  083B               	movf	?___ftsub,w
  7833  0B6D  00D5               	movwf	exp@x
  7834  0B6E  083C               	movf	?___ftsub+1,w
  7835  0B6F  00D6               	movwf	exp@x+1
  7836  0B70  083D               	movf	?___ftsub+2,w
  7837  0B71  00D7               	movwf	exp@x+2
  7838  0B72  0855               	movf	exp@x,w
  7839  0B73  00C5               	movwf	?_eval_poly
  7840  0B74  0856               	movf	exp@x+1,w
  7841  0B75  00C6               	movwf	?_eval_poly+1
  7842  0B76  0857               	movf	exp@x+2,w
  7843  0B77  00C7               	movwf	?_eval_poly+2
  7844  0B78  300B               	movlw	(exp@coeff-__stringbase)& (0+255)
  7845  0B79  00C8               	movwf	?_eval_poly+3
  7846  0B7A  3009               	movlw	9
  7847  0B7B  00C9               	movwf	?_eval_poly+4
  7848  0B7C  01CA               	clrf	?_eval_poly+5
  7849  0B7D  2487  120A  158A   	fcall	_eval_poly
  7850  0B80  0845               	movf	?_eval_poly,w
  7851  0B81  00BB               	movwf	?_ldexp
  7852  0B82  0846               	movf	?_eval_poly+1,w
  7853  0B83  00BC               	movwf	?_ldexp+1
  7854  0B84  0847               	movf	?_eval_poly+2,w
  7855  0B85  00BD               	movwf	?_ldexp+2
  7856  0B86  085C               	movf	exp@exp+1,w
  7857  0B87  00BF               	movwf	?_ldexp+4
  7858  0B88  085B               	movf	exp@exp,w
  7859  0B89  00BE               	movwf	?_ldexp+3
  7860  0B8A  26C3  120A  158A   	fcall	_ldexp
  7861  0B8D  083B               	movf	?_ldexp,w
  7862  0B8E  00D5               	movwf	exp@x
  7863  0B8F  083C               	movf	?_ldexp+1,w
  7864  0B90  00D6               	movwf	exp@x+1
  7865  0B91  083D               	movf	?_ldexp+2,w
  7866  0B92  00D7               	movwf	exp@x+2
  7867  0B93  085D               	movf	exp@sign,w
  7868  0B94  1903               	btfsc	3,2
  7869  0B95  0008               	return
  7870  0B96  01D8               	clrf	_exp$3416
  7871  0B97  3080               	movlw	128
  7872  0B98  00D9               	movwf	_exp$3416+1
  7873  0B99  307F               	movlw	127
  7874  0B9A  00DA               	movwf	_exp$3416+2
  7875  0B9B  30FF               	movlw	255
  7876  0B9C  00D8               	movwf	_exp$3416
  7877  0B9D  307F               	movlw	127
  7878  0B9E  00D9               	movwf	_exp$3416+1
  7879  0B9F  00DA               	movwf	_exp$3416+2
  7880  0BA0  0657               	xorwf	exp@x+2,w
  7881  0BA1  1D03               	skipz
  7882  0BA2  2BA9               	goto	u292_25
  7883  0BA3  0856               	movf	exp@x+1,w
  7884  0BA4  0659               	xorwf	_exp$3416+1,w
  7885  0BA5  1D03               	skipz
  7886  0BA6  2BA9               	goto	u292_25
  7887  0BA7  0855               	movf	exp@x,w
  7888  0BA8  0658               	xorwf	_exp$3416,w
  7889  0BA9                     u292_25:	
  7890  0BA9  1D03               	skipz
  7891  0BAA  2BAF               	goto	i1l9751
  7892  0BAB  01D5               	clrf	?_exp
  7893  0BAC  01D6               	clrf	?_exp+1
  7894  0BAD  01D7               	clrf	?_exp+2
  7895  0BAE  0008               	return
  7896  0BAF                     i1l9751:	
  7897  0BAF  0855               	movf	exp@x,w
  7898  0BB0  00F8               	movwf	?___ftdiv
  7899  0BB1  0856               	movf	exp@x+1,w
  7900  0BB2  00F9               	movwf	?___ftdiv+1
  7901  0BB3  0857               	movf	exp@x+2,w
  7902  0BB4  00FA               	movwf	?___ftdiv+2
  7903  0BB5  01FB               	clrf	?___ftdiv+3
  7904  0BB6  3080               	movlw	128
  7905  0BB7  00FC               	movwf	?___ftdiv+4
  7906  0BB8  303F               	movlw	63
  7907  0BB9  00FD               	movwf	?___ftdiv+5
  7908  0BBA  160A  118A  2796   	fcall	___ftdiv
  7909  0BBD  0878               	movf	?___ftdiv,w
  7910  0BBE  00D5               	movwf	?_exp
  7911  0BBF  0879               	movf	?___ftdiv+1,w
  7912  0BC0  00D6               	movwf	?_exp+1
  7913  0BC1  087A               	movf	?___ftdiv+2,w
  7914  0BC2  00D7               	movwf	?_exp+2
  7915  0BC3  0008               	return
  7916  0BC4                     __end_of_exp:	
  7917  0BC4                     __ptext1215:	
  7918 ;; =============== function _log ends ============
  7919                           
  7920                           
  7921 ;; *************** function _sqrt *****************
  7922 ;; Defined at:
  7923 ;;		line 14 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\sqrt.c"
  7924 ;; Parameters:    Size  Location     Type
  7925 ;;  y               3   62[BANK0 ] int 
  7926 ;; Auto vars:     Size  Location     Type
  7927 ;;  x               3   75[BANK0 ] int 
  7928 ;;  q               3   72[BANK0 ] int 
  7929 ;;  z               3   68[BANK0 ] int 
  7930 ;;  og              3    0        int 
  7931 ;;  i               1   71[BANK0 ] unsigned char 
  7932 ;; Return value:  Size  Location     Type
  7933 ;;                  3   62[BANK0 ] unsigned char 
  7934 ;; Registers used:
  7935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7936 ;; Tracked objects:
  7937 ;;		On entry : 60/0
  7938 ;;		On exit  : 60/0
  7939 ;;		Unchanged: FFF9F/0
  7940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7941 ;;      Params:         0       3       0       0       0
  7942 ;;      Locals:         0      10       0       0       0
  7943 ;;      Temps:          0       3       0       0       0
  7944 ;;      Totals:         0      16       0       0       0
  7945 ;;Total ram usage:       16 bytes
  7946 ;; Hardware stack levels used:    1
  7947 ;; Hardware stack levels required when called:    3
  7948 ;; This function calls:
  7949 ;;		___ftge
  7950 ;;		___ftmul
  7951 ;;		___ftsub
  7952 ;; This function is called by:
  7953 ;;		_Calc_DistanceLevel
  7954 ;; This function uses a non-reentrant model
  7955 ;;
  7956  0BC4                     _sqrt:	
  7957                           
  7958 ;; hardware stack exceeded
  7959                           ; Regs used in _sqrt: [allreg]
  7960  0BC4  01F0               	clrf	?___ftge
  7961  0BC5  01F1               	clrf	?___ftge+1
  7962  0BC6  01F2               	clrf	?___ftge+2
  7963  0BC7  085E               	movf	sqrt@y,w
  7964  0BC8  00F3               	movwf	?___ftge+3
  7965  0BC9  085F               	movf	sqrt@y+1,w
  7966  0BCA  00F4               	movwf	?___ftge+4
  7967  0BCB  0860               	movf	sqrt@y+2,w
  7968  0BCC  00F5               	movwf	?___ftge+5
  7969  0BCD  265E  120A  158A   	fcall	___ftge
  7970  0BD0  085E               	movf	sqrt@y,w
  7971  0BD1  1C03               	btfss	3,0
  7972  0BD2  2BE0               	goto	L2
  7973  0BD3  00F0               	movwf	?___ftge
  7974  0BD4  085F               	movf	sqrt@y+1,w
  7975  0BD5  00F1               	movwf	?___ftge+1
  7976  0BD6  0860               	movf	sqrt@y+2,w
  7977  0BD7  00F2               	movwf	?___ftge+2
  7978  0BD8  01F3               	clrf	?___ftge+3
  7979  0BD9  01F4               	clrf	?___ftge+4
  7980  0BDA  01F5               	clrf	?___ftge+5
  7981  0BDB  265E               	fcall	___ftge
  7982  0BDC  01DE               	clrf	?_sqrt
  7983  0BDD  01DF               	clrf	?_sqrt+1
  7984  0BDE  01E0               	clrf	?_sqrt+2
  7985  0BDF  0008               	return
  7986  0BE0                     L2:	
  7987  0BE0  00E4               	movwf	sqrt@z
  7988  0BE1  085F               	movf	sqrt@y+1,w
  7989  0BE2  00E5               	movwf	sqrt@z+1
  7990  0BE3  0860               	movf	sqrt@y+2,w
  7991  0BE4  00E6               	movwf	sqrt@z+2
  7992  0BE5  30C8               	movlw	200
  7993  0BE6  00EB               	movwf	sqrt@x
  7994  0BE7  306E               	movlw	110
  7995  0BE8  00EC               	movwf	sqrt@x+1
  7996  0BE9  30BE               	movlw	190
  7997  0BEA  00ED               	movwf	sqrt@x+2
  7998  0BEB  085E               	movf	sqrt@y,w
  7999  0BEC  02EB               	subwf	sqrt@x,f
  8000  0BED  085F               	movf	sqrt@y+1,w
  8001  0BEE  1C03               	skipc
  8002  0BEF  0F5F               	incfsz	sqrt@y+1,w
  8003  0BF0  02EC               	subwf	sqrt@x+1,f
  8004  0BF1  0860               	movf	sqrt@y+2,w
  8005  0BF2  1C03               	skipc
  8006  0BF3  0A60               	incf	sqrt@y+2,w
  8007  0BF4  02ED               	subwf	sqrt@x+2,f
  8008  0BF5  1003               	clrc
  8009  0BF6  0CED               	rrf	sqrt@x+2,f
  8010  0BF7  0CEC               	rrf	sqrt@x+1,f
  8011  0BF8  0CEB               	rrf	sqrt@x,f
  8012  0BF9  01E1               	clrf	??_sqrt
  8013  0BFA  3080               	movlw	128
  8014  0BFB  00E2               	movwf	??_sqrt+1
  8015  0BFC  01E3               	clrf	??_sqrt+2
  8016  0BFD  0861               	movf	??_sqrt,w
  8017  0BFE  02E4               	subwf	sqrt@z,f
  8018  0BFF  0862               	movf	??_sqrt+1,w
  8019  0C00  1C03               	skipc
  8020  0C01  0F62               	incfsz	??_sqrt+1,w
  8021  0C02  02E5               	subwf	sqrt@z+1,f
  8022  0C03  0863               	movf	??_sqrt+2,w
  8023  0C04  1C03               	skipc
  8024  0C05  0A63               	incf	??_sqrt+2,w
  8025  0C06  02E6               	subwf	sqrt@z+2,f
  8026  0C07  3004               	movlw	4
  8027  0C08  00E7               	movwf	sqrt@i
  8028  0C09                     i1l9657:	
  8029  0C09  0864               	movf	sqrt@z,w
  8030  0C0A  00A0               	movwf	?___ftmul
  8031  0C0B  0865               	movf	sqrt@z+1,w
  8032  0C0C  00A1               	movwf	?___ftmul+1
  8033  0C0D  0866               	movf	sqrt@z+2,w
  8034  0C0E  00A2               	movwf	?___ftmul+2
  8035  0C0F  086B               	movf	sqrt@x,w
  8036  0C10  00A3               	movwf	?___ftmul+3
  8037  0C11  086C               	movf	sqrt@x+1,w
  8038  0C12  00A4               	movwf	?___ftmul+4
  8039  0C13  086D               	movf	sqrt@x+2,w
  8040  0C14  00A5               	movwf	?___ftmul+5
  8041  0C15  25A5  120A  158A   	fcall	___ftmul
  8042  0C18  0820               	movf	?___ftmul,w
  8043  0C19  00E8               	movwf	sqrt@q
  8044  0C1A  0821               	movf	?___ftmul+1,w
  8045  0C1B  00E9               	movwf	sqrt@q+1
  8046  0C1C  0822               	movf	?___ftmul+2,w
  8047  0C1D  00EA               	movwf	sqrt@q+2
  8048  0C1E  086B               	movf	sqrt@x,w
  8049  0C1F  00A0               	movwf	?___ftmul
  8050  0C20  086C               	movf	sqrt@x+1,w
  8051  0C21  00A1               	movwf	?___ftmul+1
  8052  0C22  086D               	movf	sqrt@x+2,w
  8053  0C23  00A2               	movwf	?___ftmul+2
  8054  0C24  0868               	movf	sqrt@q,w
  8055  0C25  00A3               	movwf	?___ftmul+3
  8056  0C26  0869               	movf	sqrt@q+1,w
  8057  0C27  00A4               	movwf	?___ftmul+4
  8058  0C28  086A               	movf	sqrt@q+2,w
  8059  0C29  00A5               	movwf	?___ftmul+5
  8060  0C2A  25A5  120A  158A   	fcall	___ftmul
  8061  0C2D  0820               	movf	?___ftmul,w
  8062  0C2E  00E8               	movwf	sqrt@q
  8063  0C2F  0821               	movf	?___ftmul+1,w
  8064  0C30  00E9               	movwf	sqrt@q+1
  8065  0C31  0822               	movf	?___ftmul+2,w
  8066  0C32  00EA               	movwf	sqrt@q+2
  8067  0C33  086B               	movf	sqrt@x,w
  8068  0C34  00A0               	movwf	?___ftmul
  8069  0C35  086C               	movf	sqrt@x+1,w
  8070  0C36  00A1               	movwf	?___ftmul+1
  8071  0C37  086D               	movf	sqrt@x+2,w
  8072  0C38  00A2               	movwf	?___ftmul+2
  8073  0C39  0868               	movf	sqrt@q,w
  8074  0C3A  00A3               	movwf	?___ftmul+3
  8075  0C3B  0869               	movf	sqrt@q+1,w
  8076  0C3C  00A4               	movwf	?___ftmul+4
  8077  0C3D  086A               	movf	sqrt@q+2,w
  8078  0C3E  00A5               	movwf	?___ftmul+5
  8079  0C3F  25A5  120A  158A   	fcall	___ftmul
  8080  0C42  0820               	movf	?___ftmul,w
  8081  0C43  00E8               	movwf	sqrt@q
  8082  0C44  0821               	movf	?___ftmul+1,w
  8083  0C45  00E9               	movwf	sqrt@q+1
  8084  0C46  0822               	movf	?___ftmul+2,w
  8085  0C47  00EA               	movwf	sqrt@q+2
  8086  0C48  01A0               	clrf	?___ftmul
  8087  0C49  30C0               	movlw	192
  8088  0C4A  00A1               	movwf	?___ftmul+1
  8089  0C4B  303F               	movlw	63
  8090  0C4C  00A2               	movwf	?___ftmul+2
  8091  0C4D  086B               	movf	sqrt@x,w
  8092  0C4E  00A3               	movwf	?___ftmul+3
  8093  0C4F  086C               	movf	sqrt@x+1,w
  8094  0C50  00A4               	movwf	?___ftmul+4
  8095  0C51  086D               	movf	sqrt@x+2,w
  8096  0C52  00A5               	movwf	?___ftmul+5
  8097  0C53  25A5  120A  158A   	fcall	___ftmul
  8098  0C56  0820               	movf	?___ftmul,w
  8099  0C57  00EB               	movwf	sqrt@x
  8100  0C58  0821               	movf	?___ftmul+1,w
  8101  0C59  00EC               	movwf	sqrt@x+1
  8102  0C5A  0822               	movf	?___ftmul+2,w
  8103  0C5B  00ED               	movwf	sqrt@x+2
  8104  0C5C  0868               	movf	sqrt@q,w
  8105  0C5D  00BB               	movwf	?___ftsub
  8106  0C5E  0869               	movf	sqrt@q+1,w
  8107  0C5F  00BC               	movwf	?___ftsub+1
  8108  0C60  086A               	movf	sqrt@q+2,w
  8109  0C61  00BD               	movwf	?___ftsub+2
  8110  0C62  086B               	movf	sqrt@x,w
  8111  0C63  00BE               	movwf	?___ftsub+3
  8112  0C64  086C               	movf	sqrt@x+1,w
  8113  0C65  00BF               	movwf	?___ftsub+4
  8114  0C66  086D               	movf	sqrt@x+2,w
  8115  0C67  00C0               	movwf	?___ftsub+5
  8116  0C68  268A  120A  158A   	fcall	___ftsub
  8117  0C6B  083B               	movf	?___ftsub,w
  8118  0C6C  00EB               	movwf	sqrt@x
  8119  0C6D  083C               	movf	?___ftsub+1,w
  8120  0C6E  00EC               	movwf	sqrt@x+1
  8121  0C6F  083D               	movf	?___ftsub+2,w
  8122  0C70  00ED               	movwf	sqrt@x+2
  8123  0C71  0BE7               	decfsz	sqrt@i,f
  8124  0C72  2C09               	goto	i1l9657
  8125  0C73  085E               	movf	sqrt@y,w
  8126  0C74  00A0               	movwf	?___ftmul
  8127  0C75  085F               	movf	sqrt@y+1,w
  8128  0C76  00A1               	movwf	?___ftmul+1
  8129  0C77  0860               	movf	sqrt@y+2,w
  8130  0C78  00A2               	movwf	?___ftmul+2
  8131  0C79  086B               	movf	sqrt@x,w
  8132  0C7A  00A3               	movwf	?___ftmul+3
  8133  0C7B  086C               	movf	sqrt@x+1,w
  8134  0C7C  00A4               	movwf	?___ftmul+4
  8135  0C7D  086D               	movf	sqrt@x+2,w
  8136  0C7E  00A5               	movwf	?___ftmul+5
  8137  0C7F  25A5               	fcall	___ftmul
  8138  0C80  0820               	movf	?___ftmul,w
  8139  0C81  00DE               	movwf	?_sqrt
  8140  0C82  0821               	movf	?___ftmul+1,w
  8141  0C83  00DF               	movwf	?_sqrt+1
  8142  0C84  0822               	movf	?___ftmul+2,w
  8143  0C85  00E0               	movwf	?_sqrt+2
  8144  0C86  0008               	return
  8145  0C87                     __end_of_sqrt:	
  8146  0C87                     __ptext1218:	
  8147 ;; =============== function i1_Digitron_Display ends ============
  8148                           
  8149                           
  8150 ;; *************** function _eval_poly *****************
  8151 ;; Defined at:
  8152 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\evalpoly.c"
  8153 ;; Parameters:    Size  Location     Type
  8154 ;;  x               3   37[BANK0 ] unsigned char 
  8155 ;;  d               1   40[BANK0 ] PTR const 
  8156 ;;		 -> log@coeff(27), exp@coeff(30), 
  8157 ;;  n               2   41[BANK0 ] int 
  8158 ;; Auto vars:     Size  Location     Type
  8159 ;;  res             3   45[BANK0 ] int 
  8160 ;; Return value:  Size  Location     Type
  8161 ;;                  3   37[BANK0 ] int 
  8162 ;; Registers used:
  8163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8164 ;; Tracked objects:
  8165 ;;		On entry : 160/0
  8166 ;;		On exit  : 160/0
  8167 ;;		Unchanged: FFE9F/0
  8168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8169 ;;      Params:         0       6       0       0       0
  8170 ;;      Locals:         0       3       0       0       0
  8171 ;;      Temps:          0       2       0       0       0
  8172 ;;      Totals:         0      11       0       0       0
  8173 ;;Total ram usage:       11 bytes
  8174 ;; Hardware stack levels used:    1
  8175 ;; Hardware stack levels required when called:    2
  8176 ;; This function calls:
  8177 ;;		___ftmul
  8178 ;;		___ftadd
  8179 ;; This function is called by:
  8180 ;;		_exp
  8181 ;;		_log
  8182 ;; This function uses a non-reentrant model
  8183 ;;
  8184  0C87                     _eval_poly:	
  8185                           
  8186 ;; hardware stack exceeded
  8187                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8188  0C87  0849               	movf	eval_poly@n,w
  8189  0C88  0749               	addwf	eval_poly@n,w
  8190  0C89  0749               	addwf	eval_poly@n,w
  8191  0C8A  0748               	addwf	eval_poly@d,w
  8192  0C8B  0084               	movwf	4
  8193  0C8C  120A  118A  2021   	fcall	stringdir
      +       120A  158A         
  8194  0C91  00CD               	movwf	eval_poly@res
  8195  0C92  120A  118A  2021   	fcall	stringdir
      +       120A  158A         
  8196  0C97  00CE               	movwf	eval_poly@res+1
  8197  0C98  120A  118A  2021   	fcall	stringdir
      +       120A  158A         
  8198  0C9D                     L3:	
  8199  0C9D  00CF               	movwf	eval_poly@res+2
  8200  0C9E  084A               	movf	eval_poly@n+1,w
  8201  0C9F  0449               	iorwf	eval_poly@n,w
  8202  0CA0  1903               	btfsc	3,2
  8203  0CA1  2CDE               	goto	i1l10189
  8204  0CA2  30FF               	movlw	-1
  8205  0CA3  07C9               	addwf	eval_poly@n,f
  8206  0CA4  1C03               	skipc
  8207  0CA5  03CA               	decf	eval_poly@n+1,f
  8208  0CA6  084A               	movf	eval_poly@n+1,w
  8209  0CA7  00CC               	movwf	??_eval_poly+1
  8210  0CA8  0849               	movf	eval_poly@n,w
  8211  0CA9  00CB               	movwf	??_eval_poly
  8212  0CAA  074B               	addwf	??_eval_poly,w
  8213  0CAB  074B               	addwf	??_eval_poly,w
  8214  0CAC  0748               	addwf	eval_poly@d,w
  8215  0CAD  0084               	movwf	4
  8216  0CAE  120A  118A  2021   	fcall	stringdir
      +       120A  158A         
  8217  0CB3  00AF               	movwf	?___ftadd
  8218  0CB4  120A  118A  2021   	fcall	stringdir
      +       120A  158A         
  8219  0CB9  00B0               	movwf	?___ftadd+1
  8220  0CBA  120A  118A  2021   	fcall	stringdir
      +       120A  158A         
  8221  0CBF  00B1               	movwf	?___ftadd+2
  8222  0CC0  084D               	movf	eval_poly@res,w
  8223  0CC1  00A0               	movwf	?___ftmul
  8224  0CC2  084E               	movf	eval_poly@res+1,w
  8225  0CC3  00A1               	movwf	?___ftmul+1
  8226  0CC4  084F               	movf	eval_poly@res+2,w
  8227  0CC5  00A2               	movwf	?___ftmul+2
  8228  0CC6  0845               	movf	eval_poly@x,w
  8229  0CC7  00A3               	movwf	?___ftmul+3
  8230  0CC8  0846               	movf	eval_poly@x+1,w
  8231  0CC9  00A4               	movwf	?___ftmul+4
  8232  0CCA  0847               	movf	eval_poly@x+2,w
  8233  0CCB  00A5               	movwf	?___ftmul+5
  8234  0CCC  25A5  120A  158A   	fcall	___ftmul
  8235  0CCF  0820               	movf	?___ftmul,w
  8236  0CD0  00B2               	movwf	?___ftadd+3
  8237  0CD1  0821               	movf	?___ftmul+1,w
  8238  0CD2  00B3               	movwf	?___ftadd+4
  8239  0CD3  0822               	movf	?___ftmul+2,w
  8240  0CD4  00B4               	movwf	?___ftadd+5
  8241  0CD5  24E5  120A  158A   	fcall	___ftadd
  8242  0CD8  082F               	movf	?___ftadd,w
  8243  0CD9  00CD               	movwf	eval_poly@res
  8244  0CDA  0830               	movf	?___ftadd+1,w
  8245  0CDB  00CE               	movwf	eval_poly@res+1
  8246  0CDC  0831               	movf	?___ftadd+2,w
  8247  0CDD  2C9D               	goto	L3
  8248  0CDE                     i1l10189:	
  8249  0CDE  084D               	movf	eval_poly@res,w
  8250  0CDF  00C5               	movwf	?_eval_poly
  8251  0CE0  084E               	movf	eval_poly@res+1,w
  8252  0CE1  00C6               	movwf	?_eval_poly+1
  8253  0CE2  084F               	movf	eval_poly@res+2,w
  8254  0CE3  00C7               	movwf	?_eval_poly+2
  8255  0CE4  0008               	return
  8256  0CE5                     __end_of_eval_poly:	
  8257  0CE5                     __ptext1228:	
  8258 ;; =============== function ___ftdiv ends ============
  8259                           
  8260                           
  8261 ;; *************** function ___ftadd *****************
  8262 ;; Defined at:
  8263 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\ftadd.c"
  8264 ;; Parameters:    Size  Location     Type
  8265 ;;  f1              3   15[BANK0 ] float 
  8266 ;;  f2              3   18[BANK0 ] float 
  8267 ;; Auto vars:     Size  Location     Type
  8268 ;;  exp1            1   26[BANK0 ] unsigned char 
  8269 ;;  exp2            1   25[BANK0 ] unsigned char 
  8270 ;;  sign            1   24[BANK0 ] unsigned char 
  8271 ;; Return value:  Size  Location     Type
  8272 ;;                  3   15[BANK0 ] float 
  8273 ;; Registers used:
  8274 ;;		wreg, status,2, status,0, pclath, cstack
  8275 ;; Tracked objects:
  8276 ;;		On entry : 60/0
  8277 ;;		On exit  : 60/0
  8278 ;;		Unchanged: FFF9F/0
  8279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8280 ;;      Params:         0       6       0       0       0
  8281 ;;      Locals:         0       3       0       0       0
  8282 ;;      Temps:          0       3       0       0       0
  8283 ;;      Totals:         0      12       0       0       0
  8284 ;;Total ram usage:       12 bytes
  8285 ;; Hardware stack levels used:    1
  8286 ;; Hardware stack levels required when called:    1
  8287 ;; This function calls:
  8288 ;;		___ftpack
  8289 ;; This function is called by:
  8290 ;;		_Calc_DistanceLevel
  8291 ;;		___ftsub
  8292 ;;		_floor
  8293 ;;		_log
  8294 ;;		_eval_poly
  8295 ;; This function uses a non-reentrant model
  8296 ;;
  8297  0CE5                     ___ftadd:	
  8298                           
  8299 ;; hardware stack exceeded
  8300                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8301  0CE5  082F               	movf	___ftadd@f1,w
  8302  0CE6  00B5               	movwf	??___ftadd
  8303  0CE7  0830               	movf	___ftadd@f1+1,w
  8304  0CE8  00B6               	movwf	??___ftadd+1
  8305  0CE9  0831               	movf	___ftadd@f1+2,w
  8306  0CEA  00B7               	movwf	??___ftadd+2
  8307  0CEB  1003               	clrc
  8308  0CEC  0D36               	rlf	??___ftadd+1,w
  8309  0CED  0D37               	rlf	??___ftadd+2,w
  8310  0CEE  00BA               	movwf	___ftadd@exp1
  8311  0CEF  0832               	movf	___ftadd@f2,w
  8312  0CF0  00B5               	movwf	??___ftadd
  8313  0CF1  0833               	movf	___ftadd@f2+1,w
  8314  0CF2  00B6               	movwf	??___ftadd+1
  8315  0CF3  0834               	movf	___ftadd@f2+2,w
  8316  0CF4  00B7               	movwf	??___ftadd+2
  8317  0CF5  1003               	clrc
  8318  0CF6  0D36               	rlf	??___ftadd+1,w
  8319  0CF7  0D37               	rlf	??___ftadd+2,w
  8320  0CF8  00B9               	movwf	___ftadd@exp2
  8321  0CF9  083A               	movf	___ftadd@exp1,w
  8322  0CFA  1903               	btfsc	3,2
  8323  0CFB  2D08               	goto	i1l9835
  8324  0CFC  0839               	movf	___ftadd@exp2,w
  8325  0CFD  023A               	subwf	___ftadd@exp1,w
  8326  0CFE  0839               	movf	___ftadd@exp2,w
  8327  0CFF  1803               	skipnc
  8328  0D00  2D10               	goto	L6
  8329  0D01  00B5               	movwf	??___ftadd
  8330  0D02  083A               	movf	___ftadd@exp1,w
  8331  0D03  02B5               	subwf	??___ftadd,f
  8332  0D04  3019               	movlw	25
  8333  0D05  0235               	subwf	??___ftadd,w
  8334  0D06  1C03               	skipc
  8335  0D07  2D0F               	goto	i1l9839
  8336  0D08                     i1l9835:	
  8337  0D08  0832               	movf	___ftadd@f2,w
  8338  0D09  00AF               	movwf	?___ftadd
  8339  0D0A  0833               	movf	___ftadd@f2+1,w
  8340  0D0B  00B0               	movwf	?___ftadd+1
  8341  0D0C  0834               	movf	___ftadd@f2+2,w
  8342  0D0D  00B1               	movwf	?___ftadd+2
  8343  0D0E  0008               	return
  8344  0D0F                     i1l9839:	
  8345  0D0F  0839               	movf	___ftadd@exp2,w
  8346  0D10                     L6:	
  8347  0D10  1903               	btfsc	3,2
  8348  0D11  0008               	return
  8349  0D12  083A               	movf	___ftadd@exp1,w
  8350  0D13  0239               	subwf	___ftadd@exp2,w
  8351  0D14  1803               	skipnc
  8352  0D15  2D1E               	goto	i1l9845
  8353  0D16  083A               	movf	___ftadd@exp1,w
  8354  0D17  00B5               	movwf	??___ftadd
  8355  0D18  0839               	movf	___ftadd@exp2,w
  8356  0D19  02B5               	subwf	??___ftadd,f
  8357  0D1A  3019               	movlw	25
  8358  0D1B  0235               	subwf	??___ftadd,w
  8359  0D1C  1803               	btfsc	3,0
  8360  0D1D  0008               	return
  8361  0D1E                     i1l9845:	
  8362  0D1E  3006               	movlw	6
  8363  0D1F  00B8               	movwf	___ftadd@sign
  8364  0D20  1BB1               	btfsc	___ftadd@f1+2,7
  8365  0D21  17B8               	bsf	___ftadd@sign,7
  8366  0D22  1BB4               	btfsc	___ftadd@f2+2,7
  8367  0D23  1738               	bsf	___ftadd@sign,6
  8368  0D24  17B0               	bsf	___ftadd@f1+1,7
  8369  0D25  01B1               	clrf	___ftadd@f1+2
  8370  0D26  17B3               	bsf	___ftadd@f2+1,7
  8371  0D27  01B4               	clrf	___ftadd@f2+2
  8372  0D28  0839               	movf	___ftadd@exp2,w
  8373  0D29  023A               	subwf	___ftadd@exp1,w
  8374  0D2A  1803               	skipnc
  8375  0D2B  2D45               	goto	i1l9867
  8376  0D2C                     i1l9857:	
  8377  0D2C  1003               	clrc
  8378  0D2D  0DB2               	rlf	___ftadd@f2,f
  8379  0D2E  0DB3               	rlf	___ftadd@f2+1,f
  8380  0D2F  0DB4               	rlf	___ftadd@f2+2,f
  8381  0D30  03B9               	decf	___ftadd@exp2,f
  8382  0D31  0839               	movf	___ftadd@exp2,w
  8383  0D32  063A               	xorwf	___ftadd@exp1,w
  8384  0D33  1903               	skipnz
  8385  0D34  2D40               	goto	i1l9865
  8386  0D35  03B8               	decf	___ftadd@sign,f
  8387  0D36  0838               	movf	___ftadd@sign,w
  8388  0D37  3907               	andlw	7
  8389  0D38  1903               	btfsc	3,2
  8390  0D39  2D40               	goto	i1l9865
  8391  0D3A  2D2C               	goto	i1l9857
  8392  0D3B                     i1l9863:	
  8393  0D3B  1003               	clrc
  8394  0D3C  0CB1               	rrf	___ftadd@f1+2,f
  8395  0D3D  0CB0               	rrf	___ftadd@f1+1,f
  8396  0D3E  0CAF               	rrf	___ftadd@f1,f
  8397  0D3F  0ABA               	incf	___ftadd@exp1,f
  8398  0D40                     i1l9865:	
  8399  0D40  083A               	movf	___ftadd@exp1,w
  8400  0D41  0639               	xorwf	___ftadd@exp2,w
  8401  0D42  1903               	btfsc	3,2
  8402  0D43  2D61               	goto	i1l6185
  8403  0D44  2D3B               	goto	i1l9863
  8404  0D45                     i1l9867:	
  8405  0D45  083A               	movf	___ftadd@exp1,w
  8406  0D46  0239               	subwf	___ftadd@exp2,w
  8407  0D47  1803               	skipnc
  8408  0D48  2D61               	goto	i1l6185
  8409  0D49                     i1l9869:	
  8410  0D49  1003               	clrc
  8411  0D4A  0DAF               	rlf	___ftadd@f1,f
  8412  0D4B  0DB0               	rlf	___ftadd@f1+1,f
  8413  0D4C  0DB1               	rlf	___ftadd@f1+2,f
  8414  0D4D  03BA               	decf	___ftadd@exp1,f
  8415  0D4E  0839               	movf	___ftadd@exp2,w
  8416  0D4F  063A               	xorwf	___ftadd@exp1,w
  8417  0D50  1903               	skipnz
  8418  0D51  2D5D               	goto	i1l9877
  8419  0D52  03B8               	decf	___ftadd@sign,f
  8420  0D53  0838               	movf	___ftadd@sign,w
  8421  0D54  3907               	andlw	7
  8422  0D55  1903               	btfsc	3,2
  8423  0D56  2D5D               	goto	i1l9877
  8424  0D57  2D49               	goto	i1l9869
  8425  0D58                     i1l9875:	
  8426  0D58  1003               	clrc
  8427  0D59  0CB4               	rrf	___ftadd@f2+2,f
  8428  0D5A  0CB3               	rrf	___ftadd@f2+1,f
  8429  0D5B  0CB2               	rrf	___ftadd@f2,f
  8430  0D5C  0AB9               	incf	___ftadd@exp2,f
  8431  0D5D                     i1l9877:	
  8432  0D5D  083A               	movf	___ftadd@exp1,w
  8433  0D5E  0639               	xorwf	___ftadd@exp2,w
  8434  0D5F  1D03               	skipz
  8435  0D60  2D58               	goto	i1l9875
  8436  0D61                     i1l6185:	
  8437  0D61  1FB8               	btfss	___ftadd@sign,7
  8438  0D62  2D6C               	goto	i1l9883
  8439  0D63  30FF               	movlw	255
  8440  0D64  06AF               	xorwf	___ftadd@f1,f
  8441  0D65  06B0               	xorwf	___ftadd@f1+1,f
  8442  0D66  06B1               	xorwf	___ftadd@f1+2,f
  8443  0D67  0AAF               	incf	___ftadd@f1,f
  8444  0D68  1903               	skipnz
  8445  0D69  0AB0               	incf	___ftadd@f1+1,f
  8446  0D6A  1903               	skipnz
  8447  0D6B  0AB1               	incf	___ftadd@f1+2,f
  8448  0D6C                     i1l9883:	
  8449  0D6C  1F38               	btfss	___ftadd@sign,6
  8450  0D6D  2D77               	goto	i1l9889
  8451  0D6E  30FF               	movlw	255
  8452  0D6F  06B2               	xorwf	___ftadd@f2,f
  8453  0D70  06B3               	xorwf	___ftadd@f2+1,f
  8454  0D71  06B4               	xorwf	___ftadd@f2+2,f
  8455  0D72  0AB2               	incf	___ftadd@f2,f
  8456  0D73  1903               	skipnz
  8457  0D74  0AB3               	incf	___ftadd@f2+1,f
  8458  0D75  1903               	skipnz
  8459  0D76  0AB4               	incf	___ftadd@f2+2,f
  8460  0D77                     i1l9889:	
  8461  0D77  01B8               	clrf	___ftadd@sign
  8462  0D78  082F               	movf	___ftadd@f1,w
  8463  0D79  07B2               	addwf	___ftadd@f2,f
  8464  0D7A  0830               	movf	___ftadd@f1+1,w
  8465  0D7B  1103               	clrz
  8466  0D7C  1803               	skipnc
  8467  0D7D  0A30               	incf	___ftadd@f1+1,w
  8468  0D7E  1D03               	btfss	3,2
  8469  0D7F  07B3               	addwf	___ftadd@f2+1,f
  8470  0D80  0831               	movf	___ftadd@f1+2,w
  8471  0D81  1103               	clrz
  8472  0D82  1803               	skipnc
  8473  0D83  0A31               	incf	___ftadd@f1+2,w
  8474  0D84  1D03               	btfss	3,2
  8475  0D85  07B4               	addwf	___ftadd@f2+2,f
  8476  0D86  1FB4               	btfss	___ftadd@f2+2,7
  8477  0D87  2D93               	goto	i1l9901
  8478  0D88  30FF               	movlw	255
  8479  0D89  06B2               	xorwf	___ftadd@f2,f
  8480  0D8A  06B3               	xorwf	___ftadd@f2+1,f
  8481  0D8B  06B4               	xorwf	___ftadd@f2+2,f
  8482  0D8C  0AB2               	incf	___ftadd@f2,f
  8483  0D8D  1903               	skipnz
  8484  0D8E  0AB3               	incf	___ftadd@f2+1,f
  8485  0D8F  1903               	skipnz
  8486  0D90  0AB4               	incf	___ftadd@f2+2,f
  8487  0D91  01B8               	clrf	___ftadd@sign
  8488  0D92  0AB8               	incf	___ftadd@sign,f
  8489  0D93                     i1l9901:	
  8490  0D93  0832               	movf	___ftadd@f2,w
  8491  0D94  00F0               	movwf	?___ftpack
  8492  0D95  0833               	movf	___ftadd@f2+1,w
  8493  0D96  00F1               	movwf	?___ftpack+1
  8494  0D97  0834               	movf	___ftadd@f2+2,w
  8495  0D98  00F2               	movwf	?___ftpack+2
  8496  0D99  083A               	movf	___ftadd@exp1,w
  8497  0D9A  00F3               	movwf	?___ftpack+3
  8498  0D9B  0838               	movf	___ftadd@sign,w
  8499  0D9C  00F4               	movwf	?___ftpack+4
  8500  0D9D  2620               	fcall	___ftpack
  8501  0D9E  0870               	movf	?___ftpack,w
  8502  0D9F  00AF               	movwf	?___ftadd
  8503  0DA0  0871               	movf	?___ftpack+1,w
  8504  0DA1  00B0               	movwf	?___ftadd+1
  8505  0DA2  0872               	movf	?___ftpack+2,w
  8506  0DA3  00B1               	movwf	?___ftadd+2
  8507  0DA4  0008               	return
  8508  0DA5                     __end_of___ftadd:	
  8509  0DA5                     __ptext1226:	
  8510 ;; =============== function ___awtoft ends ============
  8511                           
  8512                           
  8513 ;; *************** function ___ftmul *****************
  8514 ;; Defined at:
  8515 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\ftmul.c"
  8516 ;; Parameters:    Size  Location     Type
  8517 ;;  f1              3    0[BANK0 ] float 
  8518 ;;  f2              3    3[BANK0 ] float 
  8519 ;; Auto vars:     Size  Location     Type
  8520 ;;  f3_as_produc    3   10[BANK0 ] unsigned um
  8521 ;;  sign            1   14[BANK0 ] unsigned char 
  8522 ;;  cntr            1   13[BANK0 ] unsigned char 
  8523 ;;  exp             1    9[BANK0 ] unsigned char 
  8524 ;; Return value:  Size  Location     Type
  8525 ;;                  3    0[BANK0 ] float 
  8526 ;; Registers used:
  8527 ;;		wreg, status,2, status,0, pclath, cstack
  8528 ;; Tracked objects:
  8529 ;;		On entry : 60/0
  8530 ;;		On exit  : 60/0
  8531 ;;		Unchanged: FFF9F/0
  8532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8533 ;;      Params:         0       6       0       0       0
  8534 ;;      Locals:         0       6       0       0       0
  8535 ;;      Temps:          0       3       0       0       0
  8536 ;;      Totals:         0      15       0       0       0
  8537 ;;Total ram usage:       15 bytes
  8538 ;; Hardware stack levels used:    1
  8539 ;; Hardware stack levels required when called:    1
  8540 ;; This function calls:
  8541 ;;		___ftpack
  8542 ;; This function is called by:
  8543 ;;		_pow
  8544 ;;		_sqrt
  8545 ;;		_exp
  8546 ;;		_log
  8547 ;;		_eval_poly
  8548 ;; This function uses a non-reentrant model
  8549 ;;
  8550  0DA5                     ___ftmul:	
  8551                           
  8552 ;; hardware stack exceeded
  8553                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8554  0DA5  0820               	movf	___ftmul@f1,w
  8555  0DA6  00A6               	movwf	??___ftmul
  8556  0DA7  0821               	movf	___ftmul@f1+1,w
  8557  0DA8  00A7               	movwf	??___ftmul+1
  8558  0DA9  0822               	movf	___ftmul@f1+2,w
  8559  0DAA  00A8               	movwf	??___ftmul+2
  8560  0DAB  1003               	clrc
  8561  0DAC  0D27               	rlf	??___ftmul+1,w
  8562  0DAD  0D28               	rlf	??___ftmul+2,w
  8563  0DAE  00A9               	movwf	___ftmul@exp
  8564  0DAF  08A9               	movf	___ftmul@exp,f
  8565  0DB0  1D03               	skipz
  8566  0DB1  2DB6               	goto	i1l10001
  8567  0DB2  01A0               	clrf	?___ftmul
  8568  0DB3  01A1               	clrf	?___ftmul+1
  8569  0DB4  01A2               	clrf	?___ftmul+2
  8570  0DB5  0008               	return
  8571  0DB6                     i1l10001:	
  8572  0DB6  0823               	movf	___ftmul@f2,w
  8573  0DB7  00A6               	movwf	??___ftmul
  8574  0DB8  0824               	movf	___ftmul@f2+1,w
  8575  0DB9  00A7               	movwf	??___ftmul+1
  8576  0DBA  0825               	movf	___ftmul@f2+2,w
  8577  0DBB  00A8               	movwf	??___ftmul+2
  8578  0DBC  1003               	clrc
  8579  0DBD  0D27               	rlf	??___ftmul+1,w
  8580  0DBE  0D28               	rlf	??___ftmul+2,w
  8581  0DBF  00AE               	movwf	___ftmul@sign
  8582  0DC0  08AE               	movf	___ftmul@sign,f
  8583  0DC1  1D03               	skipz
  8584  0DC2  2DC7               	goto	i1l10007
  8585  0DC3  01A0               	clrf	?___ftmul
  8586  0DC4  01A1               	clrf	?___ftmul+1
  8587  0DC5  01A2               	clrf	?___ftmul+2
  8588  0DC6  0008               	return
  8589  0DC7                     i1l10007:	
  8590  0DC7  082E               	movf	___ftmul@sign,w
  8591  0DC8  3E7B               	addlw	123
  8592  0DC9  07A9               	addwf	___ftmul@exp,f
  8593  0DCA  0822               	movf	___ftmul@f1+2,w
  8594  0DCB  00AE               	movwf	___ftmul@sign
  8595  0DCC  0825               	movf	___ftmul@f2+2,w
  8596  0DCD  06AE               	xorwf	___ftmul@sign,f
  8597  0DCE  3080               	movlw	128
  8598  0DCF  05AE               	andwf	___ftmul@sign,f
  8599  0DD0  17A1               	bsf	___ftmul@f1+1,7
  8600  0DD1  17A4               	bsf	___ftmul@f2+1,7
  8601  0DD2  01A5               	clrf	___ftmul@f2+2
  8602  0DD3  01AA               	clrf	___ftmul@f3_as_product
  8603  0DD4  01AB               	clrf	___ftmul@f3_as_product+1
  8604  0DD5  01AC               	clrf	___ftmul@f3_as_product+2
  8605  0DD6  3007               	movlw	7
  8606  0DD7  00AD               	movwf	___ftmul@cntr
  8607  0DD8                     i1l10025:	
  8608  0DD8  1C20               	btfss	___ftmul@f1,0
  8609  0DD9  2DE8               	goto	i1l10029
  8610  0DDA  0823               	movf	___ftmul@f2,w
  8611  0DDB  07AA               	addwf	___ftmul@f3_as_product,f
  8612  0DDC  0824               	movf	___ftmul@f2+1,w
  8613  0DDD  1103               	clrz
  8614  0DDE  1803               	skipnc
  8615  0DDF  0A24               	incf	___ftmul@f2+1,w
  8616  0DE0  1D03               	btfss	3,2
  8617  0DE1  07AB               	addwf	___ftmul@f3_as_product+1,f
  8618  0DE2  0825               	movf	___ftmul@f2+2,w
  8619  0DE3  1103               	clrz
  8620  0DE4  1803               	skipnc
  8621  0DE5  0A25               	incf	___ftmul@f2+2,w
  8622  0DE6  1D03               	btfss	3,2
  8623  0DE7  07AC               	addwf	___ftmul@f3_as_product+2,f
  8624  0DE8                     i1l10029:	
  8625  0DE8  1003               	clrc
  8626  0DE9  0CA2               	rrf	___ftmul@f1+2,f
  8627  0DEA  0CA1               	rrf	___ftmul@f1+1,f
  8628  0DEB  0CA0               	rrf	___ftmul@f1,f
  8629  0DEC  1003               	clrc
  8630  0DED  0DA3               	rlf	___ftmul@f2,f
  8631  0DEE  0DA4               	rlf	___ftmul@f2+1,f
  8632  0DEF  0DA5               	rlf	___ftmul@f2+2,f
  8633  0DF0  0BAD               	decfsz	___ftmul@cntr,f
  8634  0DF1  2DD8               	goto	i1l10025
  8635  0DF2  3009               	movlw	9
  8636  0DF3  00AD               	movwf	___ftmul@cntr
  8637  0DF4                     i1l10037:	
  8638  0DF4  1C20               	btfss	___ftmul@f1,0
  8639  0DF5  2E04               	goto	i1l10041
  8640  0DF6  0823               	movf	___ftmul@f2,w
  8641  0DF7  07AA               	addwf	___ftmul@f3_as_product,f
  8642  0DF8  0824               	movf	___ftmul@f2+1,w
  8643  0DF9  1103               	clrz
  8644  0DFA  1803               	skipnc
  8645  0DFB  0A24               	incf	___ftmul@f2+1,w
  8646  0DFC  1D03               	btfss	3,2
  8647  0DFD  07AB               	addwf	___ftmul@f3_as_product+1,f
  8648  0DFE  0825               	movf	___ftmul@f2+2,w
  8649  0DFF  1103               	clrz
  8650  0E00  1803               	skipnc
  8651  0E01  0A25               	incf	___ftmul@f2+2,w
  8652  0E02  1D03               	btfss	3,2
  8653  0E03  07AC               	addwf	___ftmul@f3_as_product+2,f
  8654  0E04                     i1l10041:	
  8655  0E04  1003               	clrc
  8656  0E05  0CA2               	rrf	___ftmul@f1+2,f
  8657  0E06  0CA1               	rrf	___ftmul@f1+1,f
  8658  0E07  0CA0               	rrf	___ftmul@f1,f
  8659  0E08  1003               	clrc
  8660  0E09  0CAC               	rrf	___ftmul@f3_as_product+2,f
  8661  0E0A  0CAB               	rrf	___ftmul@f3_as_product+1,f
  8662  0E0B  0CAA               	rrf	___ftmul@f3_as_product,f
  8663  0E0C  0BAD               	decfsz	___ftmul@cntr,f
  8664  0E0D  2DF4               	goto	i1l10037
  8665  0E0E  082A               	movf	___ftmul@f3_as_product,w
  8666  0E0F  00F0               	movwf	?___ftpack
  8667  0E10  082B               	movf	___ftmul@f3_as_product+1,w
  8668  0E11  00F1               	movwf	?___ftpack+1
  8669  0E12  082C               	movf	___ftmul@f3_as_product+2,w
  8670  0E13  00F2               	movwf	?___ftpack+2
  8671  0E14  0829               	movf	___ftmul@exp,w
  8672  0E15  00F3               	movwf	?___ftpack+3
  8673  0E16  082E               	movf	___ftmul@sign,w
  8674  0E17  00F4               	movwf	?___ftpack+4
  8675  0E18  2620               	fcall	___ftpack
  8676  0E19  0870               	movf	?___ftpack,w
  8677  0E1A  00A0               	movwf	?___ftmul
  8678  0E1B  0871               	movf	?___ftpack+1,w
  8679  0E1C  00A1               	movwf	?___ftmul+1
  8680  0E1D  0872               	movf	?___ftpack+2,w
  8681  0E1E  00A2               	movwf	?___ftmul+2
  8682  0E1F  0008               	return
  8683  0E20                     __end_of___ftmul:	
  8684  0E20                     __ptext1238:	
  8685 ;; =============== function ___lmul ends ============
  8686                           
  8687                           
  8688 ;; *************** function ___ftpack *****************
  8689 ;; Defined at:
  8690 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\float.c"
  8691 ;; Parameters:    Size  Location     Type
  8692 ;;  arg             3    0[COMMON] unsigned um
  8693 ;;  exp             1    3[COMMON] unsigned char 
  8694 ;;  sign            1    4[COMMON] unsigned char 
  8695 ;; Auto vars:     Size  Location     Type
  8696 ;;		None
  8697 ;; Return value:  Size  Location     Type
  8698 ;;                  3    0[COMMON] float 
  8699 ;; Registers used:
  8700 ;;		wreg, status,2, status,0
  8701 ;; Tracked objects:
  8702 ;;		On entry : 40/20
  8703 ;;		On exit  : 40/20
  8704 ;;		Unchanged: FFFBF/0
  8705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8706 ;;      Params:         5       0       0       0       0
  8707 ;;      Locals:         0       0       0       0       0
  8708 ;;      Temps:          3       0       0       0       0
  8709 ;;      Totals:         8       0       0       0       0
  8710 ;;Total ram usage:        8 bytes
  8711 ;; Hardware stack levels used:    1
  8712 ;; This function calls:
  8713 ;;		Nothing
  8714 ;; This function is called by:
  8715 ;;		___ftadd
  8716 ;;		___ftdiv
  8717 ;;		___ftmul
  8718 ;;		___awtoft
  8719 ;;		___altoft
  8720 ;;		___lltoft
  8721 ;; This function uses a non-reentrant model
  8722 ;;
  8723  0E20                     ___ftpack:	
  8724                           
  8725 ;; hardware stack exceeded
  8726                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8727  0E20  0873               	movf	___ftpack@exp,w
  8728  0E21  1903               	btfsc	3,2
  8729  0E22  2E28               	goto	i1l9909
  8730  0E23  0872               	movf	___ftpack@arg+2,w
  8731  0E24  0471               	iorwf	___ftpack@arg+1,w
  8732  0E25  0470               	iorwf	___ftpack@arg,w
  8733  0E26  1D03               	skipz
  8734  0E27  2E31               	goto	i1l9915
  8735  0E28                     i1l9909:	
  8736  0E28  01F0               	clrf	?___ftpack
  8737  0E29  01F1               	clrf	?___ftpack+1
  8738  0E2A  01F2               	clrf	?___ftpack+2
  8739  0E2B  0008               	return
  8740  0E2C                     i1l9913:	
  8741  0E2C  0AF3               	incf	___ftpack@exp,f
  8742  0E2D  1003               	clrc
  8743  0E2E  0CF2               	rrf	___ftpack@arg+2,f
  8744  0E2F  0CF1               	rrf	___ftpack@arg+1,f
  8745  0E30  0CF0               	rrf	___ftpack@arg,f
  8746  0E31                     i1l9915:	
  8747  0E31  30FE               	movlw	254
  8748  0E32  0572               	andwf	___ftpack@arg+2,w
  8749  0E33  1903               	btfsc	3,2
  8750  0E34  2E40               	goto	i1l9919
  8751  0E35  2E2C               	goto	i1l9913
  8752  0E36                     i1l9917:	
  8753  0E36  0AF3               	incf	___ftpack@exp,f
  8754  0E37  0AF0               	incf	___ftpack@arg,f
  8755  0E38  1903               	skipnz
  8756  0E39  0AF1               	incf	___ftpack@arg+1,f
  8757  0E3A  1903               	skipnz
  8758  0E3B  0AF2               	incf	___ftpack@arg+2,f
  8759  0E3C  1003               	clrc
  8760  0E3D  0CF2               	rrf	___ftpack@arg+2,f
  8761  0E3E  0CF1               	rrf	___ftpack@arg+1,f
  8762  0E3F  0CF0               	rrf	___ftpack@arg,f
  8763  0E40                     i1l9919:	
  8764  0E40  30FF               	movlw	255
  8765  0E41  0572               	andwf	___ftpack@arg+2,w
  8766  0E42  1903               	btfsc	3,2
  8767  0E43  2E4A               	goto	i1l9923
  8768  0E44  2E36               	goto	i1l9917
  8769  0E45                     i1l9921:	
  8770  0E45  03F3               	decf	___ftpack@exp,f
  8771  0E46  1003               	clrc
  8772  0E47  0DF0               	rlf	___ftpack@arg,f
  8773  0E48  0DF1               	rlf	___ftpack@arg+1,f
  8774  0E49  0DF2               	rlf	___ftpack@arg+2,f
  8775  0E4A                     i1l9923:	
  8776  0E4A  1FF1               	btfss	___ftpack@arg+1,7
  8777  0E4B  2E45               	goto	i1l9921
  8778  0E4C  1C73               	btfss	___ftpack@exp,0
  8779  0E4D  13F1               	bcf	___ftpack@arg+1,7
  8780  0E4E  1003               	clrc
  8781  0E4F  0CF3               	rrf	___ftpack@exp,f
  8782  0E50  0873               	movf	___ftpack@exp,w
  8783  0E51  00F7               	movwf	??___ftpack+2
  8784  0E52  01F6               	clrf	??___ftpack+1
  8785  0E53  01F5               	clrf	??___ftpack
  8786  0E54  0875               	movf	??___ftpack,w
  8787  0E55  04F0               	iorwf	___ftpack@arg,f
  8788  0E56  0876               	movf	??___ftpack+1,w
  8789  0E57  04F1               	iorwf	___ftpack@arg+1,f
  8790  0E58  0877               	movf	??___ftpack+2,w
  8791  0E59  04F2               	iorwf	___ftpack@arg+2,f
  8792  0E5A  0874               	movf	___ftpack@sign,w
  8793  0E5B  1D03               	skipz
  8794  0E5C  17F2               	bsf	___ftpack@arg+2,7
  8795  0E5D  0008               	return
  8796  0E5E                     __end_of___ftpack:	
  8797  0E5E                     __ptext1234:	
  8798 ;; =============== function _frexp ends ============
  8799                           
  8800                           
  8801 ;; *************** function ___ftge *****************
  8802 ;; Defined at:
  8803 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\ftge.c"
  8804 ;; Parameters:    Size  Location     Type
  8805 ;;  ff1             3    0[COMMON] float 
  8806 ;;  ff2             3    3[COMMON] float 
  8807 ;; Auto vars:     Size  Location     Type
  8808 ;;		None
  8809 ;; Return value:  Size  Location     Type
  8810 ;;		None               void
  8811 ;; Registers used:
  8812 ;;		wreg, status,2, status,0
  8813 ;; Tracked objects:
  8814 ;;		On entry : 40/20
  8815 ;;		On exit  : 40/20
  8816 ;;		Unchanged: FFFBF/0
  8817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8818 ;;      Params:         6       0       0       0       0
  8819 ;;      Locals:         0       0       0       0       0
  8820 ;;      Temps:          0       0       0       0       0
  8821 ;;      Totals:         6       0       0       0       0
  8822 ;;Total ram usage:        6 bytes
  8823 ;; Hardware stack levels used:    1
  8824 ;; This function calls:
  8825 ;;		Nothing
  8826 ;; This function is called by:
  8827 ;;		_pow
  8828 ;;		_sqrt
  8829 ;;		_exp
  8830 ;;		_floor
  8831 ;;		_log
  8832 ;;		_ldexp
  8833 ;; This function uses a non-reentrant model
  8834 ;;
  8835  0E5E                     ___ftge:	
  8836                           
  8837 ;; hardware stack exceeded
  8838                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8839  0E5E  1FF2               	btfss	___ftge@ff1+2,7
  8840  0E5F  2E6D               	goto	i1l10113
  8841  0E60  0870               	movf	___ftge@ff1,w
  8842  0E61  3C00               	sublw	0
  8843  0E62  00F0               	movwf	___ftge@ff1
  8844  0E63  0871               	movf	___ftge@ff1+1,w
  8845  0E64  1C03               	skipc
  8846  0E65  0F71               	incfsz	___ftge@ff1+1,w
  8847  0E66  3C00               	sublw	0
  8848  0E67  00F1               	movwf	___ftge@ff1+1
  8849  0E68  0872               	movf	___ftge@ff1+2,w
  8850  0E69  1C03               	skipc
  8851  0E6A  0F72               	incfsz	___ftge@ff1+2,w
  8852  0E6B  3C80               	sublw	128
  8853  0E6C  00F2               	movwf	___ftge@ff1+2
  8854  0E6D                     i1l10113:	
  8855  0E6D  1FF5               	btfss	___ftge@ff2+2,7
  8856  0E6E  2E7C               	goto	i1l10117
  8857  0E6F  0873               	movf	___ftge@ff2,w
  8858  0E70  3C00               	sublw	0
  8859  0E71  00F3               	movwf	___ftge@ff2
  8860  0E72  0874               	movf	___ftge@ff2+1,w
  8861  0E73  1C03               	skipc
  8862  0E74  0F74               	incfsz	___ftge@ff2+1,w
  8863  0E75  3C00               	sublw	0
  8864  0E76  00F4               	movwf	___ftge@ff2+1
  8865  0E77  0875               	movf	___ftge@ff2+2,w
  8866  0E78  1C03               	skipc
  8867  0E79  0F75               	incfsz	___ftge@ff2+2,w
  8868  0E7A  3C80               	sublw	128
  8869  0E7B  00F5               	movwf	___ftge@ff2+2
  8870  0E7C                     i1l10117:	
  8871  0E7C  3080               	movlw	128
  8872  0E7D  06F2               	xorwf	___ftge@ff1+2,f
  8873  0E7E  06F5               	xorwf	___ftge@ff2+2,f
  8874  0E7F  0875               	movf	___ftge@ff2+2,w
  8875  0E80  0272               	subwf	___ftge@ff1+2,w
  8876  0E81  1D03               	skipz
  8877  0E82  0008               	return
  8878  0E83  0874               	movf	___ftge@ff2+1,w
  8879  0E84  0271               	subwf	___ftge@ff1+1,w
  8880  0E85  1D03               	skipz
  8881  0E86  0008               	return
  8882  0E87  0873               	movf	___ftge@ff2,w
  8883  0E88  0270               	subwf	___ftge@ff1,w
  8884  0E89  0008               	return
  8885  0E8A                     __end_of___ftge:	
  8886  0E8A                     __ptext1220:	
  8887 ;; =============== function _floor ends ============
  8888                           
  8889                           
  8890 ;; *************** function ___ftsub *****************
  8891 ;; Defined at:
  8892 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\ftsub.c"
  8893 ;; Parameters:    Size  Location     Type
  8894 ;;  f2              3   27[BANK0 ] float 
  8895 ;;  f1              3   30[BANK0 ] float 
  8896 ;; Auto vars:     Size  Location     Type
  8897 ;;		None
  8898 ;; Return value:  Size  Location     Type
  8899 ;;                  3   27[BANK0 ] float 
  8900 ;; Registers used:
  8901 ;;		wreg, status,2, status,0, pclath, cstack
  8902 ;; Tracked objects:
  8903 ;;		On entry : 60/0
  8904 ;;		On exit  : 60/0
  8905 ;;		Unchanged: FFF9F/0
  8906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8907 ;;      Params:         0       6       0       0       0
  8908 ;;      Locals:         0       0       0       0       0
  8909 ;;      Temps:          0       0       0       0       0
  8910 ;;      Totals:         0       6       0       0       0
  8911 ;;Total ram usage:        6 bytes
  8912 ;; Hardware stack levels used:    1
  8913 ;; Hardware stack levels required when called:    2
  8914 ;; This function calls:
  8915 ;;		___ftadd
  8916 ;; This function is called by:
  8917 ;;		_sqrt
  8918 ;;		_exp
  8919 ;; This function uses a non-reentrant model
  8920 ;;
  8921  0E8A                     ___ftsub:	
  8922                           
  8923 ;; hardware stack exceeded
  8924                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8925  0E8A  3080               	movlw	128
  8926  0E8B  06BD               	xorwf	___ftsub@f2+2,f
  8927  0E8C  083E               	movf	___ftsub@f1,w
  8928  0E8D  00AF               	movwf	?___ftadd
  8929  0E8E  083F               	movf	___ftsub@f1+1,w
  8930  0E8F  00B0               	movwf	?___ftadd+1
  8931  0E90  0840               	movf	___ftsub@f1+2,w
  8932  0E91  00B1               	movwf	?___ftadd+2
  8933  0E92  083B               	movf	___ftsub@f2,w
  8934  0E93  00B2               	movwf	?___ftadd+3
  8935  0E94  083C               	movf	___ftsub@f2+1,w
  8936  0E95  00B3               	movwf	?___ftadd+4
  8937  0E96  083D               	movf	___ftsub@f2+2,w
  8938  0E97  00B4               	movwf	?___ftadd+5
  8939  0E98  24E5               	fcall	___ftadd
  8940  0E99  082F               	movf	?___ftadd,w
  8941  0E9A  00BB               	movwf	?___ftsub
  8942  0E9B  0830               	movf	?___ftadd+1,w
  8943  0E9C  00BC               	movwf	?___ftsub+1
  8944  0E9D  0831               	movf	?___ftadd+2,w
  8945  0E9E  00BD               	movwf	?___ftsub+2
  8946  0E9F  0008               	return
  8947  0EA0                     __end_of___ftsub:	
  8948  0EA0                     __ptext1235:	
  8949 ;; =============== function ___ftge ends ============
  8950                           
  8951                           
  8952 ;; *************** function ___ftneg *****************
  8953 ;; Defined at:
  8954 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\ftneg.c"
  8955 ;; Parameters:    Size  Location     Type
  8956 ;;  f1              3    0[COMMON] float 
  8957 ;; Auto vars:     Size  Location     Type
  8958 ;;		None
  8959 ;; Return value:  Size  Location     Type
  8960 ;;                  3    0[COMMON] float 
  8961 ;; Registers used:
  8962 ;;		wreg
  8963 ;; Tracked objects:
  8964 ;;		On entry : 40/20
  8965 ;;		On exit  : 40/20
  8966 ;;		Unchanged: FFFBF/0
  8967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8968 ;;      Params:         3       0       0       0       0
  8969 ;;      Locals:         0       0       0       0       0
  8970 ;;      Temps:          0       0       0       0       0
  8971 ;;      Totals:         3       0       0       0       0
  8972 ;;Total ram usage:        3 bytes
  8973 ;; Hardware stack levels used:    1
  8974 ;; This function calls:
  8975 ;;		Nothing
  8976 ;; This function is called by:
  8977 ;;		_pow
  8978 ;;		_exp
  8979 ;;		_ldexp
  8980 ;; This function uses a non-reentrant model
  8981 ;;
  8982  0EA0                     ___ftneg:	
  8983                           
  8984 ;; hardware stack exceeded
  8985                           ; Regs used in ___ftneg: [wreg]
  8986  0EA0  0872               	movf	___ftneg@f1+2,w
  8987  0EA1  0471               	iorwf	___ftneg@f1+1,w
  8988  0EA2  0470               	iorwf	___ftneg@f1,w
  8989  0EA3  1903               	skipnz
  8990  0EA4  0008               	return
  8991  0EA5  3080               	movlw	128
  8992  0EA6  06F2               	xorwf	___ftneg@f1+2,f
  8993  0EA7  0008               	return
  8994  0EA8                     __end_of___ftneg:	
  8995  0EA8                     __ptext1225:	
  8996 ;; =============== function ___altoft ends ============
  8997                           
  8998                           
  8999 ;; *************** function ___awtoft *****************
  9000 ;; Defined at:
  9001 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\awtoft.c"
  9002 ;; Parameters:    Size  Location     Type
  9003 ;;  c               2    8[COMMON] int 
  9004 ;; Auto vars:     Size  Location     Type
  9005 ;;  sign            1   11[COMMON] unsigned char 
  9006 ;; Return value:  Size  Location     Type
  9007 ;;                  3    8[COMMON] float 
  9008 ;; Registers used:
  9009 ;;		wreg, status,2, status,0, pclath, cstack
  9010 ;; Tracked objects:
  9011 ;;		On entry : 160/0
  9012 ;;		On exit  : 160/0
  9013 ;;		Unchanged: FFE9F/0
  9014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9015 ;;      Params:         3       0       0       0       0
  9016 ;;      Locals:         1       0       0       0       0
  9017 ;;      Temps:          0       0       0       0       0
  9018 ;;      Totals:         4       0       0       0       0
  9019 ;;Total ram usage:        4 bytes
  9020 ;; Hardware stack levels used:    1
  9021 ;; Hardware stack levels required when called:    1
  9022 ;; This function calls:
  9023 ;;		___ftpack
  9024 ;; This function is called by:
  9025 ;;		_exp
  9026 ;;		_log
  9027 ;; This function uses a non-reentrant model
  9028 ;;
  9029  0EA8                     ___awtoft:	
  9030                           
  9031 ;; hardware stack exceeded
  9032                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  9033  0EA8  01FB               	clrf	___awtoft@sign
  9034  0EA9  1FF9               	btfss	___awtoft@c+1,7
  9035  0EAA  2EB2               	goto	i1l10097
  9036  0EAB  09F8               	comf	___awtoft@c,f
  9037  0EAC  09F9               	comf	___awtoft@c+1,f
  9038  0EAD  0AF8               	incf	___awtoft@c,f
  9039  0EAE  1903               	skipnz
  9040  0EAF  0AF9               	incf	___awtoft@c+1,f
  9041  0EB0  01FB               	clrf	___awtoft@sign
  9042  0EB1  0AFB               	incf	___awtoft@sign,f
  9043  0EB2                     i1l10097:	
  9044  0EB2  0878               	movf	___awtoft@c,w
  9045  0EB3  00F0               	movwf	?___ftpack
  9046  0EB4  0879               	movf	___awtoft@c+1,w
  9047  0EB5  00F1               	movwf	?___ftpack+1
  9048  0EB6  01F2               	clrf	?___ftpack+2
  9049  0EB7  308E               	movlw	142
  9050  0EB8  00F3               	movwf	?___ftpack+3
  9051  0EB9  087B               	movf	___awtoft@sign,w
  9052  0EBA  00F4               	movwf	?___ftpack+4
  9053  0EBB  2620               	fcall	___ftpack
  9054  0EBC  0870               	movf	?___ftpack,w
  9055  0EBD  00F8               	movwf	?___awtoft
  9056  0EBE  0871               	movf	?___ftpack+1,w
  9057  0EBF  00F9               	movwf	?___awtoft+1
  9058  0EC0  0872               	movf	?___ftpack+2,w
  9059  0EC1  00FA               	movwf	?___awtoft+2
  9060  0EC2  0008               	return
  9061  0EC3                     __end_of___awtoft:	
  9062  0EC3                     __ptext1222:	
  9063 ;; =============== function i1_Digitron_Command ends ============
  9064                           
  9065                           
  9066 ;; *************** function _ldexp *****************
  9067 ;; Defined at:
  9068 ;;		line 278 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\frexp.c"
  9069 ;; Parameters:    Size  Location     Type
  9070 ;;  value           3   27[BANK0 ] unsigned char 
  9071 ;;  newexp          2   30[BANK0 ] int 
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;		None
  9074 ;; Return value:  Size  Location     Type
  9075 ;;                  3   27[BANK0 ] int 
  9076 ;; Registers used:
  9077 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9078 ;; Tracked objects:
  9079 ;;		On entry : 160/0
  9080 ;;		On exit  : 60/0
  9081 ;;		Unchanged: FFE00/0
  9082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9083 ;;      Params:         0       5       0       0       0
  9084 ;;      Locals:         0       3       0       0       0
  9085 ;;      Temps:          0       2       0       0       0
  9086 ;;      Totals:         0      10       0       0       0
  9087 ;;Total ram usage:       10 bytes
  9088 ;; Hardware stack levels used:    1
  9089 ;; Hardware stack levels required when called:    1
  9090 ;; This function calls:
  9091 ;;		___ftge
  9092 ;;		___ftneg
  9093 ;; This function is called by:
  9094 ;;		_exp
  9095 ;; This function uses a non-reentrant model
  9096 ;;
  9097  0EC3                     _ldexp:	
  9098                           
  9099 ;; hardware stack exceeded
  9100                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9101  0EC3  083D               	movf	ldexp@value+2,w
  9102  0EC4  043C               	iorwf	ldexp@value+1,w
  9103  0EC5  043B               	iorwf	ldexp@value,w
  9104  0EC6  1D03               	skipz
  9105  0EC7  2ECC               	goto	i1l10199
  9106  0EC8  01BB               	clrf	?_ldexp
  9107  0EC9  01BC               	clrf	?_ldexp+1
  9108  0ECA  01BD               	clrf	?_ldexp+2
  9109  0ECB  0008               	return
  9110  0ECC                     i1l10199:	
  9111  0ECC  083D               	movf	ldexp@value+2,w
  9112  0ECD  397F               	andlw	127
  9113  0ECE  00C0               	movwf	??_ldexp
  9114  0ECF  01C1               	clrf	??_ldexp+1
  9115  0ED0  1003               	clrc
  9116  0ED1  0DC0               	rlf	??_ldexp,f
  9117  0ED2  0DC1               	rlf	??_ldexp+1,f
  9118  0ED3  0840               	movf	??_ldexp,w
  9119  0ED4  07BE               	addwf	ldexp@newexp,f
  9120  0ED5  1803               	skipnc
  9121  0ED6  0ABF               	incf	ldexp@newexp+1,f
  9122  0ED7  0841               	movf	??_ldexp+1,w
  9123  0ED8  07BF               	addwf	ldexp@newexp+1,f
  9124  0ED9  0D3C               	rlf	ldexp@value+1,w
  9125  0EDA  0D3C               	rlf	ldexp@value+1,w
  9126  0EDB  3901               	andlw	1
  9127  0EDC  07BE               	addwf	ldexp@newexp,f
  9128  0EDD  1803               	skipnc
  9129  0EDE  0ABF               	incf	ldexp@newexp+1,f
  9130  0EDF  1FBF               	btfss	ldexp@newexp+1,7
  9131  0EE0  2EE5               	goto	i1l10209
  9132  0EE1  01BB               	clrf	?_ldexp
  9133  0EE2  01BC               	clrf	?_ldexp+1
  9134  0EE3  01BD               	clrf	?_ldexp+2
  9135  0EE4  0008               	return
  9136  0EE5                     i1l10209:	
  9137  0EE5  083F               	movf	ldexp@newexp+1,w
  9138  0EE6  3A80               	xorlw	128
  9139  0EE7  00FF               	movwf	127
  9140  0EE8  3081               	movlw	129
  9141  0EE9  027F               	subwf	127,w
  9142  0EEA  1D03               	skipz
  9143  0EEB  2EEE               	goto	u369_25
  9144  0EEC  3000               	movlw	0
  9145  0EED  023E               	subwf	ldexp@newexp,w
  9146  0EEE                     u369_25:	
  9147  0EEE  1C03               	skipc
  9148  0EEF  2F1E               	goto	i1l10227
  9149  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  9150  0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  9151  0EF2  083B               	movf	ldexp@value,w
  9152  0EF3  00F0               	movwf	?___ftge
  9153  0EF4  083C               	movf	ldexp@value+1,w
  9154  0EF5  00F1               	movwf	?___ftge+1
  9155  0EF6  083D               	movf	ldexp@value+2,w
  9156  0EF7  00F2               	movwf	?___ftge+2
  9157  0EF8  01F3               	clrf	?___ftge+3
  9158  0EF9  01F4               	clrf	?___ftge+4
  9159  0EFA  01F5               	clrf	?___ftge+5
  9160  0EFB  265E  120A  158A   	fcall	___ftge
  9161  0EFE  1803               	btfsc	3,0
  9162  0EFF  2F18               	goto	i1l10223
  9163  0F00  01C2               	clrf	_ldexp$3469
  9164  0F01  3080               	movlw	128
  9165  0F02  00C3               	movwf	_ldexp$3469+1
  9166  0F03  307F               	movlw	127
  9167  0F04  00C4               	movwf	_ldexp$3469+2
  9168  0F05  30FF               	movlw	255
  9169  0F06  00C2               	movwf	_ldexp$3469
  9170  0F07  307F               	movlw	127
  9171  0F08  00C3               	movwf	_ldexp$3469+1
  9172  0F09  00C4               	movwf	_ldexp$3469+2
  9173  0F0A  0842               	movf	_ldexp$3469,w
  9174  0F0B  00F0               	movwf	?___ftneg
  9175  0F0C  0843               	movf	_ldexp$3469+1,w
  9176  0F0D  00F1               	movwf	?___ftneg+1
  9177  0F0E  0844               	movf	_ldexp$3469+2,w
  9178  0F0F  00F2               	movwf	?___ftneg+2
  9179  0F10  26A0               	fcall	___ftneg
  9180  0F11  0870               	movf	?___ftneg,w
  9181  0F12  00BB               	movwf	?_ldexp
  9182  0F13  0871               	movf	?___ftneg+1,w
  9183  0F14  00BC               	movwf	?_ldexp+1
  9184  0F15  0872               	movf	?___ftneg+2,w
  9185  0F16  00BD               	movwf	?_ldexp+2
  9186  0F17  0008               	return
  9187  0F18                     i1l10223:	
  9188  0F18  30FF               	movlw	255
  9189  0F19  00BB               	movwf	?_ldexp
  9190  0F1A  307F               	movlw	127
  9191  0F1B  00BC               	movwf	?_ldexp+1
  9192  0F1C  00BD               	movwf	?_ldexp+2
  9193  0F1D  0008               	return
  9194  0F1E                     i1l10227:	
  9195  0F1E  1283               	bcf	3,5	;RP0=0, select bank0
  9196  0F1F  1303               	bcf	3,6	;RP1=0, select bank0
  9197  0F20  083F               	movf	ldexp@newexp+1,w
  9198  0F21  00C1               	movwf	??_ldexp+1
  9199  0F22  083E               	movf	ldexp@newexp,w
  9200  0F23  00C0               	movwf	??_ldexp
  9201  0F24  0D41               	rlf	??_ldexp+1,w
  9202  0F25  0CC1               	rrf	??_ldexp+1,f
  9203  0F26  0CC0               	rrf	??_ldexp,f
  9204  0F27  083D               	movf	ldexp@value+2,w
  9205  0F28  0640               	xorwf	??_ldexp,w
  9206  0F29  3980               	andlw	-128
  9207  0F2A  0640               	xorwf	??_ldexp,w
  9208  0F2B  00BD               	movwf	ldexp@value+2
  9209  0F2C  083E               	movf	ldexp@newexp,w
  9210  0F2D  3901               	andlw	1
  9211  0F2E  00C0               	movwf	??_ldexp
  9212  0F2F  0CC0               	rrf	??_ldexp,f
  9213  0F30  0CC0               	rrf	??_ldexp,f
  9214  0F31  083C               	movf	ldexp@value+1,w
  9215  0F32  0640               	xorwf	??_ldexp,w
  9216  0F33  397F               	andlw	-129
  9217  0F34  0640               	xorwf	??_ldexp,w
  9218  0F35  00BC               	movwf	ldexp@value+1
  9219  0F36  0008               	return
  9220  0F37                     __end_of_ldexp:	
  9221  0F37                     __ptext1219:	
  9222 ;; =============== function _eval_poly ends ============
  9223                           
  9224                           
  9225 ;; *************** function _floor *****************
  9226 ;; Defined at:
  9227 ;;		line 14 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\floor.c"
  9228 ;; Parameters:    Size  Location     Type
  9229 ;;  x               3   27[BANK0 ] int 
  9230 ;; Auto vars:     Size  Location     Type
  9231 ;;  i               3   30[BANK0 ] int 
  9232 ;;  expon           2   33[BANK0 ] int 
  9233 ;; Return value:  Size  Location     Type
  9234 ;;                  3   27[BANK0 ] int 
  9235 ;; Registers used:
  9236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9237 ;; Tracked objects:
  9238 ;;		On entry : 60/0
  9239 ;;		On exit  : 160/0
  9240 ;;		Unchanged: FFE9F/0
  9241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9242 ;;      Params:         0       3       0       0       0
  9243 ;;      Locals:         0       5       0       0       0
  9244 ;;      Temps:          0       0       0       0       0
  9245 ;;      Totals:         0       8       0       0       0
  9246 ;;Total ram usage:        8 bytes
  9247 ;; Hardware stack levels used:    1
  9248 ;; Hardware stack levels required when called:    2
  9249 ;; This function calls:
  9250 ;;		_frexp
  9251 ;;		___ftge
  9252 ;;		___fttol
  9253 ;;		___altoft
  9254 ;;		___ftadd
  9255 ;; This function is called by:
  9256 ;;		_exp
  9257 ;; This function uses a non-reentrant model
  9258 ;;
  9259  0F37                     _floor:	
  9260                           
  9261 ;; hardware stack exceeded
  9262                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9263  0F37  083B               	movf	floor@x,w
  9264  0F38  00F0               	movwf	?_frexp
  9265  0F39  083C               	movf	floor@x+1,w
  9266  0F3A  00F1               	movwf	?_frexp+1
  9267  0F3B  083D               	movf	floor@x+2,w
  9268  0F3C  00F2               	movwf	?_frexp+2
  9269  0F3D  3041               	movlw	floor@expon& (0+255)
  9270  0F3E  00F3               	movwf	?_frexp+3
  9271  0F3F  2296  120A  158A   	fcall	_frexp
  9272  0F42  1FC2               	btfss	floor@expon+1,7
  9273  0F43  2F5B               	goto	i1l10169
  9274  0F44  083B               	movf	floor@x,w
  9275  0F45  00F0               	movwf	?___ftge
  9276  0F46  083C               	movf	floor@x+1,w
  9277  0F47  00F1               	movwf	?___ftge+1
  9278  0F48  083D               	movf	floor@x+2,w
  9279  0F49  00F2               	movwf	?___ftge+2
  9280  0F4A  01F3               	clrf	?___ftge+3
  9281  0F4B  01F4               	clrf	?___ftge+4
  9282  0F4C  01F5               	clrf	?___ftge+5
  9283  0F4D  265E  120A  158A   	fcall	___ftge
  9284  0F50  01BB               	clrf	?_floor
  9285  0F51  1803               	btfsc	3,0
  9286  0F52  2F58               	goto	L4
  9287  0F53  3080               	movlw	128
  9288  0F54  00BC               	movwf	?_floor+1
  9289  0F55  30BF               	movlw	191
  9290  0F56  00BD               	movwf	?_floor+2
  9291  0F57  0008               	return
  9292  0F58                     L4:	
  9293  0F58  01BC               	clrf	?_floor+1
  9294  0F59  01BD               	clrf	?_floor+2
  9295  0F5A  0008               	return
  9296  0F5B                     i1l10169:	
  9297  0F5B  3000               	movlw	0
  9298  0F5C  0242               	subwf	floor@expon+1,w
  9299  0F5D  3015               	movlw	21
  9300  0F5E  1903               	skipnz
  9301  0F5F  0241               	subwf	floor@expon,w
  9302  0F60  1803               	btfsc	3,0
  9303  0F61  0008               	return
  9304  0F62  083B               	movf	floor@x,w
  9305  0F63  00F8               	movwf	?___fttol
  9306  0F64  083C               	movf	floor@x+1,w
  9307  0F65  00F9               	movwf	?___fttol+1
  9308  0F66  083D               	movf	floor@x+2,w
  9309  0F67  00FA               	movwf	?___fttol+2
  9310  0F68  218D  120A  158A   	fcall	___fttol
  9311  0F6B  087B               	movf	?___fttol+3,w
  9312  0F6C  00AC               	movwf	?___altoft+3
  9313  0F6D  087A               	movf	?___fttol+2,w
  9314  0F6E  00AB               	movwf	?___altoft+2
  9315  0F6F  0879               	movf	?___fttol+1,w
  9316  0F70  00AA               	movwf	?___altoft+1
  9317  0F71  0878               	movf	?___fttol,w
  9318  0F72  00A9               	movwf	?___altoft
  9319  0F73  27A7  120A  158A   	fcall	___altoft
  9320  0F76  0829               	movf	?___altoft,w
  9321  0F77  00BE               	movwf	floor@i
  9322  0F78  082A               	movf	?___altoft+1,w
  9323  0F79  00BF               	movwf	floor@i+1
  9324  0F7A  082B               	movf	?___altoft+2,w
  9325  0F7B  00C0               	movwf	floor@i+2
  9326  0F7C  083B               	movf	floor@x,w
  9327  0F7D  00F0               	movwf	?___ftge
  9328  0F7E  083C               	movf	floor@x+1,w
  9329  0F7F  00F1               	movwf	?___ftge+1
  9330  0F80  083D               	movf	floor@x+2,w
  9331  0F81  00F2               	movwf	?___ftge+2
  9332  0F82  083E               	movf	floor@i,w
  9333  0F83  00F3               	movwf	?___ftge+3
  9334  0F84  083F               	movf	floor@i+1,w
  9335  0F85  00F4               	movwf	?___ftge+4
  9336  0F86  0840               	movf	floor@i+2,w
  9337  0F87  00F5               	movwf	?___ftge+5
  9338  0F88  265E  120A  158A   	fcall	___ftge
  9339  0F8B  1803               	btfsc	3,0
  9340  0F8C  2FA0               	goto	i1l10179
  9341  0F8D  01AF               	clrf	?___ftadd
  9342  0F8E  3080               	movlw	128
  9343  0F8F  00B0               	movwf	?___ftadd+1
  9344  0F90  30BF               	movlw	191
  9345  0F91  00B1               	movwf	?___ftadd+2
  9346  0F92  083E               	movf	floor@i,w
  9347  0F93  00B2               	movwf	?___ftadd+3
  9348  0F94  083F               	movf	floor@i+1,w
  9349  0F95  00B3               	movwf	?___ftadd+4
  9350  0F96  0840               	movf	floor@i+2,w
  9351  0F97  00B4               	movwf	?___ftadd+5
  9352  0F98  24E5               	fcall	___ftadd
  9353  0F99  082F               	movf	?___ftadd,w
  9354  0F9A  00BB               	movwf	?_floor
  9355  0F9B  0830               	movf	?___ftadd+1,w
  9356  0F9C  00BC               	movwf	?_floor+1
  9357  0F9D  0831               	movf	?___ftadd+2,w
  9358  0F9E  00BD               	movwf	?_floor+2
  9359  0F9F  0008               	return
  9360  0FA0                     i1l10179:	
  9361  0FA0  083E               	movf	floor@i,w
  9362  0FA1  00BB               	movwf	?_floor
  9363  0FA2  083F               	movf	floor@i+1,w
  9364  0FA3  00BC               	movwf	?_floor+1
  9365  0FA4  0840               	movf	floor@i+2,w
  9366  0FA5  00BD               	movwf	?_floor+2
  9367  0FA6  0008               	return
  9368  0FA7                     __end_of_floor:	
  9369  0FA7                     __ptext1224:	
  9370 ;; =============== function ___lltoft ends ============
  9371                           
  9372                           
  9373 ;; *************** function ___altoft *****************
  9374 ;; Defined at:
  9375 ;;		line 43 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\altoft.c"
  9376 ;; Parameters:    Size  Location     Type
  9377 ;;  c               4    9[BANK0 ] long 
  9378 ;; Auto vars:     Size  Location     Type
  9379 ;;  sign            1   13[COMMON] unsigned char 
  9380 ;;  exp             1   12[COMMON] unsigned char 
  9381 ;; Return value:  Size  Location     Type
  9382 ;;                  3    9[BANK0 ] float 
  9383 ;; Registers used:
  9384 ;;		wreg, status,2, status,0, pclath, cstack
  9385 ;; Tracked objects:
  9386 ;;		On entry : 160/0
  9387 ;;		On exit  : 160/0
  9388 ;;		Unchanged: FFE9F/0
  9389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9390 ;;      Params:         0       4       0       0       0
  9391 ;;      Locals:         2       0       0       0       0
  9392 ;;      Temps:          0       0       0       0       0
  9393 ;;      Totals:         2       4       0       0       0
  9394 ;;Total ram usage:        6 bytes
  9395 ;; Hardware stack levels used:    1
  9396 ;; Hardware stack levels required when called:    1
  9397 ;; This function calls:
  9398 ;;		___ftpack
  9399 ;; This function is called by:
  9400 ;;		_Calc_DistanceLevel
  9401 ;;		_floor
  9402 ;; This function uses a non-reentrant model
  9403 ;;
  9404  0FA7                     ___altoft:	
  9405                           
  9406 ;; hardware stack exceeded
  9407                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  9408  0FA7  01FD               	clrf	___altoft@sign
  9409  0FA8  308E               	movlw	142
  9410  0FA9  00FC               	movwf	___altoft@exp
  9411  0FAA  1FAC               	btfss	___altoft@c+3,7
  9412  0FAB  2FB9               	goto	i1l10139
  9413  0FAC  09A9               	comf	___altoft@c,f
  9414  0FAD  09AA               	comf	___altoft@c+1,f
  9415  0FAE  09AB               	comf	___altoft@c+2,f
  9416  0FAF  09AC               	comf	___altoft@c+3,f
  9417  0FB0  0AA9               	incf	___altoft@c,f
  9418  0FB1  1903               	skipnz
  9419  0FB2  0AAA               	incf	___altoft@c+1,f
  9420  0FB3  1903               	skipnz
  9421  0FB4  0AAB               	incf	___altoft@c+2,f
  9422  0FB5  1903               	skipnz
  9423  0FB6  0AAC               	incf	___altoft@c+3,f
  9424  0FB7  01FD               	clrf	___altoft@sign
  9425  0FB8  0AFD               	incf	___altoft@sign,f
  9426  0FB9                     i1l10139:	
  9427  0FB9  30FF               	movlw	255
  9428  0FBA  052C               	andwf	___altoft@c+3,w
  9429  0FBB  1903               	btfsc	3,2
  9430  0FBC  2FC4               	goto	i1l10141
  9431  0FBD  1003               	clrc
  9432  0FBE  0CAC               	rrf	___altoft@c+3,f
  9433  0FBF  0CAB               	rrf	___altoft@c+2,f
  9434  0FC0  0CAA               	rrf	___altoft@c+1,f
  9435  0FC1  0CA9               	rrf	___altoft@c,f
  9436  0FC2  0AFC               	incf	___altoft@exp,f
  9437  0FC3  2FB9               	goto	i1l10139
  9438  0FC4                     i1l10141:	
  9439  0FC4  0829               	movf	___altoft@c,w
  9440  0FC5  00F0               	movwf	?___ftpack
  9441  0FC6  082A               	movf	___altoft@c+1,w
  9442  0FC7  00F1               	movwf	?___ftpack+1
  9443  0FC8  082B               	movf	___altoft@c+2,w
  9444  0FC9  00F2               	movwf	?___ftpack+2
  9445  0FCA  087C               	movf	___altoft@exp,w
  9446  0FCB  00F3               	movwf	?___ftpack+3
  9447  0FCC  087D               	movf	___altoft@sign,w
  9448  0FCD  00F4               	movwf	?___ftpack+4
  9449  0FCE  2620               	fcall	___ftpack
  9450  0FCF  0870               	movf	?___ftpack,w
  9451  0FD0  00A9               	movwf	?___altoft
  9452  0FD1  0871               	movf	?___ftpack+1,w
  9453  0FD2  00AA               	movwf	?___altoft+1
  9454  0FD3  0872               	movf	?___ftpack+2,w
  9455  0FD4  00AB               	movwf	?___altoft+2
  9456  0FD5  0008               	return
  9457  0FD6                     __end_of___altoft:	
  9458  0FD6                     __ptext1239:	
  9459 ;; =============== function ___ftpack ends ============
  9460                           
  9461                           
  9462 ;; *************** function ___lwdiv *****************
  9463 ;; Defined at:
  9464 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\lwdiv.c"
  9465 ;; Parameters:    Size  Location     Type
  9466 ;;  divisor         2    0[COMMON] unsigned int 
  9467 ;;  dividend        2    2[COMMON] unsigned int 
  9468 ;; Auto vars:     Size  Location     Type
  9469 ;;  quotient        2    4[COMMON] unsigned int 
  9470 ;;  counter         1    6[COMMON] unsigned char 
  9471 ;; Return value:  Size  Location     Type
  9472 ;;                  2    0[COMMON] unsigned int 
  9473 ;; Registers used:
  9474 ;;		wreg, status,2, status,0
  9475 ;; Tracked objects:
  9476 ;;		On entry : 60/20
  9477 ;;		On exit  : 60/20
  9478 ;;		Unchanged: FFF9F/0
  9479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9480 ;;      Params:         4       0       0       0       0
  9481 ;;      Locals:         3       0       0       0       0
  9482 ;;      Temps:          0       0       0       0       0
  9483 ;;      Totals:         7       0       0       0       0
  9484 ;;Total ram usage:        7 bytes
  9485 ;; Hardware stack levels used:    1
  9486 ;; This function calls:
  9487 ;;		Nothing
  9488 ;; This function is called by:
  9489 ;;		_Calc_DistanceLevel
  9490 ;; This function uses a non-reentrant model
  9491 ;;
  9492  0FD6                     ___lwdiv:	
  9493                           
  9494 ;; hardware stack exceeded
  9495                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9496  0FD6  01F4               	clrf	___lwdiv@quotient
  9497  0FD7  01F5               	clrf	___lwdiv@quotient+1
  9498  0FD8  0871               	movf	___lwdiv@divisor+1,w
  9499  0FD9  0470               	iorwf	___lwdiv@divisor,w
  9500  0FDA  1903               	skipnz
  9501  0FDB  2FFB               	goto	i1l9823
  9502  0FDC  01F6               	clrf	___lwdiv@counter
  9503  0FDD                     L8:	
  9504  0FDD  0AF6               	incf	___lwdiv@counter,f
  9505  0FDE  1BF1               	btfsc	___lwdiv@divisor+1,7
  9506  0FDF  2FE4               	goto	i1l9811
  9507  0FE0  1003               	clrc
  9508  0FE1  0DF0               	rlf	___lwdiv@divisor,f
  9509  0FE2  0DF1               	rlf	___lwdiv@divisor+1,f
  9510  0FE3  2FDD               	goto	L8
  9511  0FE4                     i1l9811:	
  9512  0FE4  1003               	clrc
  9513  0FE5  0DF4               	rlf	___lwdiv@quotient,f
  9514  0FE6  0DF5               	rlf	___lwdiv@quotient+1,f
  9515  0FE7  0871               	movf	___lwdiv@divisor+1,w
  9516  0FE8  0273               	subwf	___lwdiv@dividend+1,w
  9517  0FE9  1D03               	skipz
  9518  0FEA  2FED               	goto	u302_25
  9519  0FEB  0870               	movf	___lwdiv@divisor,w
  9520  0FEC  0272               	subwf	___lwdiv@dividend,w
  9521  0FED                     u302_25:	
  9522  0FED  1C03               	skipc
  9523  0FEE  2FF7               	goto	L9
  9524  0FEF  0870               	movf	___lwdiv@divisor,w
  9525  0FF0  02F2               	subwf	___lwdiv@dividend,f
  9526  0FF1  0871               	movf	___lwdiv@divisor+1,w
  9527  0FF2  1C03               	skipc
  9528  0FF3  03F3               	decf	___lwdiv@dividend+1,f
  9529  0FF4  02F3               	subwf	___lwdiv@dividend+1,f
  9530  0FF5  1474               	bsf	___lwdiv@quotient,0
  9531  0FF6  1003               	clrc
  9532  0FF7                     L9:	
  9533  0FF7  0CF1               	rrf	___lwdiv@divisor+1,f
  9534  0FF8  0CF0               	rrf	___lwdiv@divisor,f
  9535  0FF9  0BF6               	decfsz	___lwdiv@counter,f
  9536  0FFA  2FE4               	goto	i1l9811
  9537  0FFB                     i1l9823:	
  9538  0FFB  0875               	movf	___lwdiv@quotient+1,w
  9539  0FFC  00F1               	movwf	?___lwdiv+1
  9540  0FFD  0874               	movf	___lwdiv@quotient,w
  9541  0FFE  00F0               	movwf	?___lwdiv
  9542  0FFF  0008               	return
  9543  1000                     __end_of___lwdiv:	
  9544                           
  9545                           	psect	text1227
  9546  1796                     __ptext1227:	
  9547 ;; =============== function ___ftmul ends ============
  9548                           
  9549                           
  9550 ;; *************** function ___ftdiv *****************
  9551 ;; Defined at:
  9552 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\ftdiv.c"
  9553 ;; Parameters:    Size  Location     Type
  9554 ;;  f2              3    8[COMMON] float 
  9555 ;;  f1              3   11[COMMON] float 
  9556 ;; Auto vars:     Size  Location     Type
  9557 ;;  f3              3    4[BANK0 ] float 
  9558 ;;  sign            1    8[BANK0 ] unsigned char 
  9559 ;;  exp             1    7[BANK0 ] unsigned char 
  9560 ;;  cntr            1    3[BANK0 ] unsigned char 
  9561 ;; Return value:  Size  Location     Type
  9562 ;;                  3    8[COMMON] float 
  9563 ;; Registers used:
  9564 ;;		wreg, status,2, status,0, pclath, cstack
  9565 ;; Tracked objects:
  9566 ;;		On entry : 60/0
  9567 ;;		On exit  : 60/0
  9568 ;;		Unchanged: FFF9F/0
  9569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9570 ;;      Params:         6       0       0       0       0
  9571 ;;      Locals:         0       6       0       0       0
  9572 ;;      Temps:          0       3       0       0       0
  9573 ;;      Totals:         6       9       0       0       0
  9574 ;;Total ram usage:       15 bytes
  9575 ;; Hardware stack levels used:    1
  9576 ;; Hardware stack levels required when called:    1
  9577 ;; This function calls:
  9578 ;;		___ftpack
  9579 ;; This function is called by:
  9580 ;;		_exp
  9581 ;; This function uses a non-reentrant model
  9582 ;;
  9583  1796                     ___ftdiv:	
  9584                           
  9585 ;; hardware stack exceeded
  9586                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  9587  1796  087B               	movf	___ftdiv@f1,w
  9588  1797  00A0               	movwf	??___ftdiv
  9589  1798  087C               	movf	___ftdiv@f1+1,w
  9590  1799  00A1               	movwf	??___ftdiv+1
  9591  179A  087D               	movf	___ftdiv@f1+2,w
  9592  179B  00A2               	movwf	??___ftdiv+2
  9593  179C  1003               	clrc
  9594  179D  0D21               	rlf	??___ftdiv+1,w
  9595  179E  0D22               	rlf	??___ftdiv+2,w
  9596  179F  00A7               	movwf	___ftdiv@exp
  9597  17A0  08A7               	movf	___ftdiv@exp,f
  9598  17A1  1D03               	skipz
  9599  17A2  2FA7               	goto	i1l9957
  9600  17A3  01F8               	clrf	?___ftdiv
  9601  17A4  01F9               	clrf	?___ftdiv+1
  9602  17A5  01FA               	clrf	?___ftdiv+2
  9603  17A6  0008               	return
  9604  17A7                     i1l9957:	
  9605  17A7  0878               	movf	___ftdiv@f2,w
  9606  17A8  00A0               	movwf	??___ftdiv
  9607  17A9  0879               	movf	___ftdiv@f2+1,w
  9608  17AA  00A1               	movwf	??___ftdiv+1
  9609  17AB  087A               	movf	___ftdiv@f2+2,w
  9610  17AC  00A2               	movwf	??___ftdiv+2
  9611  17AD  1003               	clrc
  9612  17AE  0D21               	rlf	??___ftdiv+1,w
  9613  17AF  0D22               	rlf	??___ftdiv+2,w
  9614  17B0  00A8               	movwf	___ftdiv@sign
  9615  17B1  08A8               	movf	___ftdiv@sign,f
  9616  17B2  1D03               	skipz
  9617  17B3  2FB8               	goto	i1l6214
  9618  17B4  01F8               	clrf	?___ftdiv
  9619  17B5  01F9               	clrf	?___ftdiv+1
  9620  17B6  01FA               	clrf	?___ftdiv+2
  9621  17B7  0008               	return
  9622  17B8                     i1l6214:	
  9623  17B8  01A4               	clrf	___ftdiv@f3
  9624  17B9  01A5               	clrf	___ftdiv@f3+1
  9625  17BA  01A6               	clrf	___ftdiv@f3+2
  9626  17BB  3089               	movlw	137
  9627  17BC  0728               	addwf	___ftdiv@sign,w
  9628  17BD  00A0               	movwf	??___ftdiv
  9629  17BE  02A7               	subwf	___ftdiv@exp,f
  9630  17BF  087D               	movf	___ftdiv@f1+2,w
  9631  17C0  00A8               	movwf	___ftdiv@sign
  9632  17C1  087A               	movf	___ftdiv@f2+2,w
  9633  17C2  06A8               	xorwf	___ftdiv@sign,f
  9634  17C3  3080               	movlw	128
  9635  17C4  05A8               	andwf	___ftdiv@sign,f
  9636  17C5  17FC               	bsf	___ftdiv@f1+1,7
  9637  17C6  01FD               	clrf	___ftdiv@f1+2
  9638  17C7  17F9               	bsf	___ftdiv@f2+1,7
  9639  17C8  01FA               	clrf	___ftdiv@f2+2
  9640  17C9  3018               	movlw	24
  9641  17CA  00A3               	movwf	___ftdiv@cntr
  9642  17CB                     i1l9981:	
  9643  17CB  1003               	clrc
  9644  17CC  0DA4               	rlf	___ftdiv@f3,f
  9645  17CD  0DA5               	rlf	___ftdiv@f3+1,f
  9646  17CE  0DA6               	rlf	___ftdiv@f3+2,f
  9647  17CF  087A               	movf	___ftdiv@f2+2,w
  9648  17D0  027D               	subwf	___ftdiv@f1+2,w
  9649  17D1  1D03               	skipz
  9650  17D2  2FD9               	goto	u336_25
  9651  17D3  0879               	movf	___ftdiv@f2+1,w
  9652  17D4  027C               	subwf	___ftdiv@f1+1,w
  9653  17D5  1D03               	skipz
  9654  17D6  2FD9               	goto	u336_25
  9655  17D7  0878               	movf	___ftdiv@f2,w
  9656  17D8  027B               	subwf	___ftdiv@f1,w
  9657  17D9                     u336_25:	
  9658  17D9  1C03               	skipc
  9659  17DA  2FE7               	goto	L5
  9660  17DB  0878               	movf	___ftdiv@f2,w
  9661  17DC  02FB               	subwf	___ftdiv@f1,f
  9662  17DD  0879               	movf	___ftdiv@f2+1,w
  9663  17DE  1C03               	skipc
  9664  17DF  0F79               	incfsz	___ftdiv@f2+1,w
  9665  17E0  02FC               	subwf	___ftdiv@f1+1,f
  9666  17E1  087A               	movf	___ftdiv@f2+2,w
  9667  17E2  1C03               	skipc
  9668  17E3  0A7A               	incf	___ftdiv@f2+2,w
  9669  17E4  02FD               	subwf	___ftdiv@f1+2,f
  9670  17E5  1424               	bsf	___ftdiv@f3,0
  9671  17E6  1003               	clrc
  9672  17E7                     L5:	
  9673  17E7  0DFB               	rlf	___ftdiv@f1,f
  9674  17E8  0DFC               	rlf	___ftdiv@f1+1,f
  9675  17E9  0DFD               	rlf	___ftdiv@f1+2,f
  9676  17EA  0BA3               	decfsz	___ftdiv@cntr,f
  9677  17EB  2FCB               	goto	i1l9981
  9678  17EC  0824               	movf	___ftdiv@f3,w
  9679  17ED  00F0               	movwf	?___ftpack
  9680  17EE  0825               	movf	___ftdiv@f3+1,w
  9681  17EF  00F1               	movwf	?___ftpack+1
  9682  17F0  0826               	movf	___ftdiv@f3+2,w
  9683  17F1  00F2               	movwf	?___ftpack+2
  9684  17F2  0827               	movf	___ftdiv@exp,w
  9685  17F3  00F3               	movwf	?___ftpack+3
  9686  17F4  0828               	movf	___ftdiv@sign,w
  9687  17F5  00F4               	movwf	?___ftpack+4
  9688  17F6  120A  158A  2620   	fcall	___ftpack
  9689  17F9  0870               	movf	?___ftpack,w
  9690  17FA  00F8               	movwf	?___ftdiv
  9691  17FB  0871               	movf	?___ftpack+1,w
  9692  17FC  00F9               	movwf	?___ftdiv+1
  9693  17FD  0872               	movf	?___ftpack+2,w
  9694  17FE  00FA               	movwf	?___ftdiv+2
  9695  17FF  0008               	return
  9696  1800                     __end_of___ftdiv:	
  9697                           
  9698                           	psect	text1230
  9699  0788                     __ptext1230:	
  9700 ;; =============== function _atol ends ============
  9701                           
  9702                           
  9703 ;; *************** function _atoi *****************
  9704 ;; Defined at:
  9705 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\atoi.c"
  9706 ;; Parameters:    Size  Location     Type
  9707 ;;  s               1    wreg     PTR const unsigned char 
  9708 ;;		 -> arr_rcv_len(3), Get_GpsDataLen@len_arr(3), 
  9709 ;; Auto vars:     Size  Location     Type
  9710 ;;  s               1   13[COMMON] PTR const unsigned char 
  9711 ;;		 -> arr_rcv_len(3), Get_GpsDataLen@len_arr(3), 
  9712 ;;  a               2   11[COMMON] int 
  9713 ;;  sign            1   10[COMMON] unsigned char 
  9714 ;; Return value:  Size  Location     Type
  9715 ;;                  2    6[COMMON] int 
  9716 ;; Registers used:
  9717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9718 ;; Tracked objects:
  9719 ;;		On entry : 160/100
  9720 ;;		On exit  : 160/100
  9721 ;;		Unchanged: FFE9F/0
  9722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9723 ;;      Params:         2       0       0       0       0
  9724 ;;      Locals:         4       0       0       0       0
  9725 ;;      Temps:          2       0       0       0       0
  9726 ;;      Totals:         8       0       0       0       0
  9727 ;;Total ram usage:        8 bytes
  9728 ;; Hardware stack levels used:    1
  9729 ;; Hardware stack levels required when called:    1
  9730 ;; This function calls:
  9731 ;;		___wmul
  9732 ;;		_isdigit
  9733 ;; This function is called by:
  9734 ;;		_Pos_meet
  9735 ;; This function uses a non-reentrant model
  9736 ;;
  9737  0788                     _atoi:	
  9738                           
  9739                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9740                           ;atoi@s stored from wreg
  9741  0788  00FD               	movwf	atoi@s
  9742  0789                     i1l9269:	
  9743  0789  087D               	movf	atoi@s,w
  9744  078A  0084               	movwf	4
  9745  078B  0800               	movf	0,w
  9746  078C  3A20               	xorlw	32
  9747  078D  1D03               	btfss	3,2
  9748  078E  2F91               	goto	i1l9271
  9749  078F                     i1l9267:	
  9750  078F  0AFD               	incf	atoi@s,f
  9751  0790  2F89               	goto	i1l9269
  9752  0791                     i1l9271:	
  9753  0791  087D               	movf	atoi@s,w
  9754  0792  0084               	movwf	4
  9755  0793  0800               	movf	0,w
  9756  0794  3A09               	xorlw	9
  9757  0795  1903               	skipnz
  9758  0796  2F8F               	goto	i1l9267
  9759  0797  01FB               	clrf	atoi@a
  9760  0798  01FC               	clrf	atoi@a+1
  9761  0799  01FA               	clrf	atoi@sign
  9762  079A  087D               	movf	atoi@s,w
  9763  079B  0084               	movwf	4
  9764  079C  0800               	movf	0,w
  9765  079D  3A2D               	xorlw	45
  9766  079E  1D03               	skipz
  9767  079F  2FA2               	goto	i1l9279
  9768  07A0  0AFA               	incf	atoi@sign,f
  9769  07A1  2FCE               	goto	i1l9281
  9770  07A2                     i1l9279:	
  9771  07A2  087D               	movf	atoi@s,w
  9772  07A3  0084               	movwf	4
  9773  07A4  0800               	movf	0,w
  9774  07A5  3A2B               	xorlw	43
  9775  07A6  1903               	btfsc	3,2
  9776  07A7  2FCE               	goto	i1l9281
  9777  07A8                     i1l9287:	
  9778  07A8  087D               	movf	atoi@s,w
  9779  07A9  0084               	movwf	4
  9780  07AA  0800               	movf	0,w
  9781  07AB  120A  118A  2291   	fcall	_isdigit
      +       120A  118A         
  9782  07B0  1C03               	btfss	3,0
  9783  07B1  2FD0               	goto	i1l9289
  9784  07B2  087D               	movf	atoi@s,w
  9785  07B3  0084               	movwf	4
  9786  07B4  087C               	movf	atoi@a+1,w
  9787  07B5  00F1               	movwf	?___wmul+1
  9788  07B6  087B               	movf	atoi@a,w
  9789  07B7  00F0               	movwf	?___wmul
  9790  07B8  300A               	movlw	10
  9791  07B9  00F2               	movwf	?___wmul+2
  9792  07BA  01F3               	clrf	?___wmul+3
  9793  07BB  27E4  120A  118A   	fcall	___wmul
  9794  07BE  0800               	movf	0,w
  9795  07BF  0770               	addwf	?___wmul,w
  9796  07C0  00F8               	movwf	??_atoi
  9797  07C1  3000               	movlw	0
  9798  07C2  1803               	skipnc
  9799  07C3  3001               	movlw	1
  9800  07C4  0771               	addwf	?___wmul+1,w
  9801  07C5  00F9               	movwf	??_atoi+1
  9802  07C6  0878               	movf	??_atoi,w
  9803  07C7  3ED0               	addlw	208
  9804  07C8  00FB               	movwf	atoi@a
  9805  07C9  0879               	movf	??_atoi+1,w
  9806  07CA  1803               	skipnc
  9807  07CB  3E01               	addlw	1
  9808  07CC  3EFF               	addlw	255
  9809  07CD  00FC               	movwf	atoi@a+1
  9810  07CE                     i1l9281:	
  9811  07CE  0AFD               	incf	atoi@s,f
  9812  07CF  2FA8               	goto	i1l9287
  9813  07D0                     i1l9289:	
  9814  07D0  087A               	movf	atoi@sign,w
  9815  07D1  1903               	btfsc	3,2
  9816  07D2  2FDF               	goto	i1l9295
  9817  07D3  097B               	comf	atoi@a,w
  9818  07D4  00F8               	movwf	??_atoi
  9819  07D5  097C               	comf	atoi@a+1,w
  9820  07D6  00F9               	movwf	??_atoi+1
  9821  07D7  0AF8               	incf	??_atoi,f
  9822  07D8  1903               	skipnz
  9823  07D9  0AF9               	incf	??_atoi+1,f
  9824  07DA  0878               	movf	??_atoi,w
  9825  07DB  00F6               	movwf	?_atoi
  9826  07DC  0879               	movf	??_atoi+1,w
  9827  07DD  00F7               	movwf	?_atoi+1
  9828  07DE  0008               	return
  9829  07DF                     i1l9295:	
  9830  07DF  087C               	movf	atoi@a+1,w
  9831  07E0  00F7               	movwf	?_atoi+1
  9832  07E1  087B               	movf	atoi@a,w
  9833  07E2  00F6               	movwf	?_atoi
  9834  07E3  0008               	return
  9835  07E4                     __end_of_atoi:	
  9836  07E4                     __ptext1240:	
  9837 ;; =============== function ___lwdiv ends ============
  9838                           
  9839                           
  9840 ;; *************** function ___wmul *****************
  9841 ;; Defined at:
  9842 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\wmul.c"
  9843 ;; Parameters:    Size  Location     Type
  9844 ;;  multiplier      2    0[COMMON] unsigned int 
  9845 ;;  multiplicand    2    2[COMMON] unsigned int 
  9846 ;; Auto vars:     Size  Location     Type
  9847 ;;  product         2    4[COMMON] unsigned int 
  9848 ;; Return value:  Size  Location     Type
  9849 ;;                  2    0[COMMON] unsigned int 
  9850 ;; Registers used:
  9851 ;;		wreg, status,2, status,0
  9852 ;; Tracked objects:
  9853 ;;		On entry : 160/100
  9854 ;;		On exit  : 160/100
  9855 ;;		Unchanged: FFE9F/0
  9856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9857 ;;      Params:         4       0       0       0       0
  9858 ;;      Locals:         2       0       0       0       0
  9859 ;;      Temps:          0       0       0       0       0
  9860 ;;      Totals:         6       0       0       0       0
  9861 ;;Total ram usage:        6 bytes
  9862 ;; Hardware stack levels used:    1
  9863 ;; This function calls:
  9864 ;;		Nothing
  9865 ;; This function is called by:
  9866 ;;		_atoi
  9867 ;; This function uses a non-reentrant model
  9868 ;;
  9869  07E4                     ___wmul:	
  9870                           
  9871                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9872  07E4  01F4               	clrf	___wmul@product
  9873  07E5  01F5               	clrf	___wmul@product+1
  9874  07E6                     i1l9787:	
  9875  07E6  1C70               	btfss	___wmul@multiplier,0
  9876  07E7  2FEE               	goto	i1l9791
  9877  07E8  0872               	movf	___wmul@multiplicand,w
  9878  07E9  07F4               	addwf	___wmul@product,f
  9879  07EA  1803               	skipnc
  9880  07EB  0AF5               	incf	___wmul@product+1,f
  9881  07EC  0873               	movf	___wmul@multiplicand+1,w
  9882  07ED  07F5               	addwf	___wmul@product+1,f
  9883  07EE                     i1l9791:	
  9884  07EE  1003               	clrc
  9885  07EF  0DF2               	rlf	___wmul@multiplicand,f
  9886  07F0  0DF3               	rlf	___wmul@multiplicand+1,f
  9887  07F1  1003               	clrc
  9888  07F2  0CF1               	rrf	___wmul@multiplier+1,f
  9889  07F3  0CF0               	rrf	___wmul@multiplier,f
  9890  07F4  0871               	movf	___wmul@multiplier+1,w
  9891  07F5  0470               	iorwf	___wmul@multiplier,w
  9892  07F6  1D03               	skipz
  9893  07F7  2FE6               	goto	i1l9787
  9894  07F8  0875               	movf	___wmul@product+1,w
  9895  07F9  00F1               	movwf	?___wmul+1
  9896  07FA  0874               	movf	___wmul@product,w
  9897  07FB  00F0               	movwf	?___wmul
  9898  07FC  0008               	return
  9899  07FD                     __end_of___wmul:	
  9900                           
  9901                           	psect	text1245
  9902  0000                     __ptext1245:	
  9903 ;; =============== function _Register_SendData ends ============
  9904                           
  9905  007E                     btemp	set	126	;btemp
  9906  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.80 build 6738 
Symbol Table                                                                                   Tue Jan 30 15:08:37 2018

                 ___altoft@exp 007C              ??_Interrupt_Gross 01D9                              pc 0002  
                ___altoft@sign 007D                             fsr 0004            ___wmul@multiplicand 0072  
  __size_of_Digitron_Send_8bit 001B                   ___ftadd@exp1 003A                   ___ftadd@exp2 0039  
                 ___ftadd@sign 0038                            _GIE 005F                            _RC2 003A  
                          _RC3 003B                            _RE0 0048                            _RE1 0049  
                          _RE2 004A                            _RX9 00C6                            _TX9 04C6  
                   i1_delay_us 03E5                            _exp 0AD2                            _log 0A0D  
                          _pos 00EA                            _pow 08C8                            fsr0 0004  
                          indf 0000        __end_of_queueArray_init 061E                   ___ftdiv@cntr 0023  
               ?_queueArray_in 0070                   ___ftdiv@sign 0028                           l1145 0000  
                         l1155 0000                           l2320 0739                           l2312 06F2  
                         l2330 0784                           l4100 0000                           l2332 0783  
                         l2324 074C                           l2316 0713                           l2335 0787  
                         l2328 0770                           l1730 0000                           l4106 0000  
                         l1733 0000                           l1726 067F                           l1728 0685  
                         l1729 0688                           l2902 0000                           l2908 0000  
                         l3487 0000                           l2896 0000                           l9001 0000  
                         l6098 0000                           l6506 05D3                           l2899 0529  
                         l9011 0000                           ?_exp 0055                           l9013 0000  
                         l9005 0000                           l9101 0000                           ?_log 0050  
                         l9015 0000                           l9007 0000                           l9111 0000  
                         l9103 0000                           l9025 0000                           l9017 0000  
                         l9009 0000                           l9201 0000                           l9121 06F3  
                         l9113 0000                           l9105 0000                           l9027 0000  
                         l9211 0000                           l9115 0000                           l9107 0000  
                         l9221 050D                           l9205 04DE                           l9141 0000  
                         l9133 073A                           l9125 0714                           l9117 0000  
                         l9109 0000                           l9151 0000                           l9223 0000  
                         l9215 0000                           l9311 0000                           l9207 04C2  
                         l9143 0000                           l9127 0000                           l9081 0000  
                         l9153 0000                           l9161 0000                           l9233 0538  
                         l9225 0000                           l9209 04E0                           l9137 074D  
                         l9129 0000                           l5939 0000                           l9091 06B2  
                         l9155 0000                           l9171 04E8                           l9219 0000  
                         l9307 055B                           l9147 0771                           l9139 0000  
                         l9093 0000                           l9085 06B0                           l9157 0000  
                         l9165 0000                           l9181 0000                           l9173 0000  
                         l9237 0000                           l9079 0000                           l9159 0000  
                         l9167 0000                           l9183 0000                           l9239 056D  
                         l9095 0000                           l9169 0000                           l9193 04CC  
                         l9097 0000                           l9179 04FC                           l9195 04D0  
                         l9187 0000                           l9099 0000                           l9197 0000  
                         l9189 0000                           l9299 0000                           l8941 0000  
                         ?_pow 00A0                           l8961 0000                           l8953 0605  
                         l9761 05BB                           l8937 0000                           l8955 0000  
                         l8947 0604                           l8939 0000                           l9755 0000  
                         l8971 0624                           l8963 0000                           l8957 0000  
                         l9765 05CC                           l9773 0000                           l8981 0000  
                         l8965 0000                           l9767 059C                           l8991 0000  
                         l8983 0000                           l8975 062F                           STR_1 00E5  
                         STR_2 00EA                           l9769 05CF                           l8977 0631  
                         STR_3 00DE                           STR_4 00EA                           l9779 05DC  
                         l8995 0659                           l8979 0000                           STR_5 00AE  
                         STR_6 00EA                           l8997 0000                           l8989 0643  
                         STR_7 00D5                           STR_8 00EA                           l8999 0000  
                         STR_9 00BC                           _CODE 0027                           _BRGH 04C2  
                         _T0IE 005D                           _T0IF 005A                           _CREN 00C4  
                         _FERR 00C2                           _CSRC 04C7                           u2195 04F5  
                         _PEIE 005E                           _RCIE 0465                           _RCIF 0065  
                         _OERR 00C1                           _RX9D 00C0                           _TMR0 0001  
                         _SPEN 00C7                           _TX9D 04C0                           _SREN 00C5  
        __end_of_Uart_1SendStr 0524                           _TRMT 04C1                           _TXEN 04C5  
                         _SYNC 04C4                           _atoi 0788                           _atol 021E  
                         _main 06B7             _Calc_DistanceLevel 080A                   ___ftpack@arg 0070  
                 ___ftpack@exp 0073                           btemp 007E                           _sqrt 0BC4  
                         exp@x 0055                           log@x 0050                           pow@x 00A0  
                         pow@y 00A3                           start 0014       __size_of_Digitron_Update 0042  
                 ___ftmul@cntr 002D                   ___ftmul@sign 002E            ?_Calc_DistanceLevel 0070  
                ??_Init_Timer0 01D9                   ___fttol@exp1 0028                          ??_exp 007E  
                 ___fttol@lval 0024                          ??_log 007E                          ??_pow 007E  
           i1_Digitron_Command 03D8             i1_Digitron_Display 036C                          ?_atoi 0076  
                        ?_atol 0020                          _ADDEN 00C3                          ?_main 0070  
              __end_of___ftadd 0DA5                          STR_10 00EA                          STR_11 006A  
                        STR_12 00EA                          STR_13 00CA                          STR_14 0088  
                        STR_15 00EA                          STR_16 009E                          STR_17 00EA  
              __end_of___ftdiv 1800                __end_of___ftneg 0EA8                          ?_sqrt 005E  
              __end_of___ftmul 0E20                __end_of___ftsub 0EA0                __end_of___fttol 09EF  
              __end_of___lwdiv 1000                          i1l561 0482                          i1l562 0484  
                        i1l563 048B                          i1l564 0000                          _RCREG 001A  
        __end_of_SerialService 0179                          _SPBRG 0099                          _PORTA 0005  
                        _PORTD 0008                          _TRISA 0085                          _TRISB 0086  
                        _TRISC 0087                          _TRISD 0088                          _TRISE 0089  
         Uart_1SendStr@data_at 01DA                          _TXREG 0019       i1Digitron_Command@device 0074  
          ___lmul@multiplicand 0074                          _Match 052D                   ___lltoft@exp 007C  
          ?i1_Digitron_Command 0073            ?i1_Digitron_Display 0070           ??_Calc_DistanceLevel 007E  
                ___awtoft@sign 007B                          _floor 0F37                          _ldexp 0EC3  
                        _frexp 0A96                    i1delay_us@i 0071                    i1delay_us@j 0072  
              __end_of_isdigit 029F                    _CleanGpsRcv 048F                  ___ftpack@sign 0074  
                        atoi@a 007B                          atol@a 0029                          atol@c 002E  
                        atoi@s 007D                          atol@s 002D                          pclath 000A  
                   _LatiRcvCnt 00E5                          pow@yi 00AA                          sqrt@i 0067  
                        sqrt@q 0068                          sqrt@x 006B                          sqrt@y 005E  
                        sqrt@z 0064                          status 0003             Distance_Update@dat 00BA  
                        wtemp0 007E                 _Init_Digitrons 05E3                __end_of_strncmp 05D2  
             __end_of_DelaySec 04F8        i1Digitron_Send_8bit@dat 0070           ??i1_Digitron_Command 0074  
                ??_Send_ATComm 01EB           ??i1_Digitron_Display 0075                    ldexp@newexp 003E  
   __size_of_UART_1SendOneByte 0009       __end_of_Digitron_Command 06A9       __end_of_Digitron_Display 067D  
        i1Digitron_Command@com 0073                   __end_of_atoi 07E4                   __end_of_atol 0291  
                 __end_of_main 0788                   __end_of_sqrt 0C87          i1Digitron_Display@fro 007A  
        i1Digitron_Display@num 0079          i1Digitron_Display@que 0078                         ??_atoi 0078  
                       ??_atol 0024                         ??_main 01ED                  ___fttol@sign1 0023  
             SerialService@tmp 006E            __end_of_Init_Timer0 1756                         ??_sqrt 0061  
                  ?i1_delay_us 0070           Pos_meet@arr_rcv_lati 00CA               __end_of_Pos_meet 021E  
             ?_queueArray_init 0070                         ?_Match 0070                ??_queueArray_in 0071  
                       ?_floor 003B                         ?_ldexp 003B                         ?_frexp 0070  
             __end_of___altoft 0FD6               __end_of___awtoft 0EC3               __end_of___ftpack 0E5E  
        __size_of_CleanWifiRcv 0012               __end_of___lltoft 0A0D         __end_of_Init_Digitrons 05F9  
                       i1l1162 02F6                         i1l1155 0000                         i1l1163 0300  
                       i1l1730 0000                         i1l1733 0000                         i1l1726 03C9  
                       i1l1728 03CD                         i1l1729 03CE                         i1l6202 0000  
                       i1l6214 17B8                  CleanWifiRcv@i 01D9                         i1l6063 0000  
                       i1l6127 0000                         i1l6207 0000                         i1l4704 015B  
                       i1l6137 0000                         i1l6241 09CE                         i1l6049 0221  
                       i1l4722 016B                         i1l5363 0000                         i1l6261 0000  
                       i1l5366 0000                         i1l6185 0D61                         i1l6356 0000  
                       i1l6364 0000                         i1l6199 02A3                         i1l6288 0000  
                       i1l6563 0000                         i1l9043 02EC                         i1l9035 02D4  
                       i1l9061 0000                         i1l9053 0316                         u302_25 0FED  
                       i1l9045 0309                         i1l9037 0000                         i1l9029 0000  
                       i1l6478 0000                         i1l9071 0356                         i1l9063 0000  
                       i1l9055 0000                         i1l9047 0000                         i1l9039 0000  
                       i1l9073 035E                         i1l9065 033D                         i1l9057 0000  
                       i1l9411 0000                         i1l9403 01A2                         i1l9323 0000  
                       i1l9077 0368                         i1l9501 0000                         i1l9413 01BD  
                       i1l9405 0000                         i1l9325 0000                         i1l9317 0000  
                       i1l9271 0791                         i1l9511 0000                         i1l9503 0000  
                       i1l9431 0000                         i1l9407 0000                         i1l9351 0123  
                       i1l9343 0113                         i1l9335 0000                         i1l9327 0000  
                       i1l9281 07CE                         i1l9265 0000                         i1l9601 0000  
                       i1l9521 0000                         i1l9513 0000                         i1l9505 0000  
                       i1l9433 01DD                         i1l9409 01B8                         i1l9361 0000  
                       i1l9353 0000                         i1l9345 0000                         i1l9329 0000  
                       i1l9291 0000                         i1l9275 0000                         i1l9267 078F  
                       i1l9451 0000                         i1l9611 08DC                         i1l9603 0000  
                       i1l9531 0000                         i1l9523 0450                         i1l9515 0000  
                       i1l9507 0425                         i1l9435 0000                         i1l9427 01C7  
                       i1l9419 01BE                         i1l9363 0000                         i1l9355 012D  
                       i1l9347 011A                         i1l9371 014A                         i1l9541 048F  
                       i1l9269 0789                         i1l9453 0000                         i1l9701 0000  
                       i1l9533 0000                         i1l9525 0000                         i1l9517 0000  
                       i1l9509 0000                         i1l9445 021D                         i1l9437 01E2  
                       i1l9429 0000                         i1l9381 0000                         i1l9357 0000  
                       i1l9349 0000                         i1l9551 0000                         i1l9295 07DF  
                       i1l9287 07A8                         i1l9279 07A2                         i1l9463 026F  
                       i1l9703 0000                         i1l9631 0935                         i1l9607 0000  
                       i1l9535 0000                         i1l9527 0000                         i1l9519 0000  
                       i1l9439 021A                         i1l9383 0000                         i1l9375 0000  
                       i1l9367 0000                         i1l9359 0136                         i1l9561 0000  
                       i1l9801 0000                         i1l9289 07D0                         i1l9481 0275  
                       i1l9465 0000                         i1l9457 0000                         i1l9449 0000  
                       i1l9641 0000                         i1l9713 0ADD                         i1l9633 0000  
                       i1l9625 0922                         i1l9617 08E7                         i1l9537 0000  
                       i1l9529 0000                         i1l9385 018F                         i1l9377 0000  
                       i1l8931 0000                         i1l9571 04A6                         i1l9563 0000  
                       i1l9547 0491                         i1l9811 0FE4                         i1l9803 0000  
                       i1l9483 0000                         i1l9467 0239                         i1l9459 0000  
                       i1l9651 0000                         i1l9731 0000                         i1l9723 0AF4  
                       i1l9707 0000                         i1l9635 0000                         i1l9627 0000  
                       i1l9491 0000                         i1l9395 019A                         i1l9387 0000  
                       i1l8933 0000                         i1l9573 0000                         i1l9549 0000  
                       i1l9821 0000                         i1l9813 0000                         i1l9901 0D93  
                       i1l9661 0000                         i1l9653 0000                         i1l9645 0000  
                       i1l9741 0000                         i1l9733 0000                         i1l9637 0000  
                       i1l9629 0000                         i1l9493 0000                         i1l9389 0199  
                       i1l8935 0479                         i1l8927 0478                         i1l9583 04B0  
                       i1l9575 0000                         i1l9559 049C                         i1l9823 0FFB  
                       i1l9487 0288                         i1l9479 023D                         i1l9831 0000  
                       i1l9663 0000                         i1l9655 0000                         i1l9751 0BAF  
                       i1l9743 0000                         i1l9735 0B2B                         i1l9591 0000  
                       i1l9495 0403                         i1l9585 0000                         i1l9681 029D  
                       i1l9673 0000                         i1l9817 0000                         i1l9921 0E45  
                       i1l9913 0E2C                         i1l9905 0000                         i1l9841 0000  
                       i1l9665 0000                         i1l9657 0C09                         i1l9745 0000  
                       i1l9737 0000                         i1l9729 0B09                         i1l9593 0000  
                       i1l9497 0000                         i1l9587 0000                         i1l9675 0000  
                       i1l9931 0000                         i1l9923 0E4A                         i1l9915 0E31  
                       i1l9907 0000                         i1l9835 0D08                         i1l9827 0000  
                       i1l9667 0000                         i1l9659 0000                         i1l9691 0A1F  
                       i1l9739 0000                         i1l9595 0000                         i1l9499 0000  
                       i1l9917 0E36                         i1l9909 0E28                         i1l9933 0000  
                       i1l9853 0000                         i1l9845 0D1E                         i1l9829 0000  
                       i1l9669 0000                         i1l9685 0000                         i1l9597 0000  
                       i1l9791 07EE                         i1l9927 0000                         i1l9919 0E40  
                       i1l9871 0000                         i1l9863 0D3B                         i1l9855 0000  
                       i1l9847 0000                         i1l9839 0D0F                         i1l9951 0000  
                       i1l9793 0000                         i1l9785 0000                         i1l9929 0000  
                       i1l9937 02B9                         i1l9881 0000                         i1l9865 0D40  
                       i1l9857 0D2C                         i1l9945 0000                         i1l9697 0A28  
                       i1l9795 0000                         i1l9787 07E6                         i1l9939 0000  
                       i1l9891 0000                         i1l9883 0D6C                         i1l9875 0D58  
                       i1l9859 0000                         i1l9867 0D45                         i1l9971 0000  
                       i1l9963 0000                         i1l9947 0000                         i1l9699 0000  
                       i1l9893 0000                         i1l9877 0D5D                         i1l9869 0D49  
                       i1l9981 17CB                         i1l9973 0000                         i1l9965 0000  
                       i1l9957 17A7                         i1l9887 0000                         i1l9991 0000  
                       i1l9975 0000                         i1l9967 0000                         i1l9897 0000  
                       i1l9889 0D77                         i1l9985 0000                         i1l9977 0000  
                       i1l9969 0000                         i1l9899 0000                         i1l9979 0000  
                       i1l9995 0000                         i1l9989 0000                         u270_25 0461  
                       u336_25 17D9                         u266_20 040F                         u266_25 040C  
                       u347_20 0000                         u267_20 0431                         u347_25 09A7  
                       u267_25 042E                         u292_25 0BA9                         u268_25 0435  
                       u269_20 045D                         u269_25 045A                         u278_25 091C  
                       u369_25 0EEE                         _OPTION 0081                         Match@a 01E7  
             __end_of_delay_us 06B7   __end_ofi1_Digitron_Send_8bit 03D8                         ___ftge 0E5E  
                       ___lmul 029F                         ___wmul 07E4                      ??___ftadd 0035  
                    ??___ftdiv 0020                      ??___ftneg 0073               __end_of_initUART 1776  
                    ??___ftmul 0026                      ??___ftsub 007E                      ??___fttol 0020  
                    ??___lwdiv 0074                     _WifiRcvCnt 006F              ??_Digitron_Update 007D  
          __end_of_Send_ATComm 04E2                _Distance_Update 03F1                         _strchr 05D2  
                       clrloop 0803                         _strlen 0569                         _strstr 053A  
                       floor@i 003E                         floor@x 003B                         exp@exp 005B  
        ___ftmul@f3_as_product 002A                         log@exp 0053                      ??_isdigit 0070  
                 _CleanWifiRcv 04F8                         saved_w 007E                 Pos_meet@i_2817 00D9  
               Pos_meet@j_2818 00DA            Distance_Update@mask 00BC                      ??_strncmp 01E2  
              ?_Init_Digitrons 0070                _Interrupt_Gross 1756                     ___altoft@c 0029  
                   ___ftadd@f1 002F                     ___ftadd@f2 0032                     ___ftge@ff1 0070  
                   ___ftge@ff2 0073                   eval_poly@res 004D                     ___ftdiv@f1 007B  
                   ___ftdiv@f2 0078                     ___ftdiv@f3 0024                     ___ftneg@f1 0070  
                   ___awtoft@c 0078            __size_ofi1_delay_us 000C                     ___ftmul@f1 0020  
                   ___ftmul@f2 0023                     ___ftsub@f1 003E                     ___ftsub@f2 003B  
                __end_of_Match 053A                     ___fttol@f1 0078                 __pcstackCOMMON 0070  
        Digitron_Send_8bit@dat 01D9                   __pidataBANK1 0000                    _Init_Timer0 174F  
                   ___lltoft@c 0078                  __end_of_floor 0FA7                  __end_of_ldexp 0F37  
                __end_of_frexp 0AD2          i1Digitron_Send_8bit@i 0071            i1Digitron_Display@i 007C  
          i1Digitron_Display@j 007B                      ?_DelaySec 0070                        ??_Match 01E7  
                      ??_floor 007E                        ??_ldexp 0040                        ??_frexp 0074  
                   __pbssBANK0 006F                     __pbssBANK1 00DF                     __pbssBANK2 0110  
                   __pbssBANK3 0190             __size_of_eval_poly 005E          Pos_meet@arr_rcv_longi 00D0  
                  _Send_ATComm 04C0                    _LongiRcvCnt 00E7                     __pmaintext 06B7  
      __end_of_Distance_Update 0478                      ?_Pos_meet 0070                        ?___ftge 0070  
                      ?___lmul 0070                        ?___wmul 0070     __end_of_Digitron_Send_8bit 0698  
                   __pintentry 0004                      ?___altoft 0029                     __ptext1200 04F8  
                   __ptext1201 04E2                     __ptext1210 03F1                     __ptext1202 1756  
                   __ptext1211 080A                     __ptext1203 174F                     __ptext1220 0E8A  
                   __ptext1212 08C8                     __ptext1204 175D                     __ptext1221 03D8  
                   __ptext1213 0AD2                     __ptext1205 06A9                     __ptext1230 0788  
                   __ptext1222 0EC3                     __ptext1214 0A0D                     __ptext1206 067D  
                   __ptext1231 03E5                     __ptext1223 09EF                     __ptext1215 0BC4  
                   __ptext1207 05F9                     __ptext1240 07E4                     __ptext1232 03C7  
                   __ptext1224 0FA7                     __ptext1216 02D2                     __ptext1208 00ED  
                   __ptext1241 0291                     __ptext1233 0A96                     __ptext1225 0EA8  
                   __ptext1217 036C                     __ptext1209 0179                     __ptext1242 048F  
                   __ptext1234 0E5E                     __ptext1226 0DA5                     __ptext1218 0C87  
                   __ptext1243 0314                     __ptext1235 0EA0                     __ptext1227 1796  
                   __ptext1219 0F37                     __ptext1244 0478                     __ptext1236 098D  
                   __ptext1228 0CE5                     __ptext1245 0000                     __ptext1237 029F  
                   __ptext1229 021E                     __ptext1238 0E20                     __ptext1190 05E3  
                   __ptext1239 0FD6                     __ptext1191 052D                     __ptext1192 061E  
                   __ptext1193 053A                     __ptext1194 050A                     __ptext1195 0698  
                   __ptext1196 05D2                     __ptext1197 059B                     __ptext1189 04C0  
                   __ptext1198 0569                     __ptext1199 0524                 ___lmul@product 0078  
                    ?___awtoft 0078                      ?___ftpack 0070                      ?___lltoft 0078  
                      ?_strchr 01D9                        ?_strlen 01D9                        ?_strstr 01E5  
                      i1l10001 0DB6                        i1l10011 0000                        i1l10101 0000  
                      i1l10021 0000                        i1l10013 0000                        i1l10031 0000  
                      i1l10023 0000                        i1l10015 0000                        i1l10007 0DC7  
                      i1l10121 0000                        i1l10113 0E6D                        i1l10041 0E04  
                      i1l10033 0000                        i1l10025 0DD8                        i1l10017 0000  
                      i1l10009 0000                        i1l10201 0000                        i1l10051 0000  
                      i1l10043 0000                        i1l10035 0000                        i1l10019 0000  
                      i1l10131 0000                        i1l10061 0000                        i1l10053 099B  
                      i1l10117 0E7C                        i1l10109 0000                        i1l10301 0000  
                      i1l10045 0000                        i1l10037 0DF4                        i1l10029 0DE8  
                      i1l10141 0FC4                        i1l10133 0000                        i1l10071 09C2  
                      i1l10063 0000                        i1l10055 09A0                        i1l10119 0000  
                      i1l10311 0000                        i1l10047 0000                        i1l10151 09FC  
                      i1l10215 0000                        i1l10223 0F18                        i1l10081 09D8  
                      i1l10073 0000                        i1l10065 0000                        i1l10057 0000  
                      i1l10241 0AA5                        i1l10233 0000                        i1l10321 0000  
                      i1l10129 0000                        i1l10145 0000                        i1l10209 0EE5  
                      i1l10313 0000                        i1l10083 0000                        i1l10075 09CA  
                      i1l10059 0000                        i1l10243 0000                        i1l10331 03EC  
                      i1l10091 0000                        i1l10139 0FB9                        i1l10227 0F1E  
                      i1l10315 0000                        i1l10171 0000                        i1l10155 0000  
                      i1l10085 09E6                        i1l10245 0000                        i1l10237 0000  
                      i1l10309 0000                        i1l10333 0000                        i1l10325 03EA  
                      i1l10149 09F1                        i1l10229 0000                        i1l10317 0000  
                      i1l10157 0000                        i1l10261 0372                        i1l10253 0000  
                      i1l10247 0000                        i1l10319 0000                        i1l10095 0000  
                      i1l10183 0000                        i1l10271 0000                        i1l10255 0000  
                      i1l10249 0000                        i1l10097 0EB2                        i1l10089 0000  
                      i1l10193 0000                        i1l10169 0F5B                        i1l10281 0000  
                      i1l10273 0000                        i1l10265 037D                        i1l10179 0FA0  
                      i1l10291 0000                        i1l10267 037F                        i1l10189 0CDE  
                      i1l10285 03A7                        i1l10269 0000                        i1l10199 0ECC  
                      i1l10295 0000                        i1l10287 0000                        i1l10279 0391  
                      i1l10297 0000                        i1l10289 0000                        i1l10299 0000  
                   ??_DelaySec 01D9           i1_Digitron_Send_8bit 03C7             Register_SendData@i 0073  
                    ?_delay_us 0070        __end_of_Interrupt_Gross 175D                     _ldexp$3469 0042  
                 ?_CleanGpsRcv 0070         Digitron_Command@device 01DD                      ?_initUART 0070  
                   _first_time 00ED             UART_1SendOneByte@c 01D9                     ??_Pos_meet 00C7  
            ?_Digitron_Command 01DC              ?_Digitron_Display 0070                __size_of___ftge 002C  
              __size_of___lmul 0033                        ___ftadd 0CE5                    Pos_meet@pos 00D6  
                      ___ftdiv 1796                        ___ftneg 0EA0                __size_of___wmul 0019  
                      ___ftmul 0DA5                        ___ftsub 0E8A                        ___fttol 098D  
                      ___lwdiv 0FD6             ??_Digitron_Command 01DD             ??_Digitron_Display 01DE  
                   ??___altoft 007C                     ??___awtoft 007B                     ??___ftpack 0075  
            __end_of_eval_poly 0CE5                     ??___lltoft 007C         __size_of_Uart_1SendStr 001A  
              __size_of_strchr 0011                __size_of_strlen 0032                   ??i1_delay_us 0070  
              __size_of_strstr 002F                   __size_of_exp 00F2                   __size_of_log 0089  
                      _isdigit 0291                   __size_of_pow 00C5                        _sec_cnt 00E3  
        ?i1_Digitron_Send_8bit 0070                     ??_delay_us 01D9    __size_of_Calc_DistanceLevel 00BE  
                      _strncmp 059B           end_of_initialization 1792                        exp@sign 005D  
                   ??_initUART 01D9                 queueArray_in@Q 0077                 queueArray_in@i 0076  
              _Digitron_Update 02D2                        pow@sign 00A9         __size_of_SerialService 008C  
         Register_SendData@dat 0070    __size_ofi1_Digitron_Command 000D             __end_ofi1_delay_us 03F1  
  __size_ofi1_Digitron_Display 005B                   Send_ATComm@i 01EC               ?_Distance_Update 0070  
                   _timer0_cnt 00EB                        strlen@s 01D9           Distance_Update@level 00C6  
             Send_ATComm@delay 01E9            Calc_DistanceLevel@t 00B7               ??_Init_Digitrons 01E6  
             ?_Interrupt_Gross 0070          __end_of_queueArray_in 036C       __size_of_queueArray_init 0025  
                _Uart_1SendStr 050A                    ___ftdiv@exp 0027                    ___ftmul@exp 0029  
                 ?_Init_Timer0 0070                 __end_of___ftge 0E8A                 __end_of___lmul 02D2  
               __end_of___wmul 07FD                      _LenRcvCnt 00E6                     floor@expon 0041  
       ??i1_Digitron_Send_8bit 0070                 __end_of_strchr 05E3                 __end_of_strlen 059B  
               __end_of_strstr 0569                  _SerialService 00ED            start_initialization 1776  
                   eval_poly@d 0048                     eval_poly@n 0049                     eval_poly@x 0045  
                   ldexp@value 003B                   CleanGpsRcv@i 0070                    __end_of_exp 0BC4  
                  __end_of_log 0A96                    __end_of_pow 098D              __size_of_DelaySec 0016  
      __end_of_Digitron_Update 0314                 ?_Uart_1SendStr 0070           __size_of_CleanGpsRcv 0031  
                   frexp@value 0070                   ?_Send_ATComm 01E8                      Pos_meet@i 00D7  
                    Pos_meet@j 00D8                       ??___ftge 0076                       ??___lmul 0078  
             _arr_rcv_section1 0190               _arr_rcv_section2 019A                       ??___wmul 0074  
                    _WhoRcvCnt 00E8                    __pdataBANK1 00ED              __size_of_Pos_meet 00A5  
                     ??_strchr 01DB                       ??_strlen 01DB                       ??_strstr 01E6  
            __size_of___altoft 002F                 ?_SerialService 0070              __size_of___awtoft 001B  
            __size_of___ftpack 003E              __size_of___lltoft 001E             Interrupt_Gross@mov 01D9  
                __pcstackBANK0 0020                  __pcstackBANK1 00A0                  __pcstackBANK3 01D9  
           _Digitron_Send_8bit 067D                   _isdigit$3171 0070              __size_of_delay_us 000E  
                 _gps_location 00E1            ?_Digitron_Send_8bit 0070              __size_of_initUART 0019  
             ___lwdiv@dividend 0072        _Calc_DistanceLevel$3685 00AE        _Calc_DistanceLevel$3686 00B1  
      _Calc_DistanceLevel$3687 00B4              ??_queueArray_init 01D9            Digitron_Command@com 01DC  
                    _digitron1 01AC                      _digitron2 01BA                      _digitron3 01C8  
                     ?___ftadd 002F                       ?___ftdiv 0078                       ?___ftneg 0070  
                     ?___ftmul 0020                       ?___ftsub 003B                       ?___fttol 0078  
                     ?___lwdiv 0070            Digitron_Display@fro 01E3              _Register_SendData 0478  
         ??_Digitron_Send_8bit 01D9            Digitron_Display@num 01E2            Digitron_Display@que 01E1  
                    _config_ok 00E9                      __pstrings 0017             ?_Register_SendData 0070  
                     ?_isdigit 0070                  _val_rcv_longi 01A8                      _eval_poly 0C87  
               __size_of_Match 000D      __size_of_Digitron_Command 0011      __size_of_Digitron_Display 005F  
             ___lwdiv@quotient 0074            ??_Register_SendData 0073                ??_Uart_1SendStr 01DA  
               __size_of_floor 0070                 __size_of_ldexp 0074                 __size_of_frexp 003C  
                     ?_strncmp 01DF               ?_Digitron_Update 0070        Register_SendData@length 0072  
            interrupt_function 0004                 ___wmul@product 0074                      delay_us@i 01DA  
                    delay_us@j 01DB       Distance_Update@mask_2831 00C0       Distance_Update@mask_2829 00BE  
                  _arr_rcv_len 01D6                    _arr_rcv_who 00DF      __end_of_Register_SendData 048F  
              Send_ATComm@comm 01EB                Send_ATComm@wait 01EA           __size_of_Init_Timer0 0007  
              ??_SerialService 00DB                    __stringbase 0026              ___wmul@multiplier 0070  
                ?_CleanWifiRcv 0070     __end_of_Calc_DistanceLevel 08C8                     ?_eval_poly 0045  
                     _DelaySec 04E2              ___lmul@multiplier 0070                    DelaySec@sec 01DA  
                 delay_us@usec 01D9     __end_ofi1_Digitron_Command 03E5     __end_ofi1_Digitron_Display 03C7  
                    frexp@eptr 0073                       _Pos_meet 0179               queueArray_in@buf 0070  
             queueArray_init@Q 01DC           __size_of_Send_ATComm 0022               queueArray_init@i 01DD  
             queueArray_init@j 01DE               __size_of___ftadd 00C0               __size_of___ftdiv 006A  
             __size_of___ftneg 0008                       ___altoft 0FA7               __size_of___ftmul 007B  
             __size_of___ftsub 0016               __size_of___fttol 0062               __size_of___lwdiv 002A  
                     ___awtoft 0EA8                       ___ftpack 0E20            Digitron_Send_8bit@i 01DA  
                     ___lltoft 09EF                 ??_CleanWifiRcv 01D9       __size_of_Distance_Update 0087  
                     _exp$3416 0058               __size_of_isdigit 000E                       _delay_us 06A9  
              ___lwdiv@divisor 0070                ___lwdiv@counter 0076        Distance_Update@dat_2830 00C4  
      Distance_Update@dat_2828 00C2                       _pow$3688 00A6                   _val_rcv_lati 01A4  
             __size_of_strncmp 0037                       _initUART 175D                  __size_of_atoi 005C  
                __size_of_atol 0073                  __size_of_main 00D1       __size_of_Interrupt_Gross 0007  
                __size_of_sqrt 00C3                 i1delay_us@usec 0070                     strncmp@len 01E0  
                     clear_ram 0802                       _rcv_wifi 0110           Digitron_Update@rider 0024  
   __size_of_Register_SendData 0017                 Send_ATComm@ret 01E8                       atoi@sign 007A  
                     atol@sign 0028         __size_of_queueArray_in 0058                       exp@coeff 0031  
                     log@coeff 004F                    ??_eval_poly 004B  __size_ofi1_Digitron_Send_8bit 0011  
             _Digitron_Command 0698               _Digitron_Display 061E                       isdigit@c 0071  
                ??_CleanGpsRcv 0070                       intlevel1 0000                _queueArray_init 05F9  
     Digitron_Update@order_num 0020                      strchr@chr 01D9                      strchr@ptr 01DB  
            Digitron_Display@i 01E5              Digitron_Display@j 01E4                    _val_rcv_len 00EC  
      __size_of_Init_Digitrons 0016                      strncmp@s1 01E4                      strncmp@s2 01DF  
                    stringcode 0021        Calc_DistanceLevel@level 00B9              _UART_1SendOneByte 0524  
           ?_UART_1SendOneByte 0070                       strlen@cp 01DD            ??_UART_1SendOneByte 01D9  
                     stringdir 0021                       stringtab 0017                       strstr@s1 01E6  
                     strstr@s2 01E5              ??_Distance_Update 007E                  _queueArray_in 0314  
          __end_of_CleanGpsRcv 04C0               Digitron_Update@i 0025           __end_of_CleanWifiRcv 050A  
    __end_of_UART_1SendOneByte 052D  
