

HI-TECH Software PIC PRO Macro Assembler V9.80 build 6738 
                                                                                               Sun Jan 28 19:36:22 2018

HI-TECH Software Omniscient Code Generator (PRO mode) build 6738
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,delta=2
    19                           	psect	text1192,local,class=CODE,delta=2
    20                           	psect	text1193,local,class=CODE,delta=2
    21                           	psect	text1205,local,class=CODE,delta=2
    22                           	psect	text1206,local,class=CODE,delta=2
    23                           	psect	text1207,local,class=CODE,delta=2
    24                           	psect	text1211,local,class=CODE,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text1213,local,class=CODE,delta=2
    27                           	psect	text1215,local,class=CODE,delta=2
    28                           	psect	text1226,local,class=CODE,delta=2
    29                           	psect	text1230,local,class=CODE,delta=2
    30                           	psect	text1233,local,class=CODE,delta=2
    31                           	psect	text1248,local,class=CODE,delta=2
    32                           	psect	pa_nodes,global,class=CODE,delta=2
    33                           	dabs	1,0x7E,2
    34  000A                     	;#
    35                           
    36                           	psect	config
    37  2007  3B32               	dw	15154	;#
    38                           
    39                           	psect	idataBANK1
    40  0000                     __pidataBANK1:	
    41                           
    42                           	psect	strings
    43  0017                     __pstrings:	
    44  0017                     stringtab:	
    45                           ;	global	stringdir,stringtab,__stringbase
    46                           
    47                           
    48                           ;	String table - string pointers are 1 byte each
    49  0017  1BFF               	btfsc	btemp+1,7
    50  0018  2821               	ljmp	stringcode
    51  0019  1383               	bcf	3,7
    52  001A  187F               	btfsc	btemp+1,0
    53  001B  1783               	bsf	3,7
    54  001C  0800               	movf	0,w
    55  001D  0A84               	incf	4,f
    56  001E  1903               	skipnz
    57  001F  0AFF               	incf	btemp+1,f
    58  0020  0008               	return
    59  0021                     stringcode:	
    60  0021                     stringdir:	
    61  0021  3000               	movlw	high stringdir
    62  0022  008A               	movwf	10
    63  0023  0804               	movf	4,w
    64  0024  0A84               	incf	4,f
    65  0025  0782               	addwf	2,f
    66  0026                     __stringbase:	
    67  0026  3400               	retlw	0
    68  0027                     _CODE:	
    69  0027  343F               	retlw	63
    70  0028  3406               	retlw	6
    71  0029  345B               	retlw	91
    72  002A  344F               	retlw	79
    73  002B  3466               	retlw	102
    74  002C  346D               	retlw	109
    75  002D  347D               	retlw	125
    76  002E  3407               	retlw	7
    77  002F  34EF               	retlw	239
    78  0030  346F               	retlw	111
    79  0031                     exp@coeff:	
    80  0031  3400               	retlw	0
    81  0032  3480               	retlw	128
    82  0033  343F               	retlw	63
    83  0034  3472               	retlw	114
    84  0035  3431               	retlw	49
    85  0036  343F               	retlw	63
    86  0037  34FE               	retlw	254
    87  0038  3475               	retlw	117
    88  0039  343E               	retlw	62
    89  003A  3458               	retlw	88
    90  003B  3463               	retlw	99
    91  003C  343D               	retlw	61
    92  003D  3495               	retlw	149
    93  003E  341D               	retlw	29
    94  003F  343C               	retlw	60
    95  0040  34C5               	retlw	197
    96  0041  34AE               	retlw	174
    97  0042  343A               	retlw	58
    98  0043  3479               	retlw	121
    99  0044  3421               	retlw	33
   100  0045  3439               	retlw	57
   101  0046  3494               	retlw	148
   102  0047  3480               	retlw	128
   103  0048  3437               	retlw	55
   104  0049  3493               	retlw	147
   105  004A  34A7               	retlw	167
   106  004B  3435               	retlw	53
   107  004C  3456               	retlw	86
   108  004D  3415               	retlw	21
   109  004E  3434               	retlw	52
   110  004F                     log@coeff:	
   111  004F  3400               	retlw	0
   112  0050  3400               	retlw	0
   113  0051  3400               	retlw	0
   114  0052  3400               	retlw	0
   115  0053  3480               	retlw	128
   116  0054  343F               	retlw	63
   117  0055  34F0               	retlw	240
   118  0056  34FF               	retlw	255
   119  0057  34BE               	retlw	190
   120  0058  34E2               	retlw	226
   121  0059  34A9               	retlw	169
   122  005A  343E               	retlw	62
   123  005B  3483               	retlw	131
   124  005C  3476               	retlw	118
   125  005D  34BE               	retlw	190
   126  005E  34AE               	retlw	174
   127  005F  342B               	retlw	43
   128  0060  343E               	retlw	62
   129  0061  343C               	retlw	60
   130  0062  34C3               	retlw	195
   131  0063  34BD               	retlw	189
   132  0064  34D2               	retlw	210
   133  0065  3413               	retlw	19
   134  0066  343D               	retlw	61
   135  0067  3478               	retlw	120
   136  0068  34D3               	retlw	211
   137  0069  34BB               	retlw	187
   138  0005                     _PORTA	set	5
   139  0008                     _PORTD	set	8
   140  001A                     _RCREG	set	26
   141  0001                     _TMR0	set	1
   142  0019                     _TXREG	set	25
   143  00C3                     _ADDEN	set	195
   144  00C4                     _CREN	set	196
   145  00C2                     _FERR	set	194
   146  005F                     _GIE	set	95
   147  00C1                     _OERR	set	193
   148  005E                     _PEIE	set	94
   149  003A                     _RC2	set	58
   150  003B                     _RC3	set	59
   151  0065                     _RCIF	set	101
   152  0048                     _RE0	set	72
   153  0049                     _RE1	set	73
   154  004A                     _RE2	set	74
   155  00C6                     _RX9	set	198
   156  00C0                     _RX9D	set	192
   157  00C7                     _SPEN	set	199
   158  00C5                     _SREN	set	197
   159  005D                     _T0IE	set	93
   160  005A                     _T0IF	set	90
   161  0081                     _OPTION	set	129
   162  0099                     _SPBRG	set	153
   163  0085                     _TRISA	set	133
   164  0086                     _TRISB	set	134
   165  0087                     _TRISC	set	135
   166  0088                     _TRISD	set	136
   167  0089                     _TRISE	set	137
   168  04C2                     _BRGH	set	1218
   169  04C7                     _CSRC	set	1223
   170  0465                     _RCIE	set	1125
   171  04C4                     _SYNC	set	1220
   172  04C1                     _TRMT	set	1217
   173  04C6                     _TX9	set	1222
   174  04C0                     _TX9D	set	1216
   175  04C5                     _TXEN	set	1221
   176  006A                     STR_11:	
   177  006A  3441               	retlw	65	;'A'
   178  006B  3454               	retlw	84	;'T'
   179  006C  342B               	retlw	43	;'+'
   180  006D  3443               	retlw	67	;'C'
   181  006E  3457               	retlw	87	;'W'
   182  006F  344A               	retlw	74	;'J'
   183  0070  3441               	retlw	65	;'A'
   184  0071  3450               	retlw	80	;'P'
   185  0072  343D               	retlw	61	;'='
   186  0073  3422               	retlw	34	;'"'
   187  0074  3464               	retlw	100	;'d'
   188  0075  3465               	retlw	101	;'e'
   189  0076  3465               	retlw	101	;'e'
   190  0077  3474               	retlw	116	;'t'
   191  0078  3422               	retlw	34	;'"'
   192  0079  342C               	retlw	44	;','
   193  007A  3422               	retlw	34	;'"'
   194  007B  3431               	retlw	49	;'1'
   195  007C  3437               	retlw	55	;'7'
   196  007D  3432               	retlw	50	;'2'
   197  007E  3432               	retlw	50	;'2'
   198  007F  3431               	retlw	49	;'1'
   199  0080  3430               	retlw	48	;'0'
   200  0081  3430               	retlw	48	;'0'
   201  0082  3438               	retlw	56	;'8'
   202  0083  3436               	retlw	54	;'6'
   203  0084  3422               	retlw	34	;'"'
   204  0085  340D               	retlw	13
   205  0086  340A               	retlw	10
   206  0087  3400               	retlw	0
   207  0088                     STR_14:	
   208  0088  3441               	retlw	65	;'A'
   209  0089  3454               	retlw	84	;'T'
   210  008A  342B               	retlw	43	;'+'
   211  008B  3443               	retlw	67	;'C'
   212  008C  3449               	retlw	73	;'I'
   213  008D  3450               	retlw	80	;'P'
   214  008E  3453               	retlw	83	;'S'
   215  008F  3445               	retlw	69	;'E'
   216  0090  3452               	retlw	82	;'R'
   217  0091  3456               	retlw	86	;'V'
   218  0092  3445               	retlw	69	;'E'
   219  0093  3452               	retlw	82	;'R'
   220  0094  343D               	retlw	61	;'='
   221  0095  3431               	retlw	49	;'1'
   222  0096  342C               	retlw	44	;','
   223  0097  3431               	retlw	49	;'1'
   224  0098  3435               	retlw	53	;'5'
   225  0099  3439               	retlw	57	;'9'
   226  009A  3432               	retlw	50	;'2'
   227  009B  340D               	retlw	13
   228  009C  340A               	retlw	10
   229  009D  3400               	retlw	0
   230  009E                     STR_16:	
   231  009E  3441               	retlw	65	;'A'
   232  009F  3454               	retlw	84	;'T'
   233  00A0  342B               	retlw	43	;'+'
   234  00A1  3443               	retlw	67	;'C'
   235  00A2  3449               	retlw	73	;'I'
   236  00A3  3450               	retlw	80	;'P'
   237  00A4  3453               	retlw	83	;'S'
   238  00A5  3454               	retlw	84	;'T'
   239  00A6  344F               	retlw	79	;'O'
   240  00A7  343D               	retlw	61	;'='
   241  00A8  3433               	retlw	51	;'3'
   242  00A9  3430               	retlw	48	;'0'
   243  00AA  3430               	retlw	48	;'0'
   244  00AB  340D               	retlw	13
   245  00AC  340A               	retlw	10
   246  00AD  3400               	retlw	0
   247  00AE                     STR_5:	
   248  00AE  3441               	retlw	65	;'A'
   249  00AF  3454               	retlw	84	;'T'
   250  00B0  342B               	retlw	43	;'+'
   251  00B1  3443               	retlw	67	;'C'
   252  00B2  3457               	retlw	87	;'W'
   253  00B3  344D               	retlw	77	;'M'
   254  00B4  344F               	retlw	79	;'O'
   255  00B5  3444               	retlw	68	;'D'
   256  00B6  3445               	retlw	69	;'E'
   257  00B7  343D               	retlw	61	;'='
   258  00B8  3431               	retlw	49	;'1'
   259  00B9  340D               	retlw	13
   260  00BA  340A               	retlw	10
   261  00BB  3400               	retlw	0
   262  00BC                     STR_9:	
   263  00BC  3441               	retlw	65	;'A'
   264  00BD  3454               	retlw	84	;'T'
   265  00BE  342B               	retlw	43	;'+'
   266  00BF  3443               	retlw	67	;'C'
   267  00C0  3449               	retlw	73	;'I'
   268  00C1  3450               	retlw	80	;'P'
   269  00C2  344D               	retlw	77	;'M'
   270  00C3  3455               	retlw	85	;'U'
   271  00C4  3458               	retlw	88	;'X'
   272  00C5  343D               	retlw	61	;'='
   273  00C6  3431               	retlw	49	;'1'
   274  00C7  340D               	retlw	13
   275  00C8  340A               	retlw	10
   276  00C9  3400               	retlw	0
   277  00CA                     STR_13:	
   278  00CA  3441               	retlw	65	;'A'
   279  00CB  3454               	retlw	84	;'T'
   280  00CC  342B               	retlw	43	;'+'
   281  00CD  3443               	retlw	67	;'C'
   282  00CE  3449               	retlw	73	;'I'
   283  00CF  3446               	retlw	70	;'F'
   284  00D0  3453               	retlw	83	;'S'
   285  00D1  3452               	retlw	82	;'R'
   286  00D2  340D               	retlw	13
   287  00D3  340A               	retlw	10
   288  00D4  3400               	retlw	0
   289  00D5                     STR_7:	
   290  00D5  3441               	retlw	65	;'A'
   291  00D6  3454               	retlw	84	;'T'
   292  00D7  342B               	retlw	43	;'+'
   293  00D8  3452               	retlw	82	;'R'
   294  00D9  3453               	retlw	83	;'S'
   295  00DA  3454               	retlw	84	;'T'
   296  00DB  340D               	retlw	13
   297  00DC  340A               	retlw	10
   298  00DD  3400               	retlw	0
   299  00DE                     STR_3:	
   300  00DE  3441               	retlw	65	;'A'
   301  00DF  3454               	retlw	84	;'T'
   302  00E0  3445               	retlw	69	;'E'
   303  00E1  3430               	retlw	48	;'0'
   304  00E2  340D               	retlw	13
   305  00E3  340A               	retlw	10
   306  00E4  3400               	retlw	0
   307  00E5                     STR_1:	
   308  00E5  3441               	retlw	65	;'A'
   309  00E6  3454               	retlw	84	;'T'
   310  00E7  340D               	retlw	13
   311  00E8  340A               	retlw	10
   312  00E9  3400               	retlw	0
   313  00EA                     STR_2:	
   314  00EA  344F               	retlw	79	;'O'
   315  00EB  344B               	retlw	75	;'K'
   316  00EC  3400               	retlw	0
   317  00EA                     
   318                           	psect	cinit
   319  00F0                     start_initialization:	
   320                           
   321                           ; Clear objects allocated to BANK0
   322  00F0  01EF               	clrf	__pbssBANK0& (0+127)
   323                           
   324                           ; Clear objects allocated to BANK1
   325  00F1  1383               	bcf	3,7	;select IRP bank0
   326  00F2  30DD               	movlw	low __pbssBANK1
   327  00F3  0084               	movwf	4
   328  00F4  30ED               	movlw	low (__pbssBANK1+16)
   329  00F5  160A  118A  274A   	fcall	clear_ram
      +       120A  118A         
   330                           
   331                           ; Clear objects allocated to BANK3
   332  00FA  1783               	bsf	3,7	;select IRP bank2
   333  00FB  3090               	movlw	low __pbssBANK3
   334  00FC  0084               	movwf	4
   335  00FD  30CB               	movlw	low (__pbssBANK3+59)
   336  00FE  160A  118A  274A   	fcall	clear_ram
      +       120A  118A         
   337                           
   338                           ; Clear objects allocated to BANK2
   339  0103  3010               	movlw	low __pbssBANK2
   340  0104  0084               	movwf	4
   341  0105  3050               	movlw	low (__pbssBANK2+64)
   342  0106  160A  118A  274A   	fcall	clear_ram
   343                           
   344                           ; Initialize objects allocated to BANK1
   345  0109  1683               	bsf	3,5	;RP0=1, select bank1
   346                           
   347                           ;initializer for _first_time
   348  010A  3001               	movlw	1
   349  010B  00ED               	movwf	__pdataBANK1& (0+127)
   350  010C                     end_of_initialization:	
   351                           ;End of C runtime variable initialization code
   352                           
   353  010C  0183               	clrf	3
   354  010D  120A  158A  2871   	ljmp	_main	;jump to C main() function
   355                           
   356                           	psect	bssBANK0
   357  006F                     __pbssBANK0:	
   358  006F                     _WifiRcvCnt:	
   359  006F                     	ds	1
   360                           
   361                           	psect	bssBANK1
   362  00DD                     __pbssBANK1:	
   363  00DD                     _arr_rcv_who:	
   364  00DD                     	ds	2
   365  00DF                     _gps_location:	
   366  00DF                     	ds	2
   367  00E1                     _sec_cnt:	
   368  00E1                     	ds	2
   369  00E3                     _t:	
   370  00E3                     	ds	2
   371  00E5                     _LatiRcvCnt:	
   372  00E5                     	ds	1
   373  00E6                     _LenRcvCnt:	
   374  00E6                     	ds	1
   375  00E7                     _LongiRcvCnt:	
   376  00E7                     	ds	1
   377  00E8                     _WhoRcvCnt:	
   378  00E8                     	ds	1
   379  00E9                     _config_ok:	
   380  00E9                     	ds	1
   381  00EA                     _pos:	
   382  00EA                     	ds	1
   383  00EB                     _timer0_cnt:	
   384  00EB                     	ds	1
   385  00EC                     _val_rcv_len:	
   386  00EC                     	ds	1
   387                           
   388                           	psect	dataBANK1
   389  00ED                     __pdataBANK1:	
   390  00ED                     _first_time:	
   391  00ED                     	ds	1
   392                           
   393                           	psect	bssBANK3
   394  0190                     __pbssBANK3:	
   395  0190                     _arr_rcv_section1:	
   396  0190                     	ds	10
   397  019A                     _arr_rcv_section2:	
   398  019A                     	ds	10
   399  01A4                     _val_rcv_lati:	
   400  01A4                     	ds	4
   401  01A8                     _val_rcv_longi:	
   402  01A8                     	ds	4
   403  01AC                     _digitron1:	
   404  01AC                     	ds	14
   405  01BA                     _digitron2:	
   406  01BA                     	ds	14
   407  01C8                     _arr_rcv_len:	
   408  01C8                     	ds	3
   409                           
   410                           	psect	bssBANK2
   411  0110                     __pbssBANK2:	
   412  0110                     _rcv_wifi:	
   413  0110                     	ds	50
   414  0142                     _digitron3:	
   415  0142                     	ds	14
   416                           
   417                           	psect	clrtext
   418  174A                     clear_ram:	
   419                           ;	Called with FSR containing the base address, and
   420                           ;	W with the last address+1
   421                           
   422  174A  0064               	clrwdt	;clear the watchdog before getting into this loop
   423  174B                     clrloop:	
   424  174B  0180               	clrf	0	;clear RAM location pointed to by FSR
   425  174C  0A84               	incf	4,f	;increment pointer
   426  174D  0604               	xorwf	4,w	;XOR with final address
   427  174E  1903               	btfsc	3,2	;have we reached the end yet?
   428  174F  3400               	retlw	0	;all done for this memory range, return
   429  1750  0604               	xorwf	4,w	;XOR again to restore value
   430  1751  2F4B               	goto	clrloop	;do the next byte
   431                           
   432                           	psect	cstackBANK3
   433  01CB                     __pcstackBANK3:	
   434  01CB                     ??_queueArray_init:	
   435  01CB                     ??_Digitron_Send_8bit:	
   436                           ; 0 bytes @ 0x0
   437                           
   438  01CB                     ??_delay_us:	
   439                           ; 0 bytes @ 0x0
   440                           
   441  01CB                     ??_initUART:	
   442                           ; 0 bytes @ 0x0
   443                           
   444  01CB                     ??_Init_Timer0:	
   445                           ; 0 bytes @ 0x0
   446                           
   447  01CB                     ??_Interrupt_Gross:	
   448                           ; 0 bytes @ 0x0
   449                           
   450  01CB                     ??_DelaySec:	
   451                           ; 0 bytes @ 0x0
   452                           
   453  01CB                     ??_CleanWifiRcv:	
   454                           ; 0 bytes @ 0x0
   455                           
   456  01CB                     ??_UART_1SendOneByte:	
   457                           ; 0 bytes @ 0x0
   458                           
   459  01CB                     ?_strchr:	
   460                           ; 0 bytes @ 0x0
   461                           
   462  01CB                     ?_strlen:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  01CB                     Digitron_Send_8bit@dat:	
   466                           ; 2 bytes @ 0x0
   467                           
   468  01CB                     UART_1SendOneByte@c:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  01CB                     CleanWifiRcv@i:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  01CB                     delay_us@usec:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  01CB                     Interrupt_Gross@mov:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  01CB                     strlen@s:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  01CB                     strchr@chr:	
   484                           ; 2 bytes @ 0x0
   485                           
   486                           
   487                           ; 2 bytes @ 0x0
   488  01CB                     	ds	1
   489  01CC                     ??_Uart_1SendStr:	
   490  01CC                     Digitron_Send_8bit@i:	
   491                           ; 0 bytes @ 0x1
   492                           
   493  01CC                     Uart_1SendStr@data_at:	
   494                           ; 1 bytes @ 0x1
   495                           
   496  01CC                     DelaySec@sec:	
   497                           ; 1 bytes @ 0x1
   498                           
   499  01CC                     delay_us@i:	
   500                           ; 1 bytes @ 0x1
   501                           
   502                           
   503                           ; 1 bytes @ 0x1
   504  01CC                     	ds	1
   505  01CD                     ??_strlen:	
   506  01CD                     ??_strchr:	
   507                           ; 0 bytes @ 0x2
   508                           
   509  01CD                     delay_us@j:	
   510                           ; 0 bytes @ 0x2
   511                           
   512  01CD                     strchr@ptr:	
   513                           ; 1 bytes @ 0x2
   514                           
   515                           
   516                           ; 1 bytes @ 0x2
   517  01CD                     	ds	1
   518  01CE                     ?_Digitron_Command:	
   519  01CE                     Digitron_Command@com:	
   520                           ; 0 bytes @ 0x3
   521                           
   522  01CE                     queueArray_init@Q:	
   523                           ; 1 bytes @ 0x3
   524                           
   525                           
   526                           ; 1 bytes @ 0x3
   527  01CE                     	ds	1
   528  01CF                     ??_Digitron_Command:	
   529  01CF                     Digitron_Command@device:	
   530                           ; 0 bytes @ 0x4
   531                           
   532  01CF                     queueArray_init@i:	
   533                           ; 1 bytes @ 0x4
   534                           
   535  01CF                     strlen@cp:	
   536                           ; 1 bytes @ 0x4
   537                           
   538                           
   539                           ; 2 bytes @ 0x4
   540  01CF                     	ds	1
   541  01D0                     ??_Digitron_Display:	
   542  01D0                     queueArray_init@j:	
   543                           ; 0 bytes @ 0x5
   544                           
   545                           
   546                           ; 1 bytes @ 0x5
   547  01D0                     	ds	1
   548  01D1                     ?_strncmp:	
   549  01D1                     strncmp@s2:	
   550                           ; 2 bytes @ 0x6
   551                           
   552                           
   553                           ; 1 bytes @ 0x6
   554  01D1                     	ds	1
   555  01D2                     strncmp@len:	
   556                           
   557                           ; 2 bytes @ 0x7
   558  01D2                     	ds	1
   559  01D3                     Digitron_Display@que:	
   560                           
   561                           ; 1 bytes @ 0x8
   562  01D3                     	ds	1
   563  01D4                     ??_strncmp:	
   564  01D4                     Digitron_Display@num:	
   565                           ; 0 bytes @ 0x9
   566                           
   567                           
   568                           ; 1 bytes @ 0x9
   569  01D4                     	ds	1
   570  01D5                     Digitron_Display@fro:	
   571                           
   572                           ; 1 bytes @ 0xA
   573  01D5                     	ds	1
   574  01D6                     Digitron_Display@j:	
   575  01D6                     strncmp@s1:	
   576                           ; 1 bytes @ 0xB
   577                           
   578                           
   579                           ; 1 bytes @ 0xB
   580  01D6                     	ds	1
   581  01D7                     ?_strstr:	
   582  01D7                     Digitron_Display@i:	
   583                           ; 1 bytes @ 0xC
   584                           
   585  01D7                     strstr@s2:	
   586                           ; 1 bytes @ 0xC
   587                           
   588                           
   589                           ; 1 bytes @ 0xC
   590  01D7                     	ds	1
   591  01D8                     ??_strstr:	
   592  01D8                     ??_Init_Digitrons:	
   593                           ; 0 bytes @ 0xD
   594                           
   595  01D8                     strstr@s1:	
   596                           ; 0 bytes @ 0xD
   597                           
   598                           
   599                           ; 1 bytes @ 0xD
   600  01D8                     	ds	1
   601  01D9                     ??_Match:	
   602  01D9                     Match@a:	
   603                           ; 0 bytes @ 0xE
   604                           
   605                           
   606                           ; 1 bytes @ 0xE
   607  01D9                     	ds	1
   608  01DA                     ?_Send_ATComm:	
   609  01DA                     Send_ATComm@ret:	
   610                           ; 1 bytes @ 0xF
   611                           
   612                           
   613                           ; 1 bytes @ 0xF
   614  01DA                     	ds	1
   615  01DB                     Send_ATComm@delay:	
   616                           
   617                           ; 1 bytes @ 0x10
   618  01DB                     	ds	1
   619  01DC                     Send_ATComm@wait:	
   620                           
   621                           ; 1 bytes @ 0x11
   622  01DC                     	ds	1
   623  01DD                     ??_Send_ATComm:	
   624  01DD                     Send_ATComm@comm:	
   625                           ; 0 bytes @ 0x12
   626                           
   627                           
   628                           ; 1 bytes @ 0x12
   629  01DD                     	ds	1
   630  01DE                     Send_ATComm@i:	
   631                           
   632                           ; 1 bytes @ 0x13
   633  01DE                     	ds	1
   634  01DF                     ??_main:	
   635                           
   636                           	psect	cstackBANK1
   637  00A0                     __pcstackBANK1:	
   638                           ; 0 bytes @ 0x14
   639                           
   640  00A0                     ?_pow:	
   641  00A0                     pow@x:	
   642                           ; 3 bytes @ 0x0
   643                           
   644                           
   645                           ; 3 bytes @ 0x0
   646  00A0                     	ds	3
   647  00A3                     pow@y:	
   648                           
   649                           ; 3 bytes @ 0x3
   650  00A3                     	ds	3
   651  00A6                     _pow$3688:	
   652                           
   653                           ; 3 bytes @ 0x6
   654  00A6                     	ds	3
   655  00A9                     pow@sign:	
   656                           
   657                           ; 1 bytes @ 0x9
   658  00A9                     	ds	1
   659  00AA                     pow@yi:	
   660                           
   661                           ; 4 bytes @ 0xA
   662  00AA                     	ds	4
   663  00AE                     _Calc_DistanceLevel$3685:	
   664                           
   665                           ; 3 bytes @ 0xE
   666  00AE                     	ds	3
   667  00B1                     _Calc_DistanceLevel$3686:	
   668                           
   669                           ; 3 bytes @ 0x11
   670  00B1                     	ds	3
   671  00B4                     _Calc_DistanceLevel$3687:	
   672                           
   673                           ; 3 bytes @ 0x14
   674  00B4                     	ds	3
   675  00B7                     Calc_DistanceLevel@level:	
   676                           
   677                           ; 1 bytes @ 0x17
   678  00B7                     	ds	1
   679  00B8                     Distance_Update@dat:	
   680                           
   681                           ; 2 bytes @ 0x18
   682  00B8                     	ds	2
   683  00BA                     Distance_Update@mask:	
   684                           
   685                           ; 2 bytes @ 0x1A
   686  00BA                     	ds	2
   687  00BC                     Distance_Update@mask_2829:	
   688                           
   689                           ; 2 bytes @ 0x1C
   690  00BC                     	ds	2
   691  00BE                     Distance_Update@mask_2831:	
   692                           
   693                           ; 2 bytes @ 0x1E
   694  00BE                     	ds	2
   695  00C0                     Distance_Update@dat_2828:	
   696                           
   697                           ; 2 bytes @ 0x20
   698  00C0                     	ds	2
   699  00C2                     Distance_Update@dat_2830:	
   700                           
   701                           ; 2 bytes @ 0x22
   702  00C2                     	ds	2
   703  00C4                     Distance_Update@level:	
   704                           
   705                           ; 1 bytes @ 0x24
   706  00C4                     	ds	1
   707  00C5                     ??_Pos_meet:	
   708                           
   709                           ; 0 bytes @ 0x25
   710  00C5                     	ds	3
   711  00C8                     Pos_meet@arr_rcv_lati:	
   712                           
   713                           ; 6 bytes @ 0x28
   714  00C8                     	ds	6
   715  00CE                     Pos_meet@arr_rcv_longi:	
   716                           
   717                           ; 6 bytes @ 0x2E
   718  00CE                     	ds	6
   719  00D4                     Pos_meet@pos:	
   720                           
   721                           ; 1 bytes @ 0x34
   722  00D4                     	ds	1
   723  00D5                     Pos_meet@i:	
   724                           
   725                           ; 1 bytes @ 0x35
   726  00D5                     	ds	1
   727  00D6                     Pos_meet@j:	
   728                           
   729                           ; 1 bytes @ 0x36
   730  00D6                     	ds	1
   731  00D7                     Pos_meet@i_2818:	
   732                           
   733                           ; 1 bytes @ 0x37
   734  00D7                     	ds	1
   735  00D8                     Pos_meet@j_2819:	
   736                           
   737                           ; 1 bytes @ 0x38
   738  00D8                     	ds	1
   739  00D9                     ??_SerialService:	
   740                           
   741                           ; 0 bytes @ 0x39
   742  00D9                     	ds	4
   743                           
   744                           	psect	cstackCOMMON
   745  0071                     __pcstackCOMMON:	
   746  0071                     ?_queueArray_init:	
   747  0071                     ?_Digitron_Display:	
   748                           ; 0 bytes @ 0x0
   749                           
   750  0071                     ?_Digitron_Send_8bit:	
   751                           ; 0 bytes @ 0x0
   752                           
   753  0071                     ?_queueArray_in:	
   754                           ; 0 bytes @ 0x0
   755                           
   756  0071                     ?_delay_us:	
   757                           ; 0 bytes @ 0x0
   758                           
   759  0071                     ?_initUART:	
   760                           ; 0 bytes @ 0x0
   761                           
   762  0071                     ?_Init_Timer0:	
   763                           ; 0 bytes @ 0x0
   764                           
   765  0071                     ?_Interrupt_Gross:	
   766                           ; 0 bytes @ 0x0
   767                           
   768  0071                     ?_DelaySec:	
   769                           ; 0 bytes @ 0x0
   770                           
   771  0071                     ?_CleanWifiRcv:	
   772                           ; 0 bytes @ 0x0
   773                           
   774  0071                     ?_Uart_1SendStr:	
   775                           ; 0 bytes @ 0x0
   776                           
   777  0071                     ?_Match:	
   778                           ; 0 bytes @ 0x0
   779                           
   780  0071                     ?_Pos_meet:	
   781                           ; 1 bit 
   782                           
   783  0071                     ?_Distance_Update:	
   784                           ; 0 bytes @ 0x0
   785                           
   786  0071                     ?_CleanGpsRcv:	
   787                           ; 0 bytes @ 0x0
   788                           
   789  0071                     ??_CleanGpsRcv:	
   790                           ; 0 bytes @ 0x0
   791                           
   792  0071                     ?_isdigit:	
   793                           ; 0 bytes @ 0x0
   794                           
   795  0071                     ??_isdigit:	
   796                           ; 1 bit 
   797                           
   798  0071                     ?_Register_SendData:	
   799                           ; 0 bytes @ 0x0
   800                           
   801  0071                     ?_Init_Digitrons:	
   802                           ; 0 bytes @ 0x0
   803                           
   804  0071                     ?_Digitron_Update:	
   805                           ; 0 bytes @ 0x0
   806                           
   807  0071                     ?_main:	
   808                           ; 0 bytes @ 0x0
   809                           
   810  0071                     ?_UART_1SendOneByte:	
   811                           ; 0 bytes @ 0x0
   812                           
   813  0071                     ?_SerialService:	
   814                           ; 0 bytes @ 0x0
   815                           
   816  0071                     ?___ftge:	
   817                           ; 0 bytes @ 0x0
   818                           
   819  0071                     ?i1_Digitron_Display:	
   820                           ; 1 bit 
   821                           
   822  0071                     ?i1_Digitron_Send_8bit:	
   823                           ; 0 bytes @ 0x0
   824                           
   825  0071                     ??i1_Digitron_Send_8bit:	
   826                           ; 0 bytes @ 0x0
   827                           
   828  0071                     ?i1_delay_us:	
   829                           ; 0 bytes @ 0x0
   830                           
   831  0071                     ??i1_delay_us:	
   832                           ; 0 bytes @ 0x0
   833                           
   834  0071                     ?_Calc_DistanceLevel:	
   835                           ; 0 bytes @ 0x0
   836                           
   837  0071                     ?___wmul:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0071                     ?___lwdiv:	
   841                           ; 2 bytes @ 0x0
   842                           
   843  0071                     ?___ftpack:	
   844                           ; 2 bytes @ 0x0
   845                           
   846  0071                     ?_frexp:	
   847                           ; 3 bytes @ 0x0
   848                           
   849  0071                     ?___ftneg:	
   850                           ; 3 bytes @ 0x0
   851                           
   852  0071                     ?___lmul:	
   853                           ; 3 bytes @ 0x0
   854                           
   855  0071                     CleanGpsRcv@i:	
   856                           ; 4 bytes @ 0x0
   857                           
   858  0071                     queueArray_in@buf:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0071                     _isdigit$3171:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0071                     i1Digitron_Send_8bit@dat:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  0071                     i1delay_us@usec:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0071                     Register_SendData@dat:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0071                     ___wmul@multiplier:	
   874                           ; 2 bytes @ 0x0
   875                           
   876  0071                     ___lwdiv@divisor:	
   877                           ; 2 bytes @ 0x0
   878                           
   879  0071                     ___ftneg@f1:	
   880                           ; 2 bytes @ 0x0
   881                           
   882  0071                     ___ftge@ff1:	
   883                           ; 3 bytes @ 0x0
   884                           
   885  0071                     frexp@value:	
   886                           ; 3 bytes @ 0x0
   887                           
   888  0071                     ___ftpack@arg:	
   889                           ; 3 bytes @ 0x0
   890                           
   891  0071                     ___lmul@multiplier:	
   892                           ; 3 bytes @ 0x0
   893                           
   894                           
   895                           ; 4 bytes @ 0x0
   896  0071                     	ds	1
   897  0072                     ??_queueArray_in:	
   898  0072                     isdigit@c:	
   899                           ; 0 bytes @ 0x1
   900                           
   901  0072                     i1Digitron_Send_8bit@i:	
   902                           ; 1 bytes @ 0x1
   903                           
   904  0072                     i1delay_us@i:	
   905                           ; 1 bytes @ 0x1
   906                           
   907                           
   908                           ; 1 bytes @ 0x1
   909  0072                     	ds	1
   910  0073                     Register_SendData@length:	
   911  0073                     i1delay_us@j:	
   912                           ; 1 bytes @ 0x2
   913                           
   914  0073                     ___wmul@multiplicand:	
   915                           ; 1 bytes @ 0x2
   916                           
   917  0073                     ___lwdiv@dividend:	
   918                           ; 2 bytes @ 0x2
   919                           
   920                           
   921                           ; 2 bytes @ 0x2
   922  0073                     	ds	1
   923  0074                     ??_Register_SendData:	
   924  0074                     ??___ftneg:	
   925                           ; 0 bytes @ 0x3
   926                           
   927  0074                     ?i1_Digitron_Command:	
   928                           ; 0 bytes @ 0x3
   929                           
   930  0074                     Register_SendData@i:	
   931                           ; 0 bytes @ 0x3
   932                           
   933  0074                     frexp@eptr:	
   934                           ; 1 bytes @ 0x3
   935                           
   936  0074                     ___ftpack@exp:	
   937                           ; 1 bytes @ 0x3
   938                           
   939  0074                     i1Digitron_Command@com:	
   940                           ; 1 bytes @ 0x3
   941                           
   942  0074                     ___ftge@ff2:	
   943                           ; 1 bytes @ 0x3
   944                           
   945                           
   946                           ; 3 bytes @ 0x3
   947  0074                     	ds	1
   948  0075                     ??_frexp:	
   949  0075                     ??___wmul:	
   950                           ; 0 bytes @ 0x4
   951                           
   952  0075                     ??___lwdiv:	
   953                           ; 0 bytes @ 0x4
   954                           
   955  0075                     ??i1_Digitron_Command:	
   956                           ; 0 bytes @ 0x4
   957                           
   958  0075                     ___ftpack@sign:	
   959                           ; 0 bytes @ 0x4
   960                           
   961  0075                     i1Digitron_Command@device:	
   962                           ; 1 bytes @ 0x4
   963                           
   964  0075                     ___wmul@product:	
   965                           ; 1 bytes @ 0x4
   966                           
   967  0075                     ___lwdiv@quotient:	
   968                           ; 2 bytes @ 0x4
   969                           
   970  0075                     ___lmul@multiplicand:	
   971                           ; 2 bytes @ 0x4
   972                           
   973                           
   974                           ; 4 bytes @ 0x4
   975  0075                     	ds	1
   976  0076                     ??___ftpack:	
   977  0076                     ??i1_Digitron_Display:	
   978                           ; 0 bytes @ 0x5
   979                           
   980                           
   981                           ; 0 bytes @ 0x5
   982  0076                     	ds	1
   983  0077                     ??___ftge:	
   984  0077                     ?_atoi:	
   985                           ; 0 bytes @ 0x6
   986                           
   987  0077                     queueArray_in@i:	
   988                           ; 2 bytes @ 0x6
   989                           
   990  0077                     ___lwdiv@counter:	
   991                           ; 1 bytes @ 0x6
   992                           
   993                           
   994                           ; 1 bytes @ 0x6
   995  0077                     	ds	1
   996  0078                     queueArray_in@Q:	
   997                           
   998                           ; 1 bytes @ 0x7
   999  0078                     	ds	1
  1000  0079                     ??_atoi:	
  1001  0079                     ??___lmul:	
  1002                           ; 0 bytes @ 0x8
  1003                           
  1004  0079                     ??___ftdiv:	
  1005                           ; 0 bytes @ 0x8
  1006                           
  1007  0079                     ?___awtoft:	
  1008                           ; 0 bytes @ 0x8
  1009                           
  1010  0079                     ?___lltoft:	
  1011                           ; 3 bytes @ 0x8
  1012                           
  1013  0079                     ?___fttol:	
  1014                           ; 3 bytes @ 0x8
  1015                           
  1016  0079                     i1Digitron_Display@que:	
  1017                           ; 4 bytes @ 0x8
  1018                           
  1019  0079                     ___awtoft@c:	
  1020                           ; 1 bytes @ 0x8
  1021                           
  1022  0079                     ___fttol@f1:	
  1023                           ; 2 bytes @ 0x8
  1024                           
  1025  0079                     ___lmul@product:	
  1026                           ; 3 bytes @ 0x8
  1027                           
  1028  0079                     ___lltoft@c:	
  1029                           ; 4 bytes @ 0x8
  1030                           
  1031                           
  1032                           ; 4 bytes @ 0x8
  1033  0079                     	ds	1
  1034  007A                     i1Digitron_Display@num:	
  1035                           
  1036                           ; 1 bytes @ 0x9
  1037  007A                     	ds	1
  1038  007B                     i1Digitron_Display@fro:	
  1039                           
  1040                           ; 1 bytes @ 0xA
  1041  007B                     	ds	1
  1042  007C                     ??___awtoft:	
  1043  007C                     ___awtoft@sign:	
  1044                           ; 0 bytes @ 0xB
  1045                           
  1046  007C                     i1Digitron_Display@j:	
  1047                           ; 1 bytes @ 0xB
  1048                           
  1049                           
  1050                           ; 1 bytes @ 0xB
  1051  007C                     	ds	1
  1052  007D                     ??_exp:	
  1053  007D                     ??_log:	
  1054                           ; 0 bytes @ 0xC
  1055                           
  1056  007D                     ??_floor:	
  1057                           ; 0 bytes @ 0xC
  1058                           
  1059  007D                     ??___ftsub:	
  1060                           ; 0 bytes @ 0xC
  1061                           
  1062  007D                     ??___altoft:	
  1063                           ; 0 bytes @ 0xC
  1064                           
  1065  007D                     ??___lltoft:	
  1066                           ; 0 bytes @ 0xC
  1067                           
  1068  007D                     ___lltoft@exp:	
  1069                           ; 0 bytes @ 0xC
  1070                           
  1071  007D                     i1Digitron_Display@i:	
  1072                           ; 1 bytes @ 0xC
  1073                           
  1074                           
  1075                           ; 1 bytes @ 0xC
  1076  007D                     	ds	1
  1077  007E                     ??_Distance_Update:	
  1078  007E                     ??_pow:	
  1079                           ; 0 bytes @ 0xD
  1080                           
  1081  007E                     ??_Calc_DistanceLevel:	
  1082                           ; 0 bytes @ 0xD
  1083                           
  1084                           
  1085                           	psect	cstackBANK0
  1086  0020                     __pcstackBANK0:	
  1087                           ; 0 bytes @ 0xD
  1088                           
  1089  0020                     ??_Digitron_Update:	
  1090  0020                     ??___fttol:	
  1091                           ; 0 bytes @ 0x0
  1092                           
  1093  0020                     ?___ftdiv:	
  1094                           ; 0 bytes @ 0x0
  1095                           
  1096  0020                     ?___ftmul:	
  1097                           ; 3 bytes @ 0x0
  1098                           
  1099  0020                     ?_atol:	
  1100                           ; 3 bytes @ 0x0
  1101                           
  1102  0020                     atoi@sign:	
  1103                           ; 4 bytes @ 0x0
  1104                           
  1105  0020                     ___ftdiv@f2:	
  1106                           ; 1 bytes @ 0x0
  1107                           
  1108  0020                     ___ftmul@f1:	
  1109                           ; 3 bytes @ 0x0
  1110                           
  1111                           
  1112                           ; 3 bytes @ 0x0
  1113  0020                     	ds	1
  1114  0021                     atoi@a:	
  1115  0021                     Digitron_Update@order_num:	
  1116                           ; 2 bytes @ 0x1
  1117                           
  1118                           
  1119                           ; 4 bytes @ 0x1
  1120  0021                     	ds	2
  1121  0023                     atoi@s:	
  1122  0023                     ___fttol@sign1:	
  1123                           ; 1 bytes @ 0x3
  1124                           
  1125  0023                     ___ftdiv@f1:	
  1126                           ; 1 bytes @ 0x3
  1127                           
  1128  0023                     ___ftmul@f2:	
  1129                           ; 3 bytes @ 0x3
  1130                           
  1131                           
  1132                           ; 3 bytes @ 0x3
  1133  0023                     	ds	1
  1134  0024                     ??_atol:	
  1135  0024                     ___fttol@lval:	
  1136                           ; 0 bytes @ 0x4
  1137                           
  1138                           
  1139                           ; 4 bytes @ 0x4
  1140  0024                     	ds	1
  1141  0025                     Digitron_Update@rider:	
  1142                           
  1143                           ; 1 bytes @ 0x5
  1144  0025                     	ds	1
  1145  0026                     ??___ftmul:	
  1146  0026                     Digitron_Update@i:	
  1147                           ; 0 bytes @ 0x6
  1148                           
  1149  0026                     ___ftdiv@cntr:	
  1150                           ; 1 bytes @ 0x6
  1151                           
  1152                           
  1153                           ; 1 bytes @ 0x6
  1154  0026                     	ds	1
  1155  0027                     ___ftdiv@f3:	
  1156                           
  1157                           ; 3 bytes @ 0x7
  1158  0027                     	ds	1
  1159  0028                     atol@sign:	
  1160  0028                     ___fttol@exp1:	
  1161                           ; 1 bytes @ 0x8
  1162                           
  1163                           
  1164                           ; 1 bytes @ 0x8
  1165  0028                     	ds	1
  1166  0029                     ?___altoft:	
  1167  0029                     ___ftmul@exp:	
  1168                           ; 3 bytes @ 0x9
  1169                           
  1170  0029                     atol@a:	
  1171                           ; 1 bytes @ 0x9
  1172                           
  1173  0029                     ___altoft@c:	
  1174                           ; 4 bytes @ 0x9
  1175                           
  1176                           
  1177                           ; 4 bytes @ 0x9
  1178  0029                     	ds	1
  1179  002A                     ___ftdiv@exp:	
  1180  002A                     ___ftmul@f3_as_product:	
  1181                           ; 1 bytes @ 0xA
  1182                           
  1183                           
  1184                           ; 3 bytes @ 0xA
  1185  002A                     	ds	1
  1186  002B                     ___ftdiv@sign:	
  1187                           
  1188                           ; 1 bytes @ 0xB
  1189  002B                     	ds	2
  1190  002D                     atol@s:	
  1191  002D                     ___ftmul@cntr:	
  1192                           ; 1 bytes @ 0xD
  1193                           
  1194  002D                     ___altoft@exp:	
  1195                           ; 1 bytes @ 0xD
  1196                           
  1197                           
  1198                           ; 1 bytes @ 0xD
  1199  002D                     	ds	1
  1200  002E                     atol@c:	
  1201  002E                     ___ftmul@sign:	
  1202                           ; 1 bytes @ 0xE
  1203                           
  1204  002E                     ___altoft@sign:	
  1205                           ; 1 bytes @ 0xE
  1206                           
  1207                           
  1208                           ; 1 bytes @ 0xE
  1209  002E                     	ds	1
  1210  002F                     ?___ftadd:	
  1211  002F                     ___ftadd@f1:	
  1212                           ; 3 bytes @ 0xF
  1213                           
  1214                           
  1215                           ; 3 bytes @ 0xF
  1216  002F                     	ds	3
  1217  0032                     ___ftadd@f2:	
  1218                           
  1219                           ; 3 bytes @ 0x12
  1220  0032                     	ds	3
  1221  0035                     ??___ftadd:	
  1222                           
  1223                           ; 0 bytes @ 0x15
  1224  0035                     	ds	3
  1225  0038                     ___ftadd@sign:	
  1226                           
  1227                           ; 1 bytes @ 0x18
  1228  0038                     	ds	1
  1229  0039                     ___ftadd@exp2:	
  1230                           
  1231                           ; 1 bytes @ 0x19
  1232  0039                     	ds	1
  1233  003A                     ___ftadd@exp1:	
  1234                           
  1235                           ; 1 bytes @ 0x1A
  1236  003A                     	ds	1
  1237  003B                     ?_floor:	
  1238  003B                     ?_ldexp:	
  1239                           ; 3 bytes @ 0x1B
  1240                           
  1241  003B                     ?___ftsub:	
  1242                           ; 3 bytes @ 0x1B
  1243                           
  1244  003B                     ___ftsub@f2:	
  1245                           ; 3 bytes @ 0x1B
  1246                           
  1247  003B                     floor@x:	
  1248                           ; 3 bytes @ 0x1B
  1249                           
  1250  003B                     ldexp@value:	
  1251                           ; 3 bytes @ 0x1B
  1252                           
  1253                           
  1254                           ; 3 bytes @ 0x1B
  1255  003B                     	ds	3
  1256  003E                     ldexp@newexp:	
  1257  003E                     ___ftsub@f1:	
  1258                           ; 2 bytes @ 0x1E
  1259                           
  1260  003E                     floor@i:	
  1261                           ; 3 bytes @ 0x1E
  1262                           
  1263                           
  1264                           ; 3 bytes @ 0x1E
  1265  003E                     	ds	2
  1266  0040                     ??_ldexp:	
  1267                           
  1268                           ; 0 bytes @ 0x20
  1269  0040                     	ds	1
  1270  0041                     floor@expon:	
  1271                           
  1272                           ; 2 bytes @ 0x21
  1273  0041                     	ds	1
  1274  0042                     _ldexp$3469:	
  1275                           
  1276                           ; 3 bytes @ 0x22
  1277  0042                     	ds	3
  1278  0045                     ?_eval_poly:	
  1279  0045                     eval_poly@x:	
  1280                           ; 3 bytes @ 0x25
  1281                           
  1282                           
  1283                           ; 3 bytes @ 0x25
  1284  0045                     	ds	3
  1285  0048                     eval_poly@d:	
  1286                           
  1287                           ; 1 bytes @ 0x28
  1288  0048                     	ds	1
  1289  0049                     eval_poly@n:	
  1290                           
  1291                           ; 2 bytes @ 0x29
  1292  0049                     	ds	2
  1293  004B                     ??_eval_poly:	
  1294                           
  1295                           ; 0 bytes @ 0x2B
  1296  004B                     	ds	2
  1297  004D                     eval_poly@res:	
  1298                           
  1299                           ; 3 bytes @ 0x2D
  1300  004D                     	ds	3
  1301  0050                     ?_log:	
  1302  0050                     log@x:	
  1303                           ; 3 bytes @ 0x30
  1304                           
  1305                           
  1306                           ; 3 bytes @ 0x30
  1307  0050                     	ds	3
  1308  0053                     log@exp:	
  1309                           
  1310                           ; 2 bytes @ 0x33
  1311  0053                     	ds	2
  1312  0055                     ?_exp:	
  1313  0055                     exp@x:	
  1314                           ; 3 bytes @ 0x35
  1315                           
  1316                           
  1317                           ; 3 bytes @ 0x35
  1318  0055                     	ds	3
  1319  0058                     _exp$3416:	
  1320                           
  1321                           ; 3 bytes @ 0x38
  1322  0058                     	ds	3
  1323  005B                     exp@exp:	
  1324                           
  1325                           ; 2 bytes @ 0x3B
  1326  005B                     	ds	2
  1327  005D                     exp@sign:	
  1328                           
  1329                           ; 1 bytes @ 0x3D
  1330  005D                     	ds	1
  1331  005E                     ?_sqrt:	
  1332  005E                     sqrt@y:	
  1333                           ; 3 bytes @ 0x3E
  1334                           
  1335                           
  1336                           ; 3 bytes @ 0x3E
  1337  005E                     	ds	3
  1338  0061                     ??_sqrt:	
  1339                           
  1340                           ; 0 bytes @ 0x41
  1341  0061                     	ds	3
  1342  0064                     sqrt@z:	
  1343                           
  1344                           ; 3 bytes @ 0x44
  1345  0064                     	ds	3
  1346  0067                     sqrt@i:	
  1347                           
  1348                           ; 1 bytes @ 0x47
  1349  0067                     	ds	1
  1350  0068                     sqrt@q:	
  1351                           
  1352                           ; 3 bytes @ 0x48
  1353  0068                     	ds	3
  1354  006B                     sqrt@x:	
  1355                           
  1356                           ; 3 bytes @ 0x4B
  1357  006B                     	ds	3
  1358  006E                     SerialService@tmp:	
  1359                           
  1360                           ; 1 bytes @ 0x4E
  1361  006E                     	ds	1
  1362                           
  1363                           	psect	maintext
  1364  0871                     __pmaintext:	
  1365 ;;Data sizes: Strings 131, constant 67, data 1, bss 140, persistent 0 stack 0
  1366 ;;Auto spaces:   Size  Autos    Used
  1367 ;; COMMON          13     13      13
  1368 ;; BANK0           80     79      80
  1369 ;; BANK1           80     61      78
  1370 ;; BANK3           85     20      79
  1371 ;; BANK2           96      0      64
  1372 ;;
  1373 ;; Pointer list with targets:
  1374 ;; i1Digitron_Display@que	PTR struct . size(1) Largest target is 14
  1375 ;;		 -> digitron3(BANK2[14]), digitron2(BANK3[14]), digitron1(BANK3[14]), 
  1376 ;;
  1377 ;; ?_frexp	PTR struct . size(1) Largest target is 0
  1378 ;;
  1379 ;; ?_ldexp	PTR struct . size(1) Largest target is 0
  1380 ;;
  1381 ;; ?_eval_poly	PTR struct . size(1) Largest target is 0
  1382 ;;
  1383 ;; ?_floor	PTR struct . size(1) Largest target is 0
  1384 ;;
  1385 ;; ?___awtoft	float  size(1) Largest target is 0
  1386 ;;
  1387 ;; ?___ftpack	float  size(1) Largest target is 0
  1388 ;;
  1389 ;; ?_strchr	PTR unsigned char  size(1) Largest target is 50
  1390 ;;		 -> NULL(NULL[0]), rcv_wifi(BANK2[50]), 
  1391 ;;
  1392 ;; ?_strncmp	int  size(1) Largest target is 10
  1393 ;;		 -> Analyze_GpsData@lo(COMMON[10]), Analyze_GpsData@la(COMMON[10]), 
  1394 ;;
  1395 ;; ?___ftsub	float  size(1) Largest target is 0
  1396 ;;
  1397 ;; ?_exp	float  size(1) Largest target is 0
  1398 ;;
  1399 ;; ?_log	float  size(1) Largest target is 0
  1400 ;;
  1401 ;; ?___lltoft	float  size(1) Largest target is 0
  1402 ;;
  1403 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1404 ;;
  1405 ;; ?___ftmul	float  size(1) Largest target is 0
  1406 ;;
  1407 ;; ?___ftneg	float  size(1) Largest target is 0
  1408 ;;
  1409 ;; ?___ftdiv	float  size(1) Largest target is 0
  1410 ;;
  1411 ;; ?___lmul	unsigned long  size(1) Largest target is 0
  1412 ;;
  1413 ;; ?___fttol	long  size(1) Largest target is 0
  1414 ;;
  1415 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1416 ;;
  1417 ;; ?___altoft	float  size(1) Largest target is 0
  1418 ;;
  1419 ;; ?___ftadd	float  size(1) Largest target is 0
  1420 ;;
  1421 ;; ?_sqrt	float  size(1) Largest target is 0
  1422 ;;
  1423 ;; ?_pow	float  size(1) Largest target is 0
  1424 ;;
  1425 ;; ?_atol	long  size(1) Largest target is 0
  1426 ;;
  1427 ;; ?_strstr	PTR unsigned char  size(1) Largest target is 50
  1428 ;;		 -> NULL(NULL[0]), rcv_wifi(BANK2[50]), 
  1429 ;;
  1430 ;; ?_atoi	int  size(1) Largest target is 0
  1431 ;;
  1432 ;; ?_strlen	unsigned int  size(2) Largest target is 50
  1433 ;;		 -> Analyze_GpsData@info(BANK0[50]), rcv_wifi(BANK2[50]), STR_17(CODE[3]), STR_15(CODE[3]), 
  1434 ;;		 -> STR_12(CODE[3]), STR_10(CODE[3]), STR_8(CODE[3]), STR_6(CODE[3]), 
  1435 ;;		 -> STR_4(CODE[3]), STR_2(CODE[3]), 
  1436 ;;
  1437 ;; eval_poly@d	PTR const  size(1) Largest target is 30
  1438 ;;		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 
  1439 ;;
  1440 ;; frexp@eptr	PTR int  size(1) Largest target is 2
  1441 ;;		 -> log@exp(BANK0[2]), floor@expon(BANK0[2]), 
  1442 ;;
  1443 ;; strncmp@s2	PTR const unsigned char  size(1) Largest target is 3
  1444 ;;		 -> STR_17(CODE[3]), STR_15(CODE[3]), STR_12(CODE[3]), STR_10(CODE[3]), 
  1445 ;;		 -> STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 
  1446 ;;
  1447 ;; strncmp@s1	PTR const unsigned char  size(1) Largest target is 50
  1448 ;;		 -> NULL(NULL[0]), rcv_wifi(BANK2[50]), 
  1449 ;;
  1450 ;; strchr@ptr	PTR const unsigned char  size(1) Largest target is 50
  1451 ;;		 -> NULL(NULL[0]), rcv_wifi(BANK2[50]), 
  1452 ;;
  1453 ;; sp__strchr	PTR unsigned char  size(1) Largest target is 50
  1454 ;;		 -> NULL(NULL[0]), rcv_wifi(BANK2[50]), 
  1455 ;;
  1456 ;; strstr@s2	PTR const unsigned char  size(1) Largest target is 3
  1457 ;;		 -> STR_17(CODE[3]), STR_15(CODE[3]), STR_12(CODE[3]), STR_10(CODE[3]), 
  1458 ;;		 -> STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 
  1459 ;;
  1460 ;; strstr@s1	PTR const unsigned char  size(1) Largest target is 50
  1461 ;;		 -> NULL(NULL[0]), rcv_wifi(BANK2[50]), 
  1462 ;;
  1463 ;; strlen@s	PTR const unsigned char  size(2) Largest target is 50
  1464 ;;		 -> Analyze_GpsData@info(BANK0[50]), rcv_wifi(BANK2[50]), STR_17(CODE[3]), STR_15(CODE[3]), 
  1465 ;;		 -> STR_12(CODE[3]), STR_10(CODE[3]), STR_8(CODE[3]), STR_6(CODE[3]), 
  1466 ;;		 -> STR_4(CODE[3]), STR_2(CODE[3]), 
  1467 ;;
  1468 ;; strlen@cp	PTR const unsigned char  size(2) Largest target is 50
  1469 ;;		 -> Analyze_GpsData@info(BANK0[50]), rcv_wifi(BANK2[50]), STR_17(CODE[3]), STR_15(CODE[3]), 
  1470 ;;		 -> STR_12(CODE[3]), STR_10(CODE[3]), STR_8(CODE[3]), STR_6(CODE[3]), 
  1471 ;;		 -> STR_4(CODE[3]), STR_2(CODE[3]), 
  1472 ;;
  1473 ;; atol@s	PTR const unsigned char  size(1) Largest target is 6
  1474 ;;		 -> Pos_meet@arr_rcv_longi(BANK1[6]), Pos_meet@arr_rcv_lati(BANK1[6]), 
  1475 ;;
  1476 ;; atoi@s	PTR const unsigned char  size(1) Largest target is 3
  1477 ;;		 -> arr_rcv_len(BANK3[3]), Get_GpsDataLen@len_arr(COMMON[3]), 
  1478 ;;
  1479 ;; queueArray_in@buf	PTR unsigned char  size(1) Largest target is 4
  1480 ;;		 -> Digitron_Update@order_num(BANK0[4]), 
  1481 ;;
  1482 ;; queueArray_in@Q	PTR struct . size(1) Largest target is 14
  1483 ;;		 -> digitron3(BANK2[14]), digitron2(BANK3[14]), digitron1(BANK3[14]), 
  1484 ;;
  1485 ;; queueArray_init@Q	PTR struct . size(1) Largest target is 14
  1486 ;;		 -> digitron3(BANK2[14]), digitron2(BANK3[14]), digitron1(BANK3[14]), 
  1487 ;;
  1488 ;; sp__strstr	PTR unsigned char  size(1) Largest target is 50
  1489 ;;		 -> NULL(NULL[0]), rcv_wifi(BANK2[50]), 
  1490 ;;
  1491 ;; Match@a	PTR const unsigned char  size(1) Largest target is 3
  1492 ;;		 -> STR_17(CODE[3]), STR_15(CODE[3]), STR_12(CODE[3]), STR_10(CODE[3]), 
  1493 ;;		 -> STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 
  1494 ;;
  1495 ;; sp__mid	PTR unsigned char  size(1) Largest target is 50
  1496 ;;		 -> Analyze_GpsData@lo(COMMON[10]), Analyze_GpsData@la(COMMON[10]), Analyze_GpsData@info(BANK0[50]), Get_GpsDataLen@
      +len_arr(COMMON[3]), 
  1497 ;;		 -> NULL(NULL[0]), 
  1498 ;;
  1499 ;; Send_ATComm@ret	PTR const unsigned char  size(1) Largest target is 3
  1500 ;;		 -> STR_17(CODE[3]), STR_15(CODE[3]), STR_12(CODE[3]), STR_10(CODE[3]), 
  1501 ;;		 -> STR_8(CODE[3]), STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 
  1502 ;;
  1503 ;; Send_ATComm@comm	PTR const unsigned char  size(1) Largest target is 30
  1504 ;;		 -> STR_16(CODE[16]), STR_14(CODE[22]), STR_11(CODE[30]), STR_9(CODE[14]), 
  1505 ;;		 -> STR_7(CODE[9]), STR_5(CODE[14]), STR_3(CODE[7]), STR_1(CODE[5]), 
  1506 ;;
  1507 ;; Uart_1SendStr@data_at	PTR const unsigned char  size(1) Largest target is 30
  1508 ;;		 -> STR_16(CODE[16]), STR_14(CODE[22]), STR_13(CODE[11]), STR_11(CODE[30]), 
  1509 ;;		 -> STR_9(CODE[14]), STR_7(CODE[9]), STR_5(CODE[14]), STR_3(CODE[7]), 
  1510 ;;		 -> STR_1(CODE[5]), 
  1511 ;;
  1512 ;; Digitron_Display@que	PTR struct . size(1) Largest target is 14
  1513 ;;		 -> digitron3(BANK2[14]), digitron2(BANK3[14]), digitron1(BANK3[14]), 
  1514 ;;
  1515 ;;
  1516 ;; Critical Paths under _main in COMMON
  1517 ;;
  1518 ;;   None.
  1519 ;;
  1520 ;; Critical Paths under _SerialService in COMMON
  1521 ;;
  1522 ;;   _pow->___lltoft
  1523 ;;   _exp->___fttol
  1524 ;;   _exp->___awtoft
  1525 ;;   _log->___awtoft
  1526 ;;   _sqrt->___lltoft
  1527 ;;   _Digitron_Update->i1_Digitron_Display
  1528 ;;   i1_Digitron_Display->i1_Digitron_Command
  1529 ;;   _floor->___fttol
  1530 ;;   ___ftsub->___awtoft
  1531 ;;   i1_Digitron_Command->i1_delay_us
  1532 ;;   ___lltoft->___ftpack
  1533 ;;   ___altoft->___fttol
  1534 ;;   ___awtoft->___ftpack
  1535 ;;   ___ftmul->___awtoft
  1536 ;;   ___ftdiv->___ftpack
  1537 ;;   ___ftadd->___fttol
  1538 ;;   ___ftadd->___awtoft
  1539 ;;   _atol->___lmul
  1540 ;;   _atoi->___wmul
  1541 ;;   ___fttol->___ftpack
  1542 ;;
  1543 ;; Critical Paths under _main in BANK0
  1544 ;;
  1545 ;;   None.
  1546 ;;
  1547 ;; Critical Paths under _SerialService in BANK0
  1548 ;;
  1549 ;;   _Calc_DistanceLevel->_sqrt
  1550 ;;   _pow->_sqrt
  1551 ;;   _exp->_log
  1552 ;;   _log->_eval_poly
  1553 ;;   _sqrt->_exp
  1554 ;;   _eval_poly->_ldexp
  1555 ;;   _floor->___ftadd
  1556 ;;   ___ftsub->___ftadd
  1557 ;;   _ldexp->___ftadd
  1558 ;;   ___altoft->___fttol
  1559 ;;   ___ftadd->___altoft
  1560 ;;   ___ftadd->___ftmul
  1561 ;;
  1562 ;; Critical Paths under _main in BANK1
  1563 ;;
  1564 ;;   None.
  1565 ;;
  1566 ;; Critical Paths under _SerialService in BANK1
  1567 ;;
  1568 ;;   _SerialService->_Pos_meet
  1569 ;;   _Pos_meet->_Distance_Update
  1570 ;;   _Distance_Update->_Calc_DistanceLevel
  1571 ;;   _Calc_DistanceLevel->_pow
  1572 ;;
  1573 ;; Critical Paths under _main in BANK3
  1574 ;;
  1575 ;;   _main->_Send_ATComm
  1576 ;;   _Send_ATComm->_Match
  1577 ;;   _Init_Digitrons->_Digitron_Display
  1578 ;;   _Match->_strstr
  1579 ;;   _Digitron_Display->_Digitron_Command
  1580 ;;   _strstr->_strncmp
  1581 ;;   _Uart_1SendStr->_UART_1SendOneByte
  1582 ;;   _Digitron_Command->_delay_us
  1583 ;;   _strncmp->_strlen
  1584 ;;
  1585 ;; Critical Paths under _SerialService in BANK3
  1586 ;;
  1587 ;;   None.
  1588 ;;
  1589 ;; Critical Paths under _main in BANK2
  1590 ;;
  1591 ;;   None.
  1592 ;;
  1593 ;; Critical Paths under _SerialService in BANK2
  1594 ;;
  1595 ;;   None.
  1596 ;;
  1597 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1598 ;;
  1599 ;;
  1600 ;;Call Graph Tables:
  1601 ;;
  1602 ;; ---------------------------------------------------------------------------------
  1603 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1604 ;; ---------------------------------------------------------------------------------
  1605 ;; (0) _main                                                 0     0      0    1863
  1606 ;;                     _Init_Digitrons
  1607 ;;                           _initUART
  1608 ;;                        _Init_Timer0
  1609 ;;                    _Interrupt_Gross
  1610 ;;                           _DelaySec
  1611 ;;                       _CleanWifiRcv
  1612 ;;                        _Send_ATComm
  1613 ;;                      _Uart_1SendStr
  1614 ;; ---------------------------------------------------------------------------------
  1615 ;; (1) _Send_ATComm                                          5     2      3     824
  1616 ;;                                             15 BANK3      5     2      3
  1617 ;;                      _Uart_1SendStr
  1618 ;;                           _DelaySec
  1619 ;;                              _Match
  1620 ;;                       _CleanWifiRcv
  1621 ;; ---------------------------------------------------------------------------------
  1622 ;; (1) _Init_Digitrons                                       0     0      0     859
  1623 ;;                    _queueArray_init
  1624 ;;                   _Digitron_Display
  1625 ;; ---------------------------------------------------------------------------------
  1626 ;; (2) _Match                                                1     1      0     510
  1627 ;;                                             14 BANK3      1     1      0
  1628 ;;                             _strstr
  1629 ;; ---------------------------------------------------------------------------------
  1630 ;; (2) _Digitron_Display                                     8     8      0     657
  1631 ;;                                              5 BANK3      8     8      0
  1632 ;;                   _Digitron_Command
  1633 ;;                 _Digitron_Send_8bit
  1634 ;; ---------------------------------------------------------------------------------
  1635 ;; (3) _strstr                                               2     1      1     488
  1636 ;;                                             12 BANK3      2     1      1
  1637 ;;                             _strlen
  1638 ;;                            _strncmp
  1639 ;;                             _strchr
  1640 ;; ---------------------------------------------------------------------------------
  1641 ;; (1) _Uart_1SendStr                                        1     1      0      67
  1642 ;;                                              1 BANK3      1     1      0
  1643 ;;                  _UART_1SendOneByte
  1644 ;; ---------------------------------------------------------------------------------
  1645 ;; (3) _Digitron_Command                                     2     1      1     227
  1646 ;;                                              3 BANK3      2     1      1
  1647 ;;                           _delay_us
  1648 ;;                 _Digitron_Send_8bit
  1649 ;; ---------------------------------------------------------------------------------
  1650 ;; (4) _strchr                                               3     1      2      88
  1651 ;;                                              0 BANK3      3     1      2
  1652 ;; ---------------------------------------------------------------------------------
  1653 ;; (4) _strncmp                                              6     3      3     134
  1654 ;;                                              6 BANK3      6     3      3
  1655 ;;                             _strlen (ARG)
  1656 ;; ---------------------------------------------------------------------------------
  1657 ;; (4) _strlen                                               6     4      2      89
  1658 ;;                                              0 BANK3      6     4      2
  1659 ;; ---------------------------------------------------------------------------------
  1660 ;; (2) _UART_1SendOneByte                                    1     1      0      22
  1661 ;;                                              0 BANK3      1     1      0
  1662 ;; ---------------------------------------------------------------------------------
  1663 ;; (2) _CleanWifiRcv                                         1     1      0      69
  1664 ;;                                              0 BANK3      1     1      0
  1665 ;; ---------------------------------------------------------------------------------
  1666 ;; (2) _DelaySec                                             2     2      0      22
  1667 ;;                                              0 BANK3      2     2      0
  1668 ;; ---------------------------------------------------------------------------------
  1669 ;; (1) _Interrupt_Gross                                      1     1      0      22
  1670 ;;                                              0 BANK3      1     1      0
  1671 ;; ---------------------------------------------------------------------------------
  1672 ;; (1) _Init_Timer0                                          0     0      0       0
  1673 ;; ---------------------------------------------------------------------------------
  1674 ;; (1) _initUART                                             0     0      0       0
  1675 ;; ---------------------------------------------------------------------------------
  1676 ;; (4) _delay_us                                             3     3      0     114
  1677 ;;                                              0 BANK3      3     3      0
  1678 ;; ---------------------------------------------------------------------------------
  1679 ;; (3) _Digitron_Send_8bit                                   2     2      0      69
  1680 ;;                                              0 BANK3      2     2      0
  1681 ;; ---------------------------------------------------------------------------------
  1682 ;; (2) _queueArray_init                                      6     6      0     202
  1683 ;;                                              0 BANK3      6     6      0
  1684 ;; ---------------------------------------------------------------------------------
  1685 ;; Estimated maximum stack depth 4
  1686 ;; ---------------------------------------------------------------------------------
  1687 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1688 ;; ---------------------------------------------------------------------------------
  1689 ;; (5) _SerialService                                        5     5      0   22342
  1690 ;;                                             78 BANK0      1     1      0
  1691 ;;                                             57 BANK1      4     4      0
  1692 ;;                           _Pos_meet
  1693 ;; ---------------------------------------------------------------------------------
  1694 ;; (6) _Pos_meet                                            20    20      0   22165
  1695 ;;                                             37 BANK1     20    20      0
  1696 ;;                               _atoi
  1697 ;;                               _atol
  1698 ;;                    _Distance_Update
  1699 ;;                    _Digitron_Update
  1700 ;;                        _CleanGpsRcv
  1701 ;; ---------------------------------------------------------------------------------
  1702 ;; (7) _Distance_Update                                     13    13      0   17785
  1703 ;;                                             24 BANK1     13    13      0
  1704 ;;                 _Calc_DistanceLevel
  1705 ;;                  _Register_SendData
  1706 ;; ---------------------------------------------------------------------------------
  1707 ;; (8) _Calc_DistanceLevel                                  10    10      0   17502
  1708 ;;                                             14 BANK1     10    10      0
  1709 ;;                           ___altoft
  1710 ;;                                _pow
  1711 ;;                            ___ftadd
  1712 ;;                               _sqrt
  1713 ;;                            ___fttol
  1714 ;;                            ___lwdiv
  1715 ;; ---------------------------------------------------------------------------------
  1716 ;; (9) _pow                                                 14     8      6   13461
  1717 ;;                                              0 BANK1     14     8      6
  1718 ;;                             ___ftge
  1719 ;;                            ___fttol
  1720 ;;                           ___lltoft
  1721 ;;                            ___ftneg
  1722 ;;                                _log
  1723 ;;                            ___ftmul
  1724 ;;                                _exp
  1725 ;;                               _sqrt (ARG)
  1726 ;; ---------------------------------------------------------------------------------
  1727 ;; (10) _exp                                                 9     6      3    7707
  1728 ;;                                             53 BANK0      9     6      3
  1729 ;;                             ___ftge
  1730 ;;                            ___ftneg
  1731 ;;                            ___ftmul
  1732 ;;                              _floor
  1733 ;;                            ___fttol
  1734 ;;                           ___awtoft
  1735 ;;                            ___ftsub
  1736 ;;                          _eval_poly
  1737 ;;                              _ldexp
  1738 ;;                            ___ftdiv
  1739 ;;                                _log (ARG)
  1740 ;; ---------------------------------------------------------------------------------
  1741 ;; (10) _log                                                 5     2      3    4171
  1742 ;;                                             48 BANK0      5     2      3
  1743 ;;                             ___ftge
  1744 ;;                              _frexp
  1745 ;;                            ___ftmul
  1746 ;;                            ___ftadd
  1747 ;;                          _eval_poly
  1748 ;;                           ___awtoft
  1749 ;; ---------------------------------------------------------------------------------
  1750 ;; (9) _sqrt                                                19    16      3    2139
  1751 ;;                                             62 BANK0     16    13      3
  1752 ;;                             ___ftge
  1753 ;;                            ___ftmul
  1754 ;;                            ___ftsub
  1755 ;;                            ___fttol (ARG)
  1756 ;;                           ___lltoft (ARG)
  1757 ;;                            ___ftneg (ARG)
  1758 ;;                                _log (ARG)
  1759 ;;                                _exp (ARG)
  1760 ;;                           ___altoft (ARG)
  1761 ;; ---------------------------------------------------------------------------------
  1762 ;; (7) _Digitron_Update                                      7     7      0    2757
  1763 ;;                                              0 BANK0      7     7      0
  1764 ;;                      _queueArray_in
  1765 ;;                 i1_Digitron_Display
  1766 ;; ---------------------------------------------------------------------------------
  1767 ;; (8) i1_Digitron_Display                                   8     8      0    2155
  1768 ;;                                              5 COMMON     8     8      0
  1769 ;;                 i1_Digitron_Command
  1770 ;;               i1_Digitron_Send_8bit
  1771 ;; ---------------------------------------------------------------------------------
  1772 ;; (11) _eval_poly                                          11     5      6    1762
  1773 ;;                                             37 BANK0     11     5      6
  1774 ;;                            ___ftmul
  1775 ;;                            ___ftadd
  1776 ;;                              _ldexp (ARG)
  1777 ;; ---------------------------------------------------------------------------------
  1778 ;; (11) _floor                                               8     5      3    2259
  1779 ;;                                             27 BANK0      8     5      3
  1780 ;;                              _frexp
  1781 ;;                             ___ftge
  1782 ;;                            ___fttol
  1783 ;;                           ___altoft
  1784 ;;                            ___ftadd
  1785 ;; ---------------------------------------------------------------------------------
  1786 ;; (10) ___ftsub                                             6     0      6    1094
  1787 ;;                                             27 BANK0      6     0      6
  1788 ;;                            ___ftadd
  1789 ;;                           ___awtoft (ARG)
  1790 ;; ---------------------------------------------------------------------------------
  1791 ;; (9) i1_Digitron_Command                                   2     1      1     744
  1792 ;;                                              3 COMMON     2     1      1
  1793 ;;                         i1_delay_us
  1794 ;;               i1_Digitron_Send_8bit
  1795 ;; ---------------------------------------------------------------------------------
  1796 ;; (11) _ldexp                                              10     5      5     453
  1797 ;;                                             27 BANK0     10     5      5
  1798 ;;                             ___ftge
  1799 ;;                            ___ftneg
  1800 ;;                            ___ftmul (ARG)
  1801 ;;                            ___ftadd (ARG)
  1802 ;; ---------------------------------------------------------------------------------
  1803 ;; (10) ___lltoft                                            5     1      4     278
  1804 ;;                                              8 COMMON     5     1      4
  1805 ;;                           ___ftpack
  1806 ;; ---------------------------------------------------------------------------------
  1807 ;; (12) ___altoft                                            6     2      4     347
  1808 ;;                                              9 BANK0      6     2      4
  1809 ;;                           ___ftpack
  1810 ;;                            ___fttol (ARG)
  1811 ;; ---------------------------------------------------------------------------------
  1812 ;; (11) ___awtoft                                            4     1      3     300
  1813 ;;                                              8 COMMON     4     1      3
  1814 ;;                           ___ftpack
  1815 ;; ---------------------------------------------------------------------------------
  1816 ;; (10) ___ftmul                                            15     9      6     535
  1817 ;;                                              0 BANK0     15     9      6
  1818 ;;                           ___ftpack
  1819 ;;                              _frexp (ARG)
  1820 ;;                           ___awtoft (ARG)
  1821 ;; ---------------------------------------------------------------------------------
  1822 ;; (11) ___ftdiv                                            15     9      6     489
  1823 ;;                                              8 COMMON     3     3      0
  1824 ;;                                              0 BANK0     12     6      6
  1825 ;;                           ___ftpack
  1826 ;; ---------------------------------------------------------------------------------
  1827 ;; (11) ___ftadd                                            12     6      6    1049
  1828 ;;                                             15 BANK0     12     6      6
  1829 ;;                           ___ftpack
  1830 ;;                           ___altoft (ARG)
  1831 ;;                            ___fttol (ARG)
  1832 ;;                            ___ftmul (ARG)
  1833 ;;                              _frexp (ARG)
  1834 ;;                           ___awtoft (ARG)
  1835 ;; ---------------------------------------------------------------------------------
  1836 ;; (7) _atol                                                15    11      4     480
  1837 ;;                                              0 BANK0     15    11      4
  1838 ;;                             ___lmul
  1839 ;;                            _isdigit
  1840 ;; ---------------------------------------------------------------------------------
  1841 ;; (7) _atoi                                                 8     6      2     388
  1842 ;;                                              6 COMMON     4     2      2
  1843 ;;                                              0 BANK0      4     4      0
  1844 ;;                             ___wmul
  1845 ;;                            _isdigit
  1846 ;; ---------------------------------------------------------------------------------
  1847 ;; (10) i1_delay_us                                          3     3      0     373
  1848 ;;                                              0 COMMON     3     3      0
  1849 ;; ---------------------------------------------------------------------------------
  1850 ;; (9) i1_Digitron_Send_8bit                                 2     2      0     225
  1851 ;;                                              0 COMMON     2     2      0
  1852 ;; ---------------------------------------------------------------------------------
  1853 ;; (12) _frexp                                               6     2      4     224
  1854 ;;                                              0 COMMON     6     2      4
  1855 ;; ---------------------------------------------------------------------------------
  1856 ;; (10) ___ftge                                              6     0      6     136
  1857 ;;                                              0 COMMON     6     0      6
  1858 ;; ---------------------------------------------------------------------------------
  1859 ;; (12) ___ftneg                                             3     0      3      45
  1860 ;;                                              0 COMMON     3     0      3
  1861 ;; ---------------------------------------------------------------------------------
  1862 ;; (9) ___fttol                                             13     9      4     252
  1863 ;;                                              8 COMMON     4     0      4
  1864 ;;                                              0 BANK0      9     9      0
  1865 ;;                           ___ftpack (ARG)
  1866 ;; ---------------------------------------------------------------------------------
  1867 ;; (8) ___lmul                                              12     4      8      92
  1868 ;;                                              0 COMMON    12     4      8
  1869 ;; ---------------------------------------------------------------------------------
  1870 ;; (12) ___ftpack                                            8     3      5     209
  1871 ;;                                              0 COMMON     8     3      5
  1872 ;; ---------------------------------------------------------------------------------
  1873 ;; (9) ___lwdiv                                              7     3      4     162
  1874 ;;                                              0 COMMON     7     3      4
  1875 ;; ---------------------------------------------------------------------------------
  1876 ;; (8) ___wmul                                               6     2      4      92
  1877 ;;                                              0 COMMON     6     2      4
  1878 ;; ---------------------------------------------------------------------------------
  1879 ;; (8) _isdigit                                              2     2      0      68
  1880 ;;                                              0 COMMON     2     2      0
  1881 ;; ---------------------------------------------------------------------------------
  1882 ;; (7) _CleanGpsRcv                                          1     1      0     273
  1883 ;;                                              0 COMMON     1     1      0
  1884 ;; ---------------------------------------------------------------------------------
  1885 ;; (8) _queueArray_in                                        8     7      1     398
  1886 ;;                                              0 COMMON     8     7      1
  1887 ;; ---------------------------------------------------------------------------------
  1888 ;; (8) _Register_SendData                                    4     1      3      69
  1889 ;;                                              0 COMMON     4     1      3
  1890 ;; ---------------------------------------------------------------------------------
  1891 ;; Estimated maximum stack depth 12
  1892 ;; ---------------------------------------------------------------------------------
  1893 ;; Call Graph Graphs:
  1894 ;; _main (ROOT)
  1895 ;;   _Init_Digitrons
  1896 ;;     _queueArray_init
  1897 ;;     _Digitron_Display
  1898 ;;       _Digitron_Command
  1899 ;;         _delay_us
  1900 ;;         _Digitron_Send_8bit
  1901 ;;       _Digitron_Send_8bit
  1902 ;;   _initUART
  1903 ;;   _Init_Timer0
  1904 ;;   _Interrupt_Gross
  1905 ;;   _DelaySec
  1906 ;;   _CleanWifiRcv
  1907 ;;   _Send_ATComm
  1908 ;;     _Uart_1SendStr
  1909 ;;       _UART_1SendOneByte
  1910 ;;     _DelaySec
  1911 ;;     _Match
  1912 ;;       _strstr
  1913 ;;         _strlen
  1914 ;;         _strncmp
  1915 ;;           _strlen (ARG)
  1916 ;;         _strchr
  1917 ;;     _CleanWifiRcv
  1918 ;;   _Uart_1SendStr
  1919 ;;     _UART_1SendOneByte
  1920 ;;
  1921 ;; _SerialService (ROOT)
  1922 ;;   _Pos_meet
  1923 ;;     _atoi
  1924 ;;       ___wmul
  1925 ;;       _isdigit
  1926 ;;     _atol
  1927 ;;       ___lmul
  1928 ;;       _isdigit
  1929 ;;     _Distance_Update
  1930 ;;       _Calc_DistanceLevel
  1931 ;;         ___altoft
  1932 ;;           ___ftpack
  1933 ;;           ___fttol (ARG)
  1934 ;;             ___ftpack (ARG)
  1935 ;;         _pow
  1936 ;;           ___ftge
  1937 ;;           ___fttol
  1938 ;;             ___ftpack (ARG)
  1939 ;;           ___lltoft
  1940 ;;             ___ftpack
  1941 ;;           ___ftneg
  1942 ;;           _log
  1943 ;;             ___ftge
  1944 ;;             _frexp
  1945 ;;             ___ftmul
  1946 ;;               ___ftpack
  1947 ;;               _frexp (ARG)
  1948 ;;               ___awtoft (ARG)
  1949 ;;                 ___ftpack
  1950 ;;             ___ftadd
  1951 ;;               ___ftpack
  1952 ;;               ___altoft (ARG)
  1953 ;;                 ___ftpack
  1954 ;;                 ___fttol (ARG)
  1955 ;;                   ___ftpack (ARG)
  1956 ;;               ___fttol (ARG)
  1957 ;;                 ___ftpack (ARG)
  1958 ;;               ___ftmul (ARG)
  1959 ;;                 ___ftpack
  1960 ;;                 _frexp (ARG)
  1961 ;;                 ___awtoft (ARG)
  1962 ;;                   ___ftpack
  1963 ;;               _frexp (ARG)
  1964 ;;               ___awtoft (ARG)
  1965 ;;                 ___ftpack
  1966 ;;             _eval_poly
  1967 ;;               ___ftmul
  1968 ;;                 ___ftpack
  1969 ;;                 _frexp (ARG)
  1970 ;;                 ___awtoft (ARG)
  1971 ;;                   ___ftpack
  1972 ;;               ___ftadd
  1973 ;;                 ___ftpack
  1974 ;;                 ___altoft (ARG)
  1975 ;;                   ___ftpack
  1976 ;;                   ___fttol (ARG)
  1977 ;;                     ___ftpack (ARG)
  1978 ;;                 ___fttol (ARG)
  1979 ;;                   ___ftpack (ARG)
  1980 ;;                 ___ftmul (ARG)
  1981 ;;                   ___ftpack
  1982 ;;                   _frexp (ARG)
  1983 ;;                   ___awtoft (ARG)
  1984 ;;                     ___ftpack
  1985 ;;                 _frexp (ARG)
  1986 ;;                 ___awtoft (ARG)
  1987 ;;                   ___ftpack
  1988 ;;               _ldexp (ARG)
  1989 ;;                 ___ftge
  1990 ;;                 ___ftneg
  1991 ;;                 ___ftmul (ARG)
  1992 ;;                   ___ftpack
  1993 ;;                   _frexp (ARG)
  1994 ;;                   ___awtoft (ARG)
  1995 ;;                     ___ftpack
  1996 ;;                 ___ftadd (ARG)
  1997 ;;                   ___ftpack
  1998 ;;                   ___altoft (ARG)
  1999 ;;                     ___ftpack
  2000 ;;                     ___fttol (ARG)
  2001 ;;                       ___ftpack (ARG)
  2002 ;;                   ___fttol (ARG)
  2003 ;;                     ___ftpack (ARG)
  2004 ;;                   ___ftmul (ARG)
  2005 ;;                     ___ftpack
  2006 ;;                     _frexp (ARG)
  2007 ;;                     ___awtoft (ARG)
  2008 ;;                       ___ftpack
  2009 ;;                   _frexp (ARG)
  2010 ;;                   ___awtoft (ARG)
  2011 ;;                     ___ftpack
  2012 ;;             ___awtoft
  2013 ;;               ___ftpack
  2014 ;;           ___ftmul
  2015 ;;             ___ftpack
  2016 ;;             _frexp (ARG)
  2017 ;;             ___awtoft (ARG)
  2018 ;;               ___ftpack
  2019 ;;           _exp
  2020 ;;             ___ftge
  2021 ;;             ___ftneg
  2022 ;;             ___ftmul
  2023 ;;               ___ftpack
  2024 ;;               _frexp (ARG)
  2025 ;;               ___awtoft (ARG)
  2026 ;;                 ___ftpack
  2027 ;;             _floor
  2028 ;;               _frexp
  2029 ;;               ___ftge
  2030 ;;               ___fttol
  2031 ;;                 ___ftpack (ARG)
  2032 ;;               ___altoft
  2033 ;;                 ___ftpack
  2034 ;;                 ___fttol (ARG)
  2035 ;;                   ___ftpack (ARG)
  2036 ;;               ___ftadd
  2037 ;;                 ___ftpack
  2038 ;;                 ___altoft (ARG)
  2039 ;;                   ___ftpack
  2040 ;;                   ___fttol (ARG)
  2041 ;;                     ___ftpack (ARG)
  2042 ;;                 ___fttol (ARG)
  2043 ;;                   ___ftpack (ARG)
  2044 ;;                 ___ftmul (ARG)
  2045 ;;                   ___ftpack
  2046 ;;                   _frexp (ARG)
  2047 ;;                   ___awtoft (ARG)
  2048 ;;                     ___ftpack
  2049 ;;                 _frexp (ARG)
  2050 ;;                 ___awtoft (ARG)
  2051 ;;                   ___ftpack
  2052 ;;             ___fttol
  2053 ;;               ___ftpack (ARG)
  2054 ;;             ___awtoft
  2055 ;;               ___ftpack
  2056 ;;             ___ftsub
  2057 ;;               ___ftadd
  2058 ;;                 ___ftpack
  2059 ;;                 ___altoft (ARG)
  2060 ;;                   ___ftpack
  2061 ;;                   ___fttol (ARG)
  2062 ;;                     ___ftpack (ARG)
  2063 ;;                 ___fttol (ARG)
  2064 ;;                   ___ftpack (ARG)
  2065 ;;                 ___ftmul (ARG)
  2066 ;;                   ___ftpack
  2067 ;;                   _frexp (ARG)
  2068 ;;                   ___awtoft (ARG)
  2069 ;;                     ___ftpack
  2070 ;;                 _frexp (ARG)
  2071 ;;                 ___awtoft (ARG)
  2072 ;;                   ___ftpack
  2073 ;;               ___awtoft (ARG)
  2074 ;;                 ___ftpack
  2075 ;;             _eval_poly
  2076 ;;               ___ftmul
  2077 ;;                 ___ftpack
  2078 ;;                 _frexp (ARG)
  2079 ;;                 ___awtoft (ARG)
  2080 ;;                   ___ftpack
  2081 ;;               ___ftadd
  2082 ;;                 ___ftpack
  2083 ;;                 ___altoft (ARG)
  2084 ;;                   ___ftpack
  2085 ;;                   ___fttol (ARG)
  2086 ;;                     ___ftpack (ARG)
  2087 ;;                 ___fttol (ARG)
  2088 ;;                   ___ftpack (ARG)
  2089 ;;                 ___ftmul (ARG)
  2090 ;;                   ___ftpack
  2091 ;;                   _frexp (ARG)
  2092 ;;                   ___awtoft (ARG)
  2093 ;;                     ___ftpack
  2094 ;;                 _frexp (ARG)
  2095 ;;                 ___awtoft (ARG)
  2096 ;;                   ___ftpack
  2097 ;;               _ldexp (ARG)
  2098 ;;                 ___ftge
  2099 ;;                 ___ftneg
  2100 ;;                 ___ftmul (ARG)
  2101 ;;                   ___ftpack
  2102 ;;                   _frexp (ARG)
  2103 ;;                   ___awtoft (ARG)
  2104 ;;                     ___ftpack
  2105 ;;                 ___ftadd (ARG)
  2106 ;;                   ___ftpack
  2107 ;;                   ___altoft (ARG)
  2108 ;;                     ___ftpack
  2109 ;;                     ___fttol (ARG)
  2110 ;;                       ___ftpack (ARG)
  2111 ;;                   ___fttol (ARG)
  2112 ;;                     ___ftpack (ARG)
  2113 ;;                   ___ftmul (ARG)
  2114 ;;                     ___ftpack
  2115 ;;                     _frexp (ARG)
  2116 ;;                     ___awtoft (ARG)
  2117 ;;                       ___ftpack
  2118 ;;                   _frexp (ARG)
  2119 ;;                   ___awtoft (ARG)
  2120 ;;                     ___ftpack
  2121 ;;             _ldexp
  2122 ;;               ___ftge
  2123 ;;               ___ftneg
  2124 ;;               ___ftmul (ARG)
  2125 ;;                 ___ftpack
  2126 ;;                 _frexp (ARG)
  2127 ;;                 ___awtoft (ARG)
  2128 ;;                   ___ftpack
  2129 ;;               ___ftadd (ARG)
  2130 ;;                 ___ftpack
  2131 ;;                 ___altoft (ARG)
  2132 ;;                   ___ftpack
  2133 ;;                   ___fttol (ARG)
  2134 ;;                     ___ftpack (ARG)
  2135 ;;                 ___fttol (ARG)
  2136 ;;                   ___ftpack (ARG)
  2137 ;;                 ___ftmul (ARG)
  2138 ;;                   ___ftpack
  2139 ;;                   _frexp (ARG)
  2140 ;;                   ___awtoft (ARG)
  2141 ;;                     ___ftpack
  2142 ;;                 _frexp (ARG)
  2143 ;;                 ___awtoft (ARG)
  2144 ;;                   ___ftpack
  2145 ;;             ___ftdiv
  2146 ;;               ___ftpack
  2147 ;;             _log (ARG)
  2148 ;;               ___ftge
  2149 ;;               _frexp
  2150 ;;               ___ftmul
  2151 ;;                 ___ftpack
  2152 ;;                 _frexp (ARG)
  2153 ;;                 ___awtoft (ARG)
  2154 ;;                   ___ftpack
  2155 ;;               ___ftadd
  2156 ;;                 ___ftpack
  2157 ;;                 ___altoft (ARG)
  2158 ;;                   ___ftpack
  2159 ;;                   ___fttol (ARG)
  2160 ;;                     ___ftpack (ARG)
  2161 ;;                 ___fttol (ARG)
  2162 ;;                   ___ftpack (ARG)
  2163 ;;                 ___ftmul (ARG)
  2164 ;;                   ___ftpack
  2165 ;;                   _frexp (ARG)
  2166 ;;                   ___awtoft (ARG)
  2167 ;;                     ___ftpack
  2168 ;;                 _frexp (ARG)
  2169 ;;                 ___awtoft (ARG)
  2170 ;;                   ___ftpack
  2171 ;;               _eval_poly
  2172 ;;                 ___ftmul
  2173 ;;                   ___ftpack
  2174 ;;                   _frexp (ARG)
  2175 ;;                   ___awtoft (ARG)
  2176 ;;                     ___ftpack
  2177 ;;                 ___ftadd
  2178 ;;                   ___ftpack
  2179 ;;                   ___altoft (ARG)
  2180 ;;                     ___ftpack
  2181 ;;                     ___fttol (ARG)
  2182 ;;                       ___ftpack (ARG)
  2183 ;;                   ___fttol (ARG)
  2184 ;;                     ___ftpack (ARG)
  2185 ;;                   ___ftmul (ARG)
  2186 ;;                     ___ftpack
  2187 ;;                     _frexp (ARG)
  2188 ;;                     ___awtoft (ARG)
  2189 ;;                       ___ftpack
  2190 ;;                   _frexp (ARG)
  2191 ;;                   ___awtoft (ARG)
  2192 ;;                     ___ftpack
  2193 ;;                 _ldexp (ARG)
  2194 ;;                   ___ftge
  2195 ;;                   ___ftneg
  2196 ;;                   ___ftmul (ARG)
  2197 ;;                     ___ftpack
  2198 ;;                     _frexp (ARG)
  2199 ;;                     ___awtoft (ARG)
  2200 ;;                       ___ftpack
  2201 ;;                   ___ftadd (ARG)
  2202 ;;                     ___ftpack
  2203 ;;                     ___altoft (ARG)
  2204 ;;                       ___ftpack
  2205 ;;                       ___fttol (ARG)
  2206 ;;                         ___ftpack (ARG)
  2207 ;;                     ___fttol (ARG)
  2208 ;;                       ___ftpack (ARG)
  2209 ;;                     ___ftmul (ARG)
  2210 ;;                       ___ftpack
  2211 ;;                       _frexp (ARG)
  2212 ;;                       ___awtoft (ARG)
  2213 ;;                         ___ftpack
  2214 ;;                     _frexp (ARG)
  2215 ;;                     ___awtoft (ARG)
  2216 ;;                       ___ftpack
  2217 ;;               ___awtoft
  2218 ;;                 ___ftpack
  2219 ;;           _sqrt (ARG)
  2220 ;;             ___ftge
  2221 ;;             ___ftmul
  2222 ;;               ___ftpack
  2223 ;;               _frexp (ARG)
  2224 ;;               ___awtoft (ARG)
  2225 ;;                 ___ftpack
  2226 ;;             ___ftsub
  2227 ;;               ___ftadd
  2228 ;;                 ___ftpack
  2229 ;;                 ___altoft (ARG)
  2230 ;;                   ___ftpack
  2231 ;;                   ___fttol (ARG)
  2232 ;;                     ___ftpack (ARG)
  2233 ;;                 ___fttol (ARG)
  2234 ;;                   ___ftpack (ARG)
  2235 ;;                 ___ftmul (ARG)
  2236 ;;                   ___ftpack
  2237 ;;                   _frexp (ARG)
  2238 ;;                   ___awtoft (ARG)
  2239 ;;                     ___ftpack
  2240 ;;                 _frexp (ARG)
  2241 ;;                 ___awtoft (ARG)
  2242 ;;                   ___ftpack
  2243 ;;               ___awtoft (ARG)
  2244 ;;                 ___ftpack
  2245 ;;             ___fttol (ARG)
  2246 ;;               ___ftpack (ARG)
  2247 ;;             ___lltoft (ARG)
  2248 ;;               ___ftpack
  2249 ;;             ___ftneg (ARG)
  2250 ;;             _log (ARG)
  2251 ;;               ___ftge
  2252 ;;               _frexp
  2253 ;;               ___ftmul
  2254 ;;                 ___ftpack
  2255 ;;                 _frexp (ARG)
  2256 ;;                 ___awtoft (ARG)
  2257 ;;                   ___ftpack
  2258 ;;               ___ftadd
  2259 ;;                 ___ftpack
  2260 ;;                 ___altoft (ARG)
  2261 ;;                   ___ftpack
  2262 ;;                   ___fttol (ARG)
  2263 ;;                     ___ftpack (ARG)
  2264 ;;                 ___fttol (ARG)
  2265 ;;                   ___ftpack (ARG)
  2266 ;;                 ___ftmul (ARG)
  2267 ;;                   ___ftpack
  2268 ;;                   _frexp (ARG)
  2269 ;;                   ___awtoft (ARG)
  2270 ;;                     ___ftpack
  2271 ;;                 _frexp (ARG)
  2272 ;;                 ___awtoft (ARG)
  2273 ;;                   ___ftpack
  2274 ;;               _eval_poly
  2275 ;;                 ___ftmul
  2276 ;;                   ___ftpack
  2277 ;;                   _frexp (ARG)
  2278 ;;                   ___awtoft (ARG)
  2279 ;;                     ___ftpack
  2280 ;;                 ___ftadd
  2281 ;;                   ___ftpack
  2282 ;;                   ___altoft (ARG)
  2283 ;;                     ___ftpack
  2284 ;;                     ___fttol (ARG)
  2285 ;;                       ___ftpack (ARG)
  2286 ;;                   ___fttol (ARG)
  2287 ;;                     ___ftpack (ARG)
  2288 ;;                   ___ftmul (ARG)
  2289 ;;                     ___ftpack
  2290 ;;                     _frexp (ARG)
  2291 ;;                     ___awtoft (ARG)
  2292 ;;                       ___ftpack
  2293 ;;                   _frexp (ARG)
  2294 ;;                   ___awtoft (ARG)
  2295 ;;                     ___ftpack
  2296 ;;                 _ldexp (ARG)
  2297 ;;                   ___ftge
  2298 ;;                   ___ftneg
  2299 ;;                   ___ftmul (ARG)
  2300 ;;                     ___ftpack
  2301 ;;                     _frexp (ARG)
  2302 ;;                     ___awtoft (ARG)
  2303 ;;                       ___ftpack
  2304 ;;                   ___ftadd (ARG)
  2305 ;;                     ___ftpack
  2306 ;;                     ___altoft (ARG)
  2307 ;;                       ___ftpack
  2308 ;;                       ___fttol (ARG)
  2309 ;;                         ___ftpack (ARG)
  2310 ;;                     ___fttol (ARG)
  2311 ;;                       ___ftpack (ARG)
  2312 ;;                     ___ftmul (ARG)
  2313 ;;                       ___ftpack
  2314 ;;                       _frexp (ARG)
  2315 ;;                       ___awtoft (ARG)
  2316 ;;                         ___ftpack
  2317 ;;                     _frexp (ARG)
  2318 ;;                     ___awtoft (ARG)
  2319 ;;                       ___ftpack
  2320 ;;               ___awtoft
  2321 ;;                 ___ftpack
  2322 ;;             _exp (ARG)
  2323 ;;               ___ftge
  2324 ;;               ___ftneg
  2325 ;;               ___ftmul
  2326 ;;                 ___ftpack
  2327 ;;                 _frexp (ARG)
  2328 ;;                 ___awtoft (ARG)
  2329 ;;                   ___ftpack
  2330 ;;               _floor
  2331 ;;                 _frexp
  2332 ;;                 ___ftge
  2333 ;;                 ___fttol
  2334 ;;                   ___ftpack (ARG)
  2335 ;;                 ___altoft
  2336 ;;                   ___ftpack
  2337 ;;                   ___fttol (ARG)
  2338 ;;                     ___ftpack (ARG)
  2339 ;;                 ___ftadd
  2340 ;;                   ___ftpack
  2341 ;;                   ___altoft (ARG)
  2342 ;;                     ___ftpack
  2343 ;;                     ___fttol (ARG)
  2344 ;;                       ___ftpack (ARG)
  2345 ;;                   ___fttol (ARG)
  2346 ;;                     ___ftpack (ARG)
  2347 ;;                   ___ftmul (ARG)
  2348 ;;                     ___ftpack
  2349 ;;                     _frexp (ARG)
  2350 ;;                     ___awtoft (ARG)
  2351 ;;                       ___ftpack
  2352 ;;                   _frexp (ARG)
  2353 ;;                   ___awtoft (ARG)
  2354 ;;                     ___ftpack
  2355 ;;               ___fttol
  2356 ;;                 ___ftpack (ARG)
  2357 ;;               ___awtoft
  2358 ;;                 ___ftpack
  2359 ;;               ___ftsub
  2360 ;;                 ___ftadd
  2361 ;;                   ___ftpack
  2362 ;;                   ___altoft (ARG)
  2363 ;;                     ___ftpack
  2364 ;;                     ___fttol (ARG)
  2365 ;;                       ___ftpack (ARG)
  2366 ;;                   ___fttol (ARG)
  2367 ;;                     ___ftpack (ARG)
  2368 ;;                   ___ftmul (ARG)
  2369 ;;                     ___ftpack
  2370 ;;                     _frexp (ARG)
  2371 ;;                     ___awtoft (ARG)
  2372 ;;                       ___ftpack
  2373 ;;                   _frexp (ARG)
  2374 ;;                   ___awtoft (ARG)
  2375 ;;                     ___ftpack
  2376 ;;                 ___awtoft (ARG)
  2377 ;;                   ___ftpack
  2378 ;;               _eval_poly
  2379 ;;                 ___ftmul
  2380 ;;                   ___ftpack
  2381 ;;                   _frexp (ARG)
  2382 ;;                   ___awtoft (ARG)
  2383 ;;                     ___ftpack
  2384 ;;                 ___ftadd
  2385 ;;                   ___ftpack
  2386 ;;                   ___altoft (ARG)
  2387 ;;                     ___ftpack
  2388 ;;                     ___fttol (ARG)
  2389 ;;                       ___ftpack (ARG)
  2390 ;;                   ___fttol (ARG)
  2391 ;;                     ___ftpack (ARG)
  2392 ;;                   ___ftmul (ARG)
  2393 ;;                     ___ftpack
  2394 ;;                     _frexp (ARG)
  2395 ;;                     ___awtoft (ARG)
  2396 ;;                       ___ftpack
  2397 ;;                   _frexp (ARG)
  2398 ;;                   ___awtoft (ARG)
  2399 ;;                     ___ftpack
  2400 ;;                 _ldexp (ARG)
  2401 ;;                   ___ftge
  2402 ;;                   ___ftneg
  2403 ;;                   ___ftmul (ARG)
  2404 ;;                     ___ftpack
  2405 ;;                     _frexp (ARG)
  2406 ;;                     ___awtoft (ARG)
  2407 ;;                       ___ftpack
  2408 ;;                   ___ftadd (ARG)
  2409 ;;                     ___ftpack
  2410 ;;                     ___altoft (ARG)
  2411 ;;                       ___ftpack
  2412 ;;                       ___fttol (ARG)
  2413 ;;                         ___ftpack (ARG)
  2414 ;;                     ___fttol (ARG)
  2415 ;;                       ___ftpack (ARG)
  2416 ;;                     ___ftmul (ARG)
  2417 ;;                       ___ftpack
  2418 ;;                       _frexp (ARG)
  2419 ;;                       ___awtoft (ARG)
  2420 ;;                         ___ftpack
  2421 ;;                     _frexp (ARG)
  2422 ;;                     ___awtoft (ARG)
  2423 ;;                       ___ftpack
  2424 ;;               _ldexp
  2425 ;;                 ___ftge
  2426 ;;                 ___ftneg
  2427 ;;                 ___ftmul (ARG)
  2428 ;;                   ___ftpack
  2429 ;;                   _frexp (ARG)
  2430 ;;                   ___awtoft (ARG)
  2431 ;;                     ___ftpack
  2432 ;;                 ___ftadd (ARG)
  2433 ;;                   ___ftpack
  2434 ;;                   ___altoft (ARG)
  2435 ;;                     ___ftpack
  2436 ;;                     ___fttol (ARG)
  2437 ;;                       ___ftpack (ARG)
  2438 ;;                   ___fttol (ARG)
  2439 ;;                     ___ftpack (ARG)
  2440 ;;                   ___ftmul (ARG)
  2441 ;;                     ___ftpack
  2442 ;;                     _frexp (ARG)
  2443 ;;                     ___awtoft (ARG)
  2444 ;;                       ___ftpack
  2445 ;;                   _frexp (ARG)
  2446 ;;                   ___awtoft (ARG)
  2447 ;;                     ___ftpack
  2448 ;;               ___ftdiv
  2449 ;;                 ___ftpack
  2450 ;;               _log (ARG)
  2451 ;;                 ___ftge
  2452 ;;                 _frexp
  2453 ;;                 ___ftmul
  2454 ;;                   ___ftpack
  2455 ;;                   _frexp (ARG)
  2456 ;;                   ___awtoft (ARG)
  2457 ;;                     ___ftpack
  2458 ;;                 ___ftadd
  2459 ;;                   ___ftpack
  2460 ;;                   ___altoft (ARG)
  2461 ;;                     ___ftpack
  2462 ;;                     ___fttol (ARG)
  2463 ;;                       ___ftpack (ARG)
  2464 ;;                   ___fttol (ARG)
  2465 ;;                     ___ftpack (ARG)
  2466 ;;                   ___ftmul (ARG)
  2467 ;;                     ___ftpack
  2468 ;;                     _frexp (ARG)
  2469 ;;                     ___awtoft (ARG)
  2470 ;;                       ___ftpack
  2471 ;;                   _frexp (ARG)
  2472 ;;                   ___awtoft (ARG)
  2473 ;;                     ___ftpack
  2474 ;;                 _eval_poly
  2475 ;;                   ___ftmul
  2476 ;;                     ___ftpack
  2477 ;;                     _frexp (ARG)
  2478 ;;                     ___awtoft (ARG)
  2479 ;;                       ___ftpack
  2480 ;;                   ___ftadd
  2481 ;;                     ___ftpack
  2482 ;;                     ___altoft (ARG)
  2483 ;;                       ___ftpack
  2484 ;;                       ___fttol (ARG)
  2485 ;;                         ___ftpack (ARG)
  2486 ;;                     ___fttol (ARG)
  2487 ;;                       ___ftpack (ARG)
  2488 ;;                     ___ftmul (ARG)
  2489 ;;                       ___ftpack
  2490 ;;                       _frexp (ARG)
  2491 ;;                       ___awtoft (ARG)
  2492 ;;                         ___ftpack
  2493 ;;                     _frexp (ARG)
  2494 ;;                     ___awtoft (ARG)
  2495 ;;                       ___ftpack
  2496 ;;                   _ldexp (ARG)
  2497 ;;                     ___ftge
  2498 ;;                     ___ftneg
  2499 ;;                     ___ftmul (ARG)
  2500 ;;                       ___ftpack
  2501 ;;                       _frexp (ARG)
  2502 ;;                       ___awtoft (ARG)
  2503 ;;                         ___ftpack
  2504 ;;                     ___ftadd (ARG)
  2505 ;;                       ___ftpack
  2506 ;;                       ___altoft (ARG)
  2507 ;;                         ___ftpack
  2508 ;;                         ___fttol (ARG)
  2509 ;;                           ___ftpack (ARG)
  2510 ;;                       ___fttol (ARG)
  2511 ;;                         ___ftpack (ARG)
  2512 ;;                       ___ftmul (ARG)
  2513 ;;                         ___ftpack
  2514 ;;                         _frexp (ARG)
  2515 ;;                         ___awtoft (ARG)
  2516 ;;                           ___ftpack
  2517 ;;                       _frexp (ARG)
  2518 ;;                       ___awtoft (ARG)
  2519 ;;                         ___ftpack
  2520 ;;                 ___awtoft
  2521 ;;                   ___ftpack
  2522 ;;             ___altoft (ARG)
  2523 ;;               ___ftpack
  2524 ;;               ___fttol (ARG)
  2525 ;;                 ___ftpack (ARG)
  2526 ;;         ___ftadd
  2527 ;;           ___ftpack
  2528 ;;           ___altoft (ARG)
  2529 ;;             ___ftpack
  2530 ;;             ___fttol (ARG)
  2531 ;;               ___ftpack (ARG)
  2532 ;;           ___fttol (ARG)
  2533 ;;             ___ftpack (ARG)
  2534 ;;           ___ftmul (ARG)
  2535 ;;             ___ftpack
  2536 ;;             _frexp (ARG)
  2537 ;;             ___awtoft (ARG)
  2538 ;;               ___ftpack
  2539 ;;           _frexp (ARG)
  2540 ;;           ___awtoft (ARG)
  2541 ;;             ___ftpack
  2542 ;;         _sqrt
  2543 ;;           ___ftge
  2544 ;;           ___ftmul
  2545 ;;             ___ftpack
  2546 ;;             _frexp (ARG)
  2547 ;;             ___awtoft (ARG)
  2548 ;;               ___ftpack
  2549 ;;           ___ftsub
  2550 ;;             ___ftadd
  2551 ;;               ___ftpack
  2552 ;;               ___altoft (ARG)
  2553 ;;                 ___ftpack
  2554 ;;                 ___fttol (ARG)
  2555 ;;                   ___ftpack (ARG)
  2556 ;;               ___fttol (ARG)
  2557 ;;                 ___ftpack (ARG)
  2558 ;;               ___ftmul (ARG)
  2559 ;;                 ___ftpack
  2560 ;;                 _frexp (ARG)
  2561 ;;                 ___awtoft (ARG)
  2562 ;;                   ___ftpack
  2563 ;;               _frexp (ARG)
  2564 ;;               ___awtoft (ARG)
  2565 ;;                 ___ftpack
  2566 ;;             ___awtoft (ARG)
  2567 ;;               ___ftpack
  2568 ;;           ___fttol (ARG)
  2569 ;;             ___ftpack (ARG)
  2570 ;;           ___lltoft (ARG)
  2571 ;;             ___ftpack
  2572 ;;           ___ftneg (ARG)
  2573 ;;           _log (ARG)
  2574 ;;             ___ftge
  2575 ;;             _frexp
  2576 ;;             ___ftmul
  2577 ;;               ___ftpack
  2578 ;;               _frexp (ARG)
  2579 ;;               ___awtoft (ARG)
  2580 ;;                 ___ftpack
  2581 ;;             ___ftadd
  2582 ;;               ___ftpack
  2583 ;;               ___altoft (ARG)
  2584 ;;                 ___ftpack
  2585 ;;                 ___fttol (ARG)
  2586 ;;                   ___ftpack (ARG)
  2587 ;;               ___fttol (ARG)
  2588 ;;                 ___ftpack (ARG)
  2589 ;;               ___ftmul (ARG)
  2590 ;;                 ___ftpack
  2591 ;;                 _frexp (ARG)
  2592 ;;                 ___awtoft (ARG)
  2593 ;;                   ___ftpack
  2594 ;;               _frexp (ARG)
  2595 ;;               ___awtoft (ARG)
  2596 ;;                 ___ftpack
  2597 ;;             _eval_poly
  2598 ;;               ___ftmul
  2599 ;;                 ___ftpack
  2600 ;;                 _frexp (ARG)
  2601 ;;                 ___awtoft (ARG)
  2602 ;;                   ___ftpack
  2603 ;;               ___ftadd
  2604 ;;                 ___ftpack
  2605 ;;                 ___altoft (ARG)
  2606 ;;                   ___ftpack
  2607 ;;                   ___fttol (ARG)
  2608 ;;                     ___ftpack (ARG)
  2609 ;;                 ___fttol (ARG)
  2610 ;;                   ___ftpack (ARG)
  2611 ;;                 ___ftmul (ARG)
  2612 ;;                   ___ftpack
  2613 ;;                   _frexp (ARG)
  2614 ;;                   ___awtoft (ARG)
  2615 ;;                     ___ftpack
  2616 ;;                 _frexp (ARG)
  2617 ;;                 ___awtoft (ARG)
  2618 ;;                   ___ftpack
  2619 ;;               _ldexp (ARG)
  2620 ;;                 ___ftge
  2621 ;;                 ___ftneg
  2622 ;;                 ___ftmul (ARG)
  2623 ;;                   ___ftpack
  2624 ;;                   _frexp (ARG)
  2625 ;;                   ___awtoft (ARG)
  2626 ;;                     ___ftpack
  2627 ;;                 ___ftadd (ARG)
  2628 ;;                   ___ftpack
  2629 ;;                   ___altoft (ARG)
  2630 ;;                     ___ftpack
  2631 ;;                     ___fttol (ARG)
  2632 ;;                       ___ftpack (ARG)
  2633 ;;                   ___fttol (ARG)
  2634 ;;                     ___ftpack (ARG)
  2635 ;;                   ___ftmul (ARG)
  2636 ;;                     ___ftpack
  2637 ;;                     _frexp (ARG)
  2638 ;;                     ___awtoft (ARG)
  2639 ;;                       ___ftpack
  2640 ;;                   _frexp (ARG)
  2641 ;;                   ___awtoft (ARG)
  2642 ;;                     ___ftpack
  2643 ;;             ___awtoft
  2644 ;;               ___ftpack
  2645 ;;           _exp (ARG)
  2646 ;;             ___ftge
  2647 ;;             ___ftneg
  2648 ;;             ___ftmul
  2649 ;;               ___ftpack
  2650 ;;               _frexp (ARG)
  2651 ;;               ___awtoft (ARG)
  2652 ;;                 ___ftpack
  2653 ;;             _floor
  2654 ;;               _frexp
  2655 ;;               ___ftge
  2656 ;;               ___fttol
  2657 ;;                 ___ftpack (ARG)
  2658 ;;               ___altoft
  2659 ;;                 ___ftpack
  2660 ;;                 ___fttol (ARG)
  2661 ;;                   ___ftpack (ARG)
  2662 ;;               ___ftadd
  2663 ;;                 ___ftpack
  2664 ;;                 ___altoft (ARG)
  2665 ;;                   ___ftpack
  2666 ;;                   ___fttol (ARG)
  2667 ;;                     ___ftpack (ARG)
  2668 ;;                 ___fttol (ARG)
  2669 ;;                   ___ftpack (ARG)
  2670 ;;                 ___ftmul (ARG)
  2671 ;;                   ___ftpack
  2672 ;;                   _frexp (ARG)
  2673 ;;                   ___awtoft (ARG)
  2674 ;;                     ___ftpack
  2675 ;;                 _frexp (ARG)
  2676 ;;                 ___awtoft (ARG)
  2677 ;;                   ___ftpack
  2678 ;;             ___fttol
  2679 ;;               ___ftpack (ARG)
  2680 ;;             ___awtoft
  2681 ;;               ___ftpack
  2682 ;;             ___ftsub
  2683 ;;               ___ftadd
  2684 ;;                 ___ftpack
  2685 ;;                 ___altoft (ARG)
  2686 ;;                   ___ftpack
  2687 ;;                   ___fttol (ARG)
  2688 ;;                     ___ftpack (ARG)
  2689 ;;                 ___fttol (ARG)
  2690 ;;                   ___ftpack (ARG)
  2691 ;;                 ___ftmul (ARG)
  2692 ;;                   ___ftpack
  2693 ;;                   _frexp (ARG)
  2694 ;;                   ___awtoft (ARG)
  2695 ;;                     ___ftpack
  2696 ;;                 _frexp (ARG)
  2697 ;;                 ___awtoft (ARG)
  2698 ;;                   ___ftpack
  2699 ;;               ___awtoft (ARG)
  2700 ;;                 ___ftpack
  2701 ;;             _eval_poly
  2702 ;;               ___ftmul
  2703 ;;                 ___ftpack
  2704 ;;                 _frexp (ARG)
  2705 ;;                 ___awtoft (ARG)
  2706 ;;                   ___ftpack
  2707 ;;               ___ftadd
  2708 ;;                 ___ftpack
  2709 ;;                 ___altoft (ARG)
  2710 ;;                   ___ftpack
  2711 ;;                   ___fttol (ARG)
  2712 ;;                     ___ftpack (ARG)
  2713 ;;                 ___fttol (ARG)
  2714 ;;                   ___ftpack (ARG)
  2715 ;;                 ___ftmul (ARG)
  2716 ;;                   ___ftpack
  2717 ;;                   _frexp (ARG)
  2718 ;;                   ___awtoft (ARG)
  2719 ;;                     ___ftpack
  2720 ;;                 _frexp (ARG)
  2721 ;;                 ___awtoft (ARG)
  2722 ;;                   ___ftpack
  2723 ;;               _ldexp (ARG)
  2724 ;;                 ___ftge
  2725 ;;                 ___ftneg
  2726 ;;                 ___ftmul (ARG)
  2727 ;;                   ___ftpack
  2728 ;;                   _frexp (ARG)
  2729 ;;                   ___awtoft (ARG)
  2730 ;;                     ___ftpack
  2731 ;;                 ___ftadd (ARG)
  2732 ;;                   ___ftpack
  2733 ;;                   ___altoft (ARG)
  2734 ;;                     ___ftpack
  2735 ;;                     ___fttol (ARG)
  2736 ;;                       ___ftpack (ARG)
  2737 ;;                   ___fttol (ARG)
  2738 ;;                     ___ftpack (ARG)
  2739 ;;                   ___ftmul (ARG)
  2740 ;;                     ___ftpack
  2741 ;;                     _frexp (ARG)
  2742 ;;                     ___awtoft (ARG)
  2743 ;;                       ___ftpack
  2744 ;;                   _frexp (ARG)
  2745 ;;                   ___awtoft (ARG)
  2746 ;;                     ___ftpack
  2747 ;;             _ldexp
  2748 ;;               ___ftge
  2749 ;;               ___ftneg
  2750 ;;               ___ftmul (ARG)
  2751 ;;                 ___ftpack
  2752 ;;                 _frexp (ARG)
  2753 ;;                 ___awtoft (ARG)
  2754 ;;                   ___ftpack
  2755 ;;               ___ftadd (ARG)
  2756 ;;                 ___ftpack
  2757 ;;                 ___altoft (ARG)
  2758 ;;                   ___ftpack
  2759 ;;                   ___fttol (ARG)
  2760 ;;                     ___ftpack (ARG)
  2761 ;;                 ___fttol (ARG)
  2762 ;;                   ___ftpack (ARG)
  2763 ;;                 ___ftmul (ARG)
  2764 ;;                   ___ftpack
  2765 ;;                   _frexp (ARG)
  2766 ;;                   ___awtoft (ARG)
  2767 ;;                     ___ftpack
  2768 ;;                 _frexp (ARG)
  2769 ;;                 ___awtoft (ARG)
  2770 ;;                   ___ftpack
  2771 ;;             ___ftdiv
  2772 ;;               ___ftpack
  2773 ;;             _log (ARG)
  2774 ;;               ___ftge
  2775 ;;               _frexp
  2776 ;;               ___ftmul
  2777 ;;                 ___ftpack
  2778 ;;                 _frexp (ARG)
  2779 ;;                 ___awtoft (ARG)
  2780 ;;                   ___ftpack
  2781 ;;               ___ftadd
  2782 ;;                 ___ftpack
  2783 ;;                 ___altoft (ARG)
  2784 ;;                   ___ftpack
  2785 ;;                   ___fttol (ARG)
  2786 ;;                     ___ftpack (ARG)
  2787 ;;                 ___fttol (ARG)
  2788 ;;                   ___ftpack (ARG)
  2789 ;;                 ___ftmul (ARG)
  2790 ;;                   ___ftpack
  2791 ;;                   _frexp (ARG)
  2792 ;;                   ___awtoft (ARG)
  2793 ;;                     ___ftpack
  2794 ;;                 _frexp (ARG)
  2795 ;;                 ___awtoft (ARG)
  2796 ;;                   ___ftpack
  2797 ;;               _eval_poly
  2798 ;;                 ___ftmul
  2799 ;;                   ___ftpack
  2800 ;;                   _frexp (ARG)
  2801 ;;                   ___awtoft (ARG)
  2802 ;;                     ___ftpack
  2803 ;;                 ___ftadd
  2804 ;;                   ___ftpack
  2805 ;;                   ___altoft (ARG)
  2806 ;;                     ___ftpack
  2807 ;;                     ___fttol (ARG)
  2808 ;;                       ___ftpack (ARG)
  2809 ;;                   ___fttol (ARG)
  2810 ;;                     ___ftpack (ARG)
  2811 ;;                   ___ftmul (ARG)
  2812 ;;                     ___ftpack
  2813 ;;                     _frexp (ARG)
  2814 ;;                     ___awtoft (ARG)
  2815 ;;                       ___ftpack
  2816 ;;                   _frexp (ARG)
  2817 ;;                   ___awtoft (ARG)
  2818 ;;                     ___ftpack
  2819 ;;                 _ldexp (ARG)
  2820 ;;                   ___ftge
  2821 ;;                   ___ftneg
  2822 ;;                   ___ftmul (ARG)
  2823 ;;                     ___ftpack
  2824 ;;                     _frexp (ARG)
  2825 ;;                     ___awtoft (ARG)
  2826 ;;                       ___ftpack
  2827 ;;                   ___ftadd (ARG)
  2828 ;;                     ___ftpack
  2829 ;;                     ___altoft (ARG)
  2830 ;;                       ___ftpack
  2831 ;;                       ___fttol (ARG)
  2832 ;;                         ___ftpack (ARG)
  2833 ;;                     ___fttol (ARG)
  2834 ;;                       ___ftpack (ARG)
  2835 ;;                     ___ftmul (ARG)
  2836 ;;                       ___ftpack
  2837 ;;                       _frexp (ARG)
  2838 ;;                       ___awtoft (ARG)
  2839 ;;                         ___ftpack
  2840 ;;                     _frexp (ARG)
  2841 ;;                     ___awtoft (ARG)
  2842 ;;                       ___ftpack
  2843 ;;               ___awtoft
  2844 ;;                 ___ftpack
  2845 ;;           ___altoft (ARG)
  2846 ;;             ___ftpack
  2847 ;;             ___fttol (ARG)
  2848 ;;               ___ftpack (ARG)
  2849 ;;         ___fttol
  2850 ;;           ___ftpack (ARG)
  2851 ;;         ___lwdiv
  2852 ;;       _Register_SendData
  2853 ;;     _Digitron_Update
  2854 ;;       _queueArray_in
  2855 ;;       i1_Digitron_Display
  2856 ;;         i1_Digitron_Command
  2857 ;;           i1_delay_us
  2858 ;;           i1_Digitron_Send_8bit
  2859 ;;         i1_Digitron_Send_8bit
  2860 ;;     _CleanGpsRcv
  2861 ;;
  2862 ;; Address spaces:
  2863 ;;Name               Size   Autos  Total    Cost      Usage
  2864 ;;BANK3               55     14      4F       9       92.9%
  2865 ;;BITBANK3            55      0       0       8        0.0%
  2866 ;;SFR3                 0      0       0       4        0.0%
  2867 ;;BITSFR3              0      0       0       4        0.0%
  2868 ;;BANK2               60      0      40      11       66.7%
  2869 ;;BITBANK2            60      0       0      10        0.0%
  2870 ;;SFR2                 0      0       0       5        0.0%
  2871 ;;BITSFR2              0      0       0       5        0.0%
  2872 ;;SFR1                 0      0       0       2        0.0%
  2873 ;;BITSFR1              0      0       0       2        0.0%
  2874 ;;BANK1               50     3D      4E       7       97.5%
  2875 ;;BITBANK1            50      0       0       6        0.0%
  2876 ;;CODE                 0      0       0       0        0.0%
  2877 ;;DATA                 0      0     150      12        0.0%
  2878 ;;ABS                  0      0     13A       3        0.0%
  2879 ;;NULL                 0      0       0       0        0.0%
  2880 ;;STACK                0      0      16       2        0.0%
  2881 ;;BANK0               50     4F      50       5      100.0%
  2882 ;;BITBANK0            50      0       0       4        0.0%
  2883 ;;SFR0                 0      0       0       1        0.0%
  2884 ;;BITSFR0              0      0       0       1        0.0%
  2885 ;;COMMON               D      D       D       1      100.0%
  2886 ;;BITCOMMON            D      0       0       0        0.0%
  2887 ;;EEDATA             100      0       0       0        0.0%
  2888                           
  2889                           
  2890 ;; *************** function _main *****************
  2891 ;; Defined at:
  2892 ;;		line 15 in file "main.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;		None
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;		None
  2897 ;; Return value:  Size  Location     Type
  2898 ;;		None               void
  2899 ;; Registers used:
  2900 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 17F/0
  2903 ;;		On exit  : 40/0
  2904 ;;		Unchanged: FFE00/0
  2905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2906 ;;      Params:         0       0       0       0       0
  2907 ;;      Locals:         0       0       0       0       0
  2908 ;;      Temps:          0       0       0       0       0
  2909 ;;      Totals:         0       0       0       0       0
  2910 ;;Total ram usage:        0 bytes
  2911 ;; Hardware stack levels required when called:   13
  2912 ;; This function calls:
  2913 ;;		_Init_Digitrons
  2914 ;;		_initUART
  2915 ;;		_Init_Timer0
  2916 ;;		_Interrupt_Gross
  2917 ;;		_DelaySec
  2918 ;;		_CleanWifiRcv
  2919 ;;		_Send_ATComm
  2920 ;;		_Uart_1SendStr
  2921 ;; This function is called by:
  2922 ;;		Startup code after reset
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925  0871                     _main:	
  2926                           
  2927                           ;main.c: 16: TRISA = 0x00;
  2928                           
  2929 ;; hardware stack exceeded
  2930                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2931  0871  1683               	bsf	3,5	;RP0=1, select bank1
  2932  0872  0185               	clrf	5	;volatile
  2933                           
  2934                           ;main.c: 17: TRISB = 0x01;
  2935  0873  3001               	movlw	1
  2936  0874  0086               	movwf	6	;volatile
  2937                           
  2938                           ;main.c: 18: TRISD = 0x00;
  2939  0875  0188               	clrf	8	;volatile
  2940                           
  2941                           ;main.c: 19: TRISE = 0x00;
  2942  0876  0189               	clrf	9	;volatile
  2943                           
  2944                           ;main.c: 20: PORTA = 0x00;
  2945  0877  1283               	bcf	3,5	;RP0=0, select bank0
  2946  0878  0185               	clrf	5	;volatile
  2947                           
  2948                           ;main.c: 21: Init_Digitrons();
  2949  0879  120A  158A  2142   	fcall	_Init_Digitrons
      +       120A  158A         
  2950                           
  2951                           ;main.c: 22: initUART();
  2952  087E  160A  118A  2752   	fcall	_initUART
      +       120A  158A         
  2953                           
  2954                           ;main.c: 23: Init_Timer0();
  2955  0883  160A  118A  2743   	fcall	_Init_Timer0
      +       120A  158A         
  2956                           
  2957                           ;main.c: 24: Interrupt_Gross(1);
  2958  0888  3001               	movlw	1
  2959  0889  120A  158A  2000   	fcall	_Interrupt_Gross
      +       120A  158A         
  2960                           
  2961                           ;main.c: 26: DelaySec(3);
  2962  088E  3003               	movlw	3
  2963  088F  120A  158A  2238   	fcall	_DelaySec
      +       120A  158A         
  2964                           
  2965                           ;main.c: 27: CleanWifiRcv();
  2966  0894  120A  158A  224E   	fcall	_CleanWifiRcv
      +       120A  158A         
  2967                           
  2968                           ;main.c: 30: if(!Send_ATComm("AT\r\n", "OK", 7, 1))
  2969  0899  30C4               	movlw	(STR_2-__stringbase)& (0+255)
  2970  089A  1683               	bsf	3,5	;RP0=1, select bank3
  2971  089B  1703               	bsf	3,6	;RP1=1, select bank3
  2972  089C  00DA               	movwf	?_Send_ATComm^(0+384)
  2973  089D  3007               	movlw	7
  2974  089E  00DB               	movwf	(?_Send_ATComm^(0+384)+1)
  2975  089F  01DC               	clrf	(?_Send_ATComm^(0+384)+2)
  2976  08A0  0ADC               	incf	(?_Send_ATComm^(0+384)+2),f
  2977  08A1  30BF               	movlw	(STR_1-__stringbase)& (0+255)
  2978  08A2  120A  158A  2216   	fcall	_Send_ATComm
      +       120A  158A         
  2979  08A7  3800               	iorlw	0
  2980  08A8  1D03               	skipz
  2981  08A9  28AD               	goto	l9123
  2982                           
  2983                           ;main.c: 31: {
  2984                           ;main.c: 32: PORTA=0x01;
  2985  08AA  3001               	movlw	1
  2986  08AB  0085               	movwf	5	;volatile
  2987  08AC                     l2312:	
  2988  08AC  28AC               	goto	l2312
  2989  08AD                     l9123:	
  2990                           
  2991                           ;main.c: 34: }
  2992                           ;main.c: 38: Send_ATComm("ATE0\r\n", "OK", 1, 1);
  2993  08AD  30C4               	movlw	(STR_2-__stringbase)& (0+255)
  2994  08AE  1683               	bsf	3,5	;RP0=1, select bank3
  2995  08AF  1703               	bsf	3,6	;RP1=1, select bank3
  2996  08B0  00DA               	movwf	?_Send_ATComm^(0+384)
  2997  08B1  01DB               	clrf	(?_Send_ATComm^(0+384)+1)
  2998  08B2  0ADB               	incf	(?_Send_ATComm^(0+384)+1),f
  2999  08B3  01DC               	clrf	(?_Send_ATComm^(0+384)+2)
  3000  08B4  0ADC               	incf	(?_Send_ATComm^(0+384)+2),f
  3001  08B5  30B8               	movlw	(STR_3-__stringbase)& (0+255)
  3002  08B6  120A  158A  2216   	fcall	_Send_ATComm
      +       120A  158A         
  3003                           
  3004                           ;main.c: 40: if(!Send_ATComm("AT+CWMODE=1\r\n", "OK", 1, 0))
  3005  08BB  30C4               	movlw	(STR_2-__stringbase)& (0+255)
  3006  08BC  1683               	bsf	3,5	;RP0=1, select bank3
  3007  08BD  1703               	bsf	3,6	;RP1=1, select bank3
  3008  08BE  00DA               	movwf	?_Send_ATComm^(0+384)
  3009  08BF  01DB               	clrf	(?_Send_ATComm^(0+384)+1)
  3010  08C0  0ADB               	incf	(?_Send_ATComm^(0+384)+1),f
  3011  08C1  01DC               	clrf	(?_Send_ATComm^(0+384)+2)
  3012  08C2  3088               	movlw	(STR_5-__stringbase)& (0+255)
  3013  08C3  120A  158A  2216   	fcall	_Send_ATComm
      +       120A  158A         
  3014  08C8  3800               	iorlw	0
  3015  08C9  1D03               	skipz
  3016  08CA  28CE               	goto	l9127
  3017                           
  3018                           ;main.c: 41: {
  3019                           ;main.c: 43: PORTA=0x01;
  3020  08CB  3001               	movlw	1
  3021  08CC  0085               	movwf	5	;volatile
  3022  08CD                     l2316:	
  3023  08CD  28CD               	goto	l2316
  3024  08CE                     l9127:	
  3025                           
  3026                           ;main.c: 45: }
  3027                           ;main.c: 46: Send_ATComm("AT+RST\r\n", "OK", 1, 0);
  3028  08CE  30C4               	movlw	(STR_2-__stringbase)& (0+255)
  3029  08CF  1683               	bsf	3,5	;RP0=1, select bank3
  3030  08D0  1703               	bsf	3,6	;RP1=1, select bank3
  3031  08D1  00DA               	movwf	?_Send_ATComm^(0+384)
  3032  08D2  01DB               	clrf	(?_Send_ATComm^(0+384)+1)
  3033  08D3  0ADB               	incf	(?_Send_ATComm^(0+384)+1),f
  3034  08D4  01DC               	clrf	(?_Send_ATComm^(0+384)+2)
  3035  08D5  30AF               	movlw	(STR_7-__stringbase)& (0+255)
  3036  08D6  120A  158A  2216   	fcall	_Send_ATComm
      +       120A  158A         
  3037                           
  3038                           ;main.c: 47: DelaySec(3);
  3039  08DB  3003               	movlw	3
  3040  08DC  120A  158A  2238   	fcall	_DelaySec
      +       120A  158A         
  3041                           
  3042                           ;main.c: 50: if(!Send_ATComm("AT+CIPMUX=1\r\n", "OK", 3, 0))
  3043  08E1  30C4               	movlw	(STR_2-__stringbase)& (0+255)
  3044  08E2  1683               	bsf	3,5	;RP0=1, select bank3
  3045  08E3  1703               	bsf	3,6	;RP1=1, select bank3
  3046  08E4  00DA               	movwf	?_Send_ATComm^(0+384)
  3047  08E5  3003               	movlw	3
  3048  08E6  00DB               	movwf	(?_Send_ATComm^(0+384)+1)
  3049  08E7  01DC               	clrf	(?_Send_ATComm^(0+384)+2)
  3050  08E8  3096               	movlw	(STR_9-__stringbase)& (0+255)
  3051  08E9  120A  158A  2216   	fcall	_Send_ATComm
      +       120A  158A         
  3052  08EE  3800               	iorlw	0
  3053  08EF  1D03               	skipz
  3054  08F0  28F4               	goto	l9135
  3055                           
  3056                           ;main.c: 51: {
  3057                           ;main.c: 53: PORTA=0x01;
  3058  08F1  3001               	movlw	1
  3059  08F2  0085               	movwf	5	;volatile
  3060  08F3                     l2320:	
  3061  08F3  28F3               	goto	l2320
  3062  08F4                     l9135:	
  3063                           
  3064                           ;main.c: 55: }
  3065                           ;main.c: 59: if(!Send_ATComm("AT+CWJAP=\"deet\",\"172210086\"\r\n", "OK", 10, 0))
  3066  08F4  30C4               	movlw	(STR_2-__stringbase)& (0+255)
  3067  08F5  1683               	bsf	3,5	;RP0=1, select bank3
  3068  08F6  1703               	bsf	3,6	;RP1=1, select bank3
  3069  08F7  00DA               	movwf	?_Send_ATComm^(0+384)
  3070  08F8  300A               	movlw	10
  3071  08F9  00DB               	movwf	(?_Send_ATComm^(0+384)+1)
  3072  08FA  01DC               	clrf	(?_Send_ATComm^(0+384)+2)
  3073  08FB  3044               	movlw	(STR_11-__stringbase)& (0+255)
  3074  08FC  120A  158A  2216   	fcall	_Send_ATComm
      +       120A  158A         
  3075  0901  3800               	iorlw	0
  3076  0902  1D03               	skipz
  3077  0903  2907               	goto	l9139
  3078                           
  3079                           ;main.c: 60: {
  3080                           ;main.c: 62: PORTA=0x01;
  3081  0904  3001               	movlw	1
  3082  0905  0085               	movwf	5	;volatile
  3083  0906                     l2324:	
  3084  0906  2906               	goto	l2324
  3085  0907                     l9139:	
  3086                           
  3087                           ;main.c: 64: }
  3088                           ;main.c: 74: Uart_1SendStr("AT+CIFSR\r\n");
  3089  0907  30A4               	movlw	(STR_13-__stringbase)& (0+255)
  3090  0908  120A  158A  2260   	fcall	_Uart_1SendStr
      +       120A  158A         
  3091                           
  3092                           ;main.c: 75: DelaySec(1);
  3093  090D  3001               	movlw	1
  3094  090E  120A  158A  2238   	fcall	_DelaySec
      +       120A  158A         
  3095                           
  3096                           ;main.c: 76: CleanWifiRcv();
  3097  0913  120A  158A  224E   	fcall	_CleanWifiRcv
      +       120A  158A         
  3098                           
  3099                           ;main.c: 79: if(!Send_ATComm("AT+CIPSERVER=1,1592\r\n", "OK", 3, 0))
  3100  0918  30C4               	movlw	(STR_2-__stringbase)& (0+255)
  3101  0919  1683               	bsf	3,5	;RP0=1, select bank3
  3102  091A  1703               	bsf	3,6	;RP1=1, select bank3
  3103  091B  00DA               	movwf	?_Send_ATComm^(0+384)
  3104  091C  3003               	movlw	3
  3105  091D  00DB               	movwf	(?_Send_ATComm^(0+384)+1)
  3106  091E  01DC               	clrf	(?_Send_ATComm^(0+384)+2)
  3107  091F  3062               	movlw	(STR_14-__stringbase)& (0+255)
  3108  0920  120A  158A  2216   	fcall	_Send_ATComm
      +       120A  158A         
  3109  0925  3800               	iorlw	0
  3110  0926  1D03               	skipz
  3111  0927  292B               	goto	l9149
  3112                           
  3113                           ;main.c: 80: {
  3114                           ;main.c: 82: PORTA=0x01;
  3115  0928  3001               	movlw	1
  3116  0929  0085               	movwf	5	;volatile
  3117  092A                     l2328:	
  3118  092A  292A               	goto	l2328
  3119  092B                     l9149:	
  3120                           
  3121                           ;main.c: 84: }
  3122                           ;main.c: 97: if(!Send_ATComm("AT+CIPSTO=300\r\n", "OK", 3, 0))
  3123  092B  30C4               	movlw	(STR_2-__stringbase)& (0+255)
  3124  092C  1683               	bsf	3,5	;RP0=1, select bank3
  3125  092D  1703               	bsf	3,6	;RP1=1, select bank3
  3126  092E  00DA               	movwf	?_Send_ATComm^(0+384)
  3127  092F  3003               	movlw	3
  3128  0930  00DB               	movwf	(?_Send_ATComm^(0+384)+1)
  3129  0931  01DC               	clrf	(?_Send_ATComm^(0+384)+2)
  3130  0932  3078               	movlw	(STR_16-__stringbase)& (0+255)
  3131  0933  120A  158A  2216   	fcall	_Send_ATComm
      +       120A  158A         
  3132  0938  3800               	iorlw	0
  3133  0939  1D03               	skipz
  3134  093A  293E               	goto	l2330
  3135                           
  3136                           ;main.c: 98: {
  3137                           ;main.c: 100: PORTA=0x01;
  3138  093B  3001               	movlw	1
  3139  093C  0085               	movwf	5	;volatile
  3140  093D                     l2332:	
  3141  093D  293D               	goto	l2332
  3142  093E                     l2330:	
  3143                           
  3144                           ;main.c: 102: }
  3145                           ;main.c: 106: config_ok = 1;
  3146  093E  1683               	bsf	3,5	;RP0=1, select bank1
  3147  093F  01E9               	clrf	_config_ok^(0+128)
  3148  0940  0AE9               	incf	_config_ok^(0+128),f
  3149  0941                     l2335:	
  3150  0941  2941               	goto	l2335
  3151  0942                     __end_of_main:	
  3152                           
  3153                           	psect	text1192
  3154  0A16                     __ptext1192:	
  3155 ;; =============== function _main ends ============
  3156                           
  3157                           
  3158 ;; *************** function _Send_ATComm *****************
  3159 ;; Defined at:
  3160 ;;		line 25 in file "wifi.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;  comm            1    wreg     PTR const unsigned char 
  3163 ;;		 -> STR_16(16), STR_14(22), STR_11(30), STR_9(14), 
  3164 ;;		 -> STR_7(9), STR_5(14), STR_3(7), STR_1(5), 
  3165 ;;  ret             1   15[BANK3 ] PTR const unsigned char 
  3166 ;;		 -> STR_17(3), STR_15(3), STR_12(3), STR_10(3), 
  3167 ;;		 -> STR_8(3), STR_6(3), STR_4(3), STR_2(3), 
  3168 ;;  delay           1   16[BANK3 ] unsigned char 
  3169 ;;  wait            1   17[BANK3 ] unsigned char 
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;  comm            1   18[BANK3 ] PTR const unsigned char 
  3172 ;;		 -> STR_16(16), STR_14(22), STR_11(30), STR_9(14), 
  3173 ;;		 -> STR_7(9), STR_5(14), STR_3(7), STR_1(5), 
  3174 ;;  i               1   19[BANK3 ] unsigned char 
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1    wreg      unsigned char 
  3177 ;; Registers used:
  3178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3179 ;; Tracked objects:
  3180 ;;		On entry : 60/160
  3181 ;;		On exit  : 160/100
  3182 ;;		Unchanged: FFE00/0
  3183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3184 ;;      Params:         0       0       0       3       0
  3185 ;;      Locals:         0       0       0       2       0
  3186 ;;      Temps:          0       0       0       0       0
  3187 ;;      Totals:         0       0       0       5       0
  3188 ;;Total ram usage:        5 bytes
  3189 ;; Hardware stack levels used:    1
  3190 ;; Hardware stack levels required when called:   12
  3191 ;; This function calls:
  3192 ;;		_Uart_1SendStr
  3193 ;;		_DelaySec
  3194 ;;		_Match
  3195 ;;		_CleanWifiRcv
  3196 ;; This function is called by:
  3197 ;;		_main
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200  0A16                     _Send_ATComm:	
  3201                           
  3202 ;; hardware stack exceeded
  3203                           ; Regs used in _Send_ATComm: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3204                           ;Send_ATComm@comm stored from wreg
  3205  0A16  00DD               	movwf	Send_ATComm@comm^(0+384)
  3206                           
  3207                           ;wifi.c: 26: unsigned char i;
  3208                           ;wifi.c: 27: for(i = 0;i<delay;i++)
  3209  0A17  01DE               	clrf	Send_ATComm@i^(0+384)
  3210  0A18                     l9209:	
  3211  0A18  085B               	movf	Send_ATComm@delay^(0+384),w
  3212  0A19  025E               	subwf	Send_ATComm@i^(0+384),w
  3213  0A1A  1803               	btfsc	3,0
  3214  0A1B  2A36               	goto	l9211
  3215                           
  3216                           ;wifi.c: 28: {
  3217                           ;wifi.c: 29: if(wait)
  3218  0A1C  085C               	movf	Send_ATComm@wait^(0+384),w
  3219  0A1D  1D03               	skipz
  3220  0A1E  2A22               	goto	l9195
  3221                           
  3222                           ;wifi.c: 31: else
  3223                           ;wifi.c: 32: if(i==0)
  3224                           
  3225                           ;wifi.c: 30: Uart_1SendStr(comm);
  3226  0A1F  08DE               	movf	Send_ATComm@i^(0+384),f
  3227  0A20  1D03               	skipz
  3228  0A21  2A26               	goto	l9197
  3229  0A22                     l9195:	
  3230                           
  3231                           ;wifi.c: 33: Uart_1SendStr(comm);
  3232  0A22  085D               	movf	Send_ATComm@comm^(0+384),w
  3233  0A23  2260  120A  158A   	fcall	_Uart_1SendStr
  3234  0A26                     l9197:	
  3235                           
  3236                           ;wifi.c: 34: DelaySec(1);
  3237  0A26  3001               	movlw	1
  3238  0A27  2238  120A  158A   	fcall	_DelaySec
  3239                           
  3240                           ;wifi.c: 35: if(Match(ret))
  3241  0A2A  1683               	bsf	3,5	;RP0=1, select bank3
  3242  0A2B  1703               	bsf	3,6	;RP1=1, select bank3
  3243  0A2C  085A               	movf	Send_ATComm@ret^(0+384),w
  3244  0A2D  2283  120A  158A   	fcall	_Match
  3245  0A30  1C03               	btfss	3,0
  3246  0A31  2A34               	goto	l9207
  3247                           
  3248                           ;wifi.c: 36: {
  3249                           ;wifi.c: 37: CleanWifiRcv();
  3250  0A32  224E               	fcall	_CleanWifiRcv
  3251                           
  3252                           ;wifi.c: 38: return 1;
  3253  0A33  3401               	retlw	1
  3254  0A34                     l9207:	
  3255  0A34  0ADE               	incf	Send_ATComm@i^(0+384),f
  3256  0A35  2A18               	goto	l9209
  3257  0A36                     l9211:	
  3258                           
  3259                           ;wifi.c: 39: }
  3260                           ;wifi.c: 40: }
  3261                           ;wifi.c: 41: CleanWifiRcv();
  3262  0A36  224E               	fcall	_CleanWifiRcv
  3263                           
  3264                           ;wifi.c: 42: return 0;
  3265  0A37  3400               	retlw	0
  3266  0A38                     __end_of_Send_ATComm:	
  3267  0A38                     __ptext1204:	
  3268 ;; =============== function _CleanWifiRcv ends ============
  3269                           
  3270                           
  3271 ;; *************** function _DelaySec *****************
  3272 ;; Defined at:
  3273 ;;		line 21 in file "timer.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;  sec             1    wreg     unsigned char 
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;  sec             1    1[BANK3 ] unsigned char 
  3278 ;; Return value:  Size  Location     Type
  3279 ;;		None               void
  3280 ;; Registers used:
  3281 ;;		wreg, status,2
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/60
  3284 ;;		On exit  : 0/0
  3285 ;;		Unchanged: FFE00/0
  3286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3287 ;;      Params:         0       0       0       0       0
  3288 ;;      Locals:         0       0       0       1       0
  3289 ;;      Temps:          0       0       0       1       0
  3290 ;;      Totals:         0       0       0       2       0
  3291 ;;Total ram usage:        2 bytes
  3292 ;; Hardware stack levels used:    1
  3293 ;; Hardware stack levels required when called:    9
  3294 ;; This function calls:
  3295 ;;		Nothing
  3296 ;; This function is called by:
  3297 ;;		_main
  3298 ;;		_Send_ATComm
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301  0A38                     _DelaySec:	
  3302                           
  3303 ;; hardware stack exceeded
  3304                           ; Regs used in _DelaySec: [wreg+status,2]
  3305                           ;DelaySec@sec stored from wreg
  3306  0A38  1683               	bsf	3,5	;RP0=1, select bank3
  3307  0A39  1703               	bsf	3,6	;RP1=1, select bank3
  3308  0A3A  00CC               	movwf	DelaySec@sec^(0+384)
  3309                           
  3310                           ;timer.c: 22: sec_cnt = 0;
  3311  0A3B  1303               	bcf	3,6	;RP1=0, select bank1
  3312  0A3C  01E1               	clrf	_sec_cnt^(0+128)	;volatile
  3313  0A3D  01E2               	clrf	(_sec_cnt+1)^(0+128)	;volatile
  3314  0A3E                     l9173:	
  3315                           ;timer.c: 23: while(sec_cnt < sec);
  3316                           
  3317  0A3E  1683               	bsf	3,5	;RP0=1, select bank1
  3318  0A3F  1303               	bcf	3,6	;RP1=0, select bank1
  3319  0A40  0862               	movf	(_sec_cnt+1)^(0+128),w	;volatile
  3320  0A41  3A80               	xorlw	128
  3321  0A42  1703               	bsf	3,6	;RP1=1, select bank3
  3322  0A43  00CB               	movwf	??_DelaySec^(0+384)
  3323  0A44  3080               	movlw	128
  3324  0A45  024B               	subwf	??_DelaySec^(0+384),w
  3325  0A46  1D03               	skipz
  3326  0A47  2A4B               	goto	u2195
  3327  0A48  084C               	movf	DelaySec@sec^(0+384),w
  3328  0A49  1303               	bcf	3,6	;RP1=0, select bank1
  3329  0A4A  0261               	subwf	_sec_cnt^(0+128),w	;volatile
  3330  0A4B                     u2195:	
  3331  0A4B  1803               	btfsc	3,0
  3332  0A4C  0008               	return
  3333  0A4D  2A3E               	goto	l9173
  3334  0A4E                     __end_of_DelaySec:	
  3335  0A4E                     __ptext1203:	
  3336 ;; =============== function _UART_1SendOneByte ends ============
  3337                           
  3338                           
  3339 ;; *************** function _CleanWifiRcv *****************
  3340 ;; Defined at:
  3341 ;;		line 8 in file "wifi.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;		None
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;  i               1    0[BANK3 ] unsigned char 
  3346 ;; Return value:  Size  Location     Type
  3347 ;;		None               void
  3348 ;; Registers used:
  3349 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/60
  3352 ;;		On exit  : 160/100
  3353 ;;		Unchanged: FFE9F/0
  3354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3355 ;;      Params:         0       0       0       0       0
  3356 ;;      Locals:         0       0       0       1       0
  3357 ;;      Temps:          0       0       0       0       0
  3358 ;;      Totals:         0       0       0       1       0
  3359 ;;Total ram usage:        1 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:    9
  3362 ;; This function calls:
  3363 ;;		Nothing
  3364 ;; This function is called by:
  3365 ;;		_main
  3366 ;;		_Send_ATComm
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369  0A4E                     _CleanWifiRcv:	
  3370                           
  3371                           ;wifi.c: 9: unsigned char i = 0;
  3372                           
  3373 ;; hardware stack exceeded
  3374                           ; Regs used in _CleanWifiRcv: [wreg-fsr0h+status,2+status,0]
  3375  0A4E  1683               	bsf	3,5	;RP0=1, select bank3
  3376  0A4F  1703               	bsf	3,6	;RP1=1, select bank3
  3377  0A50  01CB               	clrf	CleanWifiRcv@i^(0+384)
  3378                           
  3379                           ;wifi.c: 10: for(i=0; i<=50; i++)
  3380  0A51  01CB               	clrf	CleanWifiRcv@i^(0+384)
  3381  0A52                     l9181:	
  3382                           
  3383                           ;wifi.c: 11: {
  3384                           ;wifi.c: 12: rcv_wifi[i] = 0;
  3385  0A52  084B               	movf	CleanWifiRcv@i^(0+384),w
  3386  0A53  3E10               	addlw	_rcv_wifi& (0+255)
  3387  0A54  0084               	movwf	4
  3388  0A55  1783               	bsf	3,7	;select IRP bank2
  3389  0A56  0180               	clrf	0
  3390  0A57  0ACB               	incf	CleanWifiRcv@i^(0+384),f
  3391  0A58  3033               	movlw	51
  3392  0A59  024B               	subwf	CleanWifiRcv@i^(0+384),w
  3393  0A5A  1C03               	skipc
  3394  0A5B  2A52               	goto	l9181
  3395                           
  3396                           ;wifi.c: 13: }
  3397                           ;wifi.c: 15: WifiRcvCnt = 0;
  3398  0A5C  1283               	bcf	3,5	;RP0=0, select bank0
  3399  0A5D  1303               	bcf	3,6	;RP1=0, select bank0
  3400  0A5E  01EF               	clrf	_WifiRcvCnt
  3401  0A5F  0008               	return
  3402  0A60                     __end_of_CleanWifiRcv:	
  3403  0A60                     __ptext1197:	
  3404 ;; =============== function _strstr ends ============
  3405                           
  3406                           
  3407 ;; *************** function _Uart_1SendStr *****************
  3408 ;; Defined at:
  3409 ;;		line 41 in file "uart.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;  data_at         1    wreg     PTR const unsigned char 
  3412 ;;		 -> STR_16(16), STR_14(22), STR_13(11), STR_11(30), 
  3413 ;;		 -> STR_9(14), STR_7(9), STR_5(14), STR_3(7), 
  3414 ;;		 -> STR_1(5), 
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;  data_at         1    1[BANK3 ] PTR const unsigned char 
  3417 ;;		 -> STR_16(16), STR_14(22), STR_13(11), STR_11(30), 
  3418 ;;		 -> STR_9(14), STR_7(9), STR_5(14), STR_3(7), 
  3419 ;;		 -> STR_1(5), 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;		None               void
  3422 ;; Registers used:
  3423 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/100
  3426 ;;		On exit  : 60/160
  3427 ;;		Unchanged: FFF9F/0
  3428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3429 ;;      Params:         0       0       0       0       0
  3430 ;;      Locals:         0       0       0       1       0
  3431 ;;      Temps:          0       0       0       0       0
  3432 ;;      Totals:         0       0       0       1       0
  3433 ;;Total ram usage:        1 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:   10
  3436 ;; This function calls:
  3437 ;;		_UART_1SendOneByte
  3438 ;; This function is called by:
  3439 ;;		_main
  3440 ;;		_Send_ATComm
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443  0A60                     _Uart_1SendStr:	
  3444                           
  3445 ;; hardware stack exceeded
  3446                           ; Regs used in _Uart_1SendStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3447                           ;Uart_1SendStr@data_at stored from wreg
  3448  0A60  1683               	bsf	3,5	;RP0=1, select bank3
  3449  0A61  1703               	bsf	3,6	;RP1=1, select bank3
  3450  0A62  00CC               	movwf	Uart_1SendStr@data_at^(0+384)
  3451  0A63                     l9223:	
  3452                           ;uart.c: 42: while(*data_at)
  3453                           
  3454  0A63  084C               	movf	Uart_1SendStr@data_at^(0+384),w
  3455  0A64  0084               	movwf	4
  3456  0A65  120A  118A  2021   	fcall	stringdir
      +       120A  158A         
  3457  0A6A  3800               	iorlw	0
  3458  0A6B  1903               	btfsc	3,2
  3459  0A6C  0008               	return
  3460                           
  3461                           ;uart.c: 43: {
  3462                           ;uart.c: 44: UART_1SendOneByte(*data_at++);
  3463  0A6D  084C               	movf	Uart_1SendStr@data_at^(0+384),w
  3464  0A6E  0084               	movwf	4
  3465  0A6F  120A  118A  2021   	fcall	stringdir
      +       120A  158A         
  3466  0A74  227A  120A  158A   	fcall	_UART_1SendOneByte
  3467  0A77  1703               	bsf	3,6	;RP1=1, select bank3
  3468  0A78  0ACC               	incf	Uart_1SendStr@data_at^(0+384),f
  3469  0A79  2A63               	goto	l9223
  3470  0A7A                     __end_of_Uart_1SendStr:	
  3471  0A7A                     __ptext1202:	
  3472 ;; =============== function _strlen ends ============
  3473                           
  3474                           
  3475 ;; *************** function _UART_1SendOneByte *****************
  3476 ;; Defined at:
  3477 ;;		line 34 in file "uart.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;  c               1    wreg     unsigned char 
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;  c               1    0[BANK3 ] unsigned char 
  3482 ;; Return value:  Size  Location     Type
  3483 ;;		None               void
  3484 ;; Registers used:
  3485 ;;		wreg
  3486 ;; Tracked objects:
  3487 ;;		On entry : 60/160
  3488 ;;		On exit  : 60/120
  3489 ;;		Unchanged: FFF9F/0
  3490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3491 ;;      Params:         0       0       0       0       0
  3492 ;;      Locals:         0       0       0       1       0
  3493 ;;      Temps:          0       0       0       0       0
  3494 ;;      Totals:         0       0       0       1       0
  3495 ;;Total ram usage:        1 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; Hardware stack levels required when called:    9
  3498 ;; This function calls:
  3499 ;;		Nothing
  3500 ;; This function is called by:
  3501 ;;		_Uart_1SendStr
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504  0A7A                     _UART_1SendOneByte:	
  3505                           
  3506 ;; hardware stack exceeded
  3507                           ; Regs used in _UART_1SendOneByte: [wreg]
  3508                           ;UART_1SendOneByte@c stored from wreg
  3509  0A7A  00CB               	movwf	UART_1SendOneByte@c^(0+384)
  3510                           
  3511                           ;uart.c: 35: TXREG = c;
  3512  0A7B  084B               	movf	UART_1SendOneByte@c^(0+384),w
  3513  0A7C  1283               	bcf	3,5	;RP0=0, select bank0
  3514  0A7D  1303               	bcf	3,6	;RP1=0, select bank0
  3515  0A7E  0099               	movwf	25	;volatile
  3516  0A7F                     l2899:	
  3517                           ;uart.c: 36: while(!TRMT);
  3518                           
  3519  0A7F  1683               	bsf	3,5	;RP0=1, select bank1
  3520  0A80  1898               	btfsc	24,1
  3521  0A81  0008               	return
  3522  0A82  2A7F               	goto	l2899
  3523  0A83                     __end_of_UART_1SendOneByte:	
  3524  0A83                     __ptext1194:	
  3525 ;; =============== function _Init_Digitrons ends ============
  3526                           
  3527                           
  3528 ;; *************** function _Match *****************
  3529 ;; Defined at:
  3530 ;;		line 139 in file "wifi.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;  a               1    wreg     PTR const unsigned char 
  3533 ;;		 -> STR_17(3), STR_15(3), STR_12(3), STR_10(3), 
  3534 ;;		 -> STR_8(3), STR_6(3), STR_4(3), STR_2(3), 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;  a               1   14[BANK3 ] PTR const unsigned char 
  3537 ;;		 -> STR_17(3), STR_15(3), STR_12(3), STR_10(3), 
  3538 ;;		 -> STR_8(3), STR_6(3), STR_4(3), STR_2(3), 
  3539 ;; Return value:  Size  Location     Type
  3540 ;;		None               void
  3541 ;; Registers used:
  3542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3543 ;; Tracked objects:
  3544 ;;		On entry : 60/160
  3545 ;;		On exit  : 60/60
  3546 ;;		Unchanged: FFE9F/0
  3547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3548 ;;      Params:         0       0       0       0       0
  3549 ;;      Locals:         0       0       0       1       0
  3550 ;;      Temps:          0       0       0       0       0
  3551 ;;      Totals:         0       0       0       1       0
  3552 ;;Total ram usage:        1 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:   11
  3555 ;; This function calls:
  3556 ;;		_strstr
  3557 ;; This function is called by:
  3558 ;;		_Send_ATComm
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561  0A83                     _Match:	
  3562                           
  3563 ;; hardware stack exceeded
  3564                           ; Regs used in _Match: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3565                           ;Match@a stored from wreg
  3566  0A83  00D9               	movwf	Match@a^(0+384)
  3567                           
  3568                           ;wifi.c: 140: if(strstr(rcv_wifi,a)!=(0))
  3569  0A84  00D7               	movwf	?_strstr^(0+384)
  3570  0A85  3010               	movlw	_rcv_wifi& (0+255)
  3571  0A86  2290  120A  158A   	fcall	_strstr
  3572  0A89  3A00               	xorlw	0
  3573  0A8A  1903               	skipnz
  3574  0A8B  2A8E               	goto	l9235
  3575                           
  3576                           ;wifi.c: 141: return 1;
  3577  0A8C  1403               	setc
  3578  0A8D  0008               	return
  3579  0A8E                     l9235:	
  3580                           
  3581                           ;wifi.c: 142: else
  3582                           ;wifi.c: 143: return 0;
  3583  0A8E  1003               	clrc
  3584  0A8F  0008               	return
  3585  0A90                     __end_of_Match:	
  3586  0A90                     __ptext1196:	
  3587 ;; =============== function _Digitron_Display ends ============
  3588                           
  3589                           
  3590 ;; *************** function _strstr *****************
  3591 ;; Defined at:
  3592 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\strstr.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;  s1              1    wreg     PTR const unsigned char 
  3595 ;;		 -> NULL(0), rcv_wifi(50), 
  3596 ;;  s2              1   12[BANK3 ] PTR const unsigned char 
  3597 ;;		 -> STR_17(3), STR_15(3), STR_12(3), STR_10(3), 
  3598 ;;		 -> STR_8(3), STR_6(3), STR_4(3), STR_2(3), 
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  s1              1   13[BANK3 ] PTR const unsigned char 
  3601 ;;		 -> NULL(0), rcv_wifi(50), 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  1    wreg      PTR unsigned char 
  3604 ;; Registers used:
  3605 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 60/160
  3608 ;;		On exit  : 60/60
  3609 ;;		Unchanged: FFE9F/0
  3610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3611 ;;      Params:         0       0       0       1       0
  3612 ;;      Locals:         0       0       0       1       0
  3613 ;;      Temps:          0       0       0       0       0
  3614 ;;      Totals:         0       0       0       2       0
  3615 ;;Total ram usage:        2 bytes
  3616 ;; Hardware stack levels used:    1
  3617 ;; Hardware stack levels required when called:   10
  3618 ;; This function calls:
  3619 ;;		_strlen
  3620 ;;		_strncmp
  3621 ;;		_strchr
  3622 ;; This function is called by:
  3623 ;;		_Match
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626  0A90                     _strstr:	
  3627  0A90                     L1:	
  3628  0A90  00D8               	movwf	strstr@s1^(0+384)
  3629  0A91  0858               	movf	strstr@s1^(0+384),w
  3630  0A92  1903               	btfsc	3,2
  3631  0A93  3400               	retlw	0
  3632  0A94  0858               	movf	strstr@s1^(0+384),w
  3633  0A95  0084               	movwf	4
  3634  0A96  1783               	bsf	3,7	;select IRP bank2
  3635  0A97  0880               	movf	0,f
  3636  0A98  1903               	btfsc	3,2
  3637  0A99  3400               	retlw	0
  3638                           
  3639 ;; hardware stack exceeded
  3640                           ; Regs used in _strstr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3641                           ;strstr@s1 stored from wreg
  3642  0A9A  0857               	movf	strstr@s2^(0+384),w
  3643  0A9B  00D1               	movwf	?_strncmp^(0+384)
  3644  0A9C  0857               	movf	strstr@s2^(0+384),w
  3645  0A9D  00CB               	movwf	?_strlen^(0+384)
  3646  0A9E  3080               	movlw	128
  3647  0A9F  00CC               	movwf	(?_strlen+1)^(0+384)
  3648  0AA0  22BF  120A  158A   	fcall	_strlen
  3649  0AA3  084C               	movf	(?_strlen+1)^(0+384),w
  3650  0AA4  00D3               	movwf	((?_strncmp+1)^(0+384)+1)
  3651  0AA5  084B               	movf	?_strlen^(0+384),w
  3652  0AA6  00D2               	movwf	(?_strncmp^(0+384)+1)
  3653  0AA7  0858               	movf	strstr@s1^(0+384),w
  3654  0AA8  22F1  120A  158A   	fcall	_strncmp
  3655  0AAB  0852               	movf	(?_strncmp+1)^(0+384),w
  3656  0AAC  0451               	iorwf	?_strncmp^(0+384),w
  3657  0AAD  1D03               	skipz
  3658  0AAE  2AB1               	goto	l9309
  3659  0AAF  0858               	movf	strstr@s1^(0+384),w
  3660  0AB0  0008               	return
  3661  0AB1                     l9309:	
  3662  0AB1  0857               	movf	strstr@s2^(0+384),w
  3663  0AB2  0084               	movwf	4
  3664  0AB3  120A  118A  2021   	fcall	stringdir
      +       120A  158A         
  3665  0AB8  00CB               	movwf	?_strchr^(0+384)
  3666  0AB9  01CC               	clrf	(?_strchr+1)^(0+384)
  3667  0ABA  0A58               	incf	strstr@s1^(0+384),w
  3668  0ABB  2328  120A  158A   	fcall	_strchr
  3669  0ABE  2A90               	goto	L1
  3670  0ABF                     __end_of_strstr:	
  3671  0ABF                     __ptext1201:	
  3672 ;; =============== function _strncmp ends ============
  3673                           
  3674                           
  3675 ;; *************** function _strlen *****************
  3676 ;; Defined at:
  3677 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\strlen.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  s               2    0[BANK3 ] PTR const unsigned char 
  3680 ;;		 -> Analyze_GpsData@info(50), rcv_wifi(50), STR_17(3), STR_15(3), 
  3681 ;;		 -> STR_12(3), STR_10(3), STR_8(3), STR_6(3), 
  3682 ;;		 -> STR_4(3), STR_2(3), 
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;  cp              2    4[BANK3 ] PTR const unsigned char 
  3685 ;;		 -> Analyze_GpsData@info(50), rcv_wifi(50), STR_17(3), STR_15(3), 
  3686 ;;		 -> STR_12(3), STR_10(3), STR_8(3), STR_6(3), 
  3687 ;;		 -> STR_4(3), STR_2(3), 
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  2    0[BANK3 ] unsigned int 
  3690 ;; Registers used:
  3691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3692 ;; Tracked objects:
  3693 ;;		On entry : 60/160
  3694 ;;		On exit  : 60/60
  3695 ;;		Unchanged: FFE9F/0
  3696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3697 ;;      Params:         0       0       0       2       0
  3698 ;;      Locals:         0       0       0       2       0
  3699 ;;      Temps:          0       0       0       2       0
  3700 ;;      Totals:         0       0       0       6       0
  3701 ;;Total ram usage:        6 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; Hardware stack levels required when called:    9
  3704 ;; This function calls:
  3705 ;;		Nothing
  3706 ;; This function is called by:
  3707 ;;		_strstr
  3708 ;;		_mid
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711  0ABF                     _strlen:	
  3712                           
  3713 ;; hardware stack exceeded
  3714                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3715  0ABF  084C               	movf	(strlen@s+1)^(0+384),w
  3716  0AC0  00D0               	movwf	(strlen@cp+1)^(0+384)
  3717  0AC1  084B               	movf	strlen@s^(0+384),w
  3718  0AC2  00CF               	movwf	strlen@cp^(0+384)
  3719  0AC3                     l9241:	
  3720  0AC3  1683               	bsf	3,5	;RP0=1, select bank3
  3721  0AC4  1703               	bsf	3,6	;RP1=1, select bank3
  3722  0AC5  0850               	movf	(strlen@cp+1)^(0+384),w
  3723  0AC6  00CE               	movwf	(??_strlen^(0+384)+1)
  3724  0AC7  084F               	movf	strlen@cp^(0+384),w
  3725  0AC8  00CD               	movwf	??_strlen^(0+384)
  3726  0AC9  0ACF               	incf	strlen@cp^(0+384),f
  3727  0ACA  1903               	skipnz
  3728  0ACB  0AD0               	incf	(strlen@cp+1)^(0+384),f
  3729  0ACC  084E               	movf	(??_strlen+1)^(0+384),w
  3730  0ACD  1283               	bcf	3,5	;RP0=0, select bank0
  3731  0ACE  1303               	bcf	3,6	;RP1=0, select bank0
  3732  0ACF  00FF               	movwf	127
  3733  0AD0  1683               	bsf	3,5	;RP0=1, select bank3
  3734  0AD1  1703               	bsf	3,6	;RP1=1, select bank3
  3735  0AD2  084D               	movf	??_strlen^(0+384),w
  3736  0AD3  0084               	movwf	4
  3737  0AD4  1283               	bcf	3,5	;RP0=0, select bank0
  3738  0AD5  1303               	bcf	3,6	;RP1=0, select bank0
  3739  0AD6  120A  118A  2017   	fcall	stringtab
      +       120A  158A         
  3740  0ADB  3800               	iorlw	0
  3741  0ADC  1D03               	skipz
  3742  0ADD  2AC3               	goto	l9241
  3743  0ADE  1683               	bsf	3,5	;RP0=1, select bank3
  3744  0ADF  1703               	bsf	3,6	;RP1=1, select bank3
  3745  0AE0  084B               	movf	strlen@s^(0+384),w
  3746  0AE1  024F               	subwf	strlen@cp^(0+384),w
  3747  0AE2  00CD               	movwf	??_strlen^(0+384)
  3748  0AE3  084C               	movf	(strlen@s+1)^(0+384),w
  3749  0AE4  1C03               	skipc
  3750  0AE5  0A4C               	incf	(strlen@s+1)^(0+384),w
  3751  0AE6  0250               	subwf	(strlen@cp+1)^(0+384),w
  3752  0AE7  00CE               	movwf	(??_strlen+1)^(0+384)
  3753  0AE8  084D               	movf	??_strlen^(0+384),w
  3754  0AE9  3EFF               	addlw	255
  3755  0AEA  00CB               	movwf	?_strlen^(0+384)
  3756  0AEB  084E               	movf	(??_strlen+1)^(0+384),w
  3757  0AEC  1803               	skipnc
  3758  0AED  3E01               	addlw	1
  3759  0AEE  3EFF               	addlw	255
  3760  0AEF  00CC               	movwf	(?_strlen+1)^(0+384)
  3761  0AF0  0008               	return
  3762  0AF1                     __end_of_strlen:	
  3763  0AF1                     __ptext1200:	
  3764 ;; =============== function _strchr ends ============
  3765                           
  3766                           
  3767 ;; *************** function _strncmp *****************
  3768 ;; Defined at:
  3769 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\strncmp.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  s1              1    wreg     PTR const unsigned char 
  3772 ;;		 -> NULL(0), rcv_wifi(50), 
  3773 ;;  s2              1    6[BANK3 ] PTR const unsigned char 
  3774 ;;		 -> STR_17(3), STR_15(3), STR_12(3), STR_10(3), 
  3775 ;;		 -> STR_8(3), STR_6(3), STR_4(3), STR_2(3), 
  3776 ;;  len             2    7[BANK3 ] unsigned int 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;  s1              1   11[BANK3 ] PTR const unsigned char 
  3779 ;;		 -> NULL(0), rcv_wifi(50), 
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  2    6[BANK3 ] int 
  3782 ;; Registers used:
  3783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3784 ;; Tracked objects:
  3785 ;;		On entry : 60/160
  3786 ;;		On exit  : 60/60
  3787 ;;		Unchanged: FFE9F/0
  3788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3789 ;;      Params:         0       0       0       3       0
  3790 ;;      Locals:         0       0       0       1       0
  3791 ;;      Temps:          0       0       0       2       0
  3792 ;;      Totals:         0       0       0       6       0
  3793 ;;Total ram usage:        6 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; Hardware stack levels required when called:    9
  3796 ;; This function calls:
  3797 ;;		Nothing
  3798 ;; This function is called by:
  3799 ;;		_strstr
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802  0AF1                     _strncmp:	
  3803                           
  3804 ;; hardware stack exceeded
  3805                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  3806                           ;strncmp@s1 stored from wreg
  3807  0AF1  00D6               	movwf	strncmp@s1^(0+384)
  3808  0AF2                     l9769:	
  3809  0AF2  3001               	movlw	1
  3810  0AF3  02D2               	subwf	strncmp@len^(0+384),f
  3811  0AF4  3000               	movlw	0
  3812  0AF5  1C03               	skipc
  3813  0AF6  03D3               	decf	(strncmp@len+1)^(0+384),f
  3814  0AF7  02D3               	subwf	(strncmp@len+1)^(0+384),f
  3815  0AF8  0A52               	incf	strncmp@len^(0+384),w
  3816  0AF9  1903               	skipnz
  3817  0AFA  0A53               	incf	(strncmp@len+1)^(0+384),w
  3818  0AFB  1903               	btfsc	3,2
  3819  0AFC  2B25               	goto	l9771
  3820  0AFD  0856               	movf	strncmp@s1^(0+384),w
  3821  0AFE  0084               	movwf	4
  3822  0AFF  1783               	bsf	3,7	;select IRP bank2
  3823  0B00  0880               	movf	0,f
  3824  0B01  1903               	skipnz
  3825  0B02  2B11               	goto	l9763
  3826  0B03  0851               	movf	strncmp@s2^(0+384),w
  3827  0B04  0084               	movwf	4
  3828  0B05  120A  118A  2021   	fcall	stringdir
      +       120A  158A         
  3829  0B0A  00D4               	movwf	??_strncmp^(0+384)
  3830  0B0B  0856               	movf	strncmp@s1^(0+384),w
  3831  0B0C  0084               	movwf	4
  3832  0B0D  0800               	movf	0,w
  3833  0B0E  0654               	xorwf	??_strncmp^(0+384),w
  3834  0B0F  1903               	skipnz
  3835  0B10  2B22               	goto	l9767
  3836  0B11                     l9763:	
  3837  0B11  0851               	movf	strncmp@s2^(0+384),w
  3838  0B12  0084               	movwf	4
  3839  0B13  120A  118A  2021   	fcall	stringdir
  3840  0B16  00D4               	movwf	??_strncmp^(0+384)
  3841  0B17  0856               	movf	strncmp@s1^(0+384),w
  3842  0B18  0084               	movwf	4
  3843  0B19  0800               	movf	0,w
  3844  0B1A  00D5               	movwf	(??_strncmp+1)^(0+384)
  3845  0B1B  0854               	movf	??_strncmp^(0+384),w
  3846  0B1C  0255               	subwf	(??_strncmp+1)^(0+384),w
  3847  0B1D  00D1               	movwf	?_strncmp^(0+384)
  3848  0B1E  01D2               	clrf	(?_strncmp^(0+384)+1)
  3849  0B1F  1C03               	skipc
  3850  0B20  03D2               	decf	(?_strncmp+1)^(0+384),f
  3851  0B21  0008               	return
  3852  0B22                     l9767:	
  3853  0B22  0AD6               	incf	strncmp@s1^(0+384),f
  3854  0B23  0AD1               	incf	strncmp@s2^(0+384),f
  3855  0B24  2AF2               	goto	l9769
  3856  0B25                     l9771:	
  3857  0B25  01D1               	clrf	?_strncmp^(0+384)
  3858  0B26  01D2               	clrf	(?_strncmp+1)^(0+384)
  3859  0B27  0008               	return
  3860  0B28                     __end_of_strncmp:	
  3861  0B28                     __ptext1199:	
  3862 ;; =============== function _Digitron_Command ends ============
  3863                           
  3864                           
  3865 ;; *************** function _strchr *****************
  3866 ;; Defined at:
  3867 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\strchr.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;  ptr             1    wreg     PTR const unsigned char 
  3870 ;;		 -> NULL(0), rcv_wifi(50), 
  3871 ;;  chr             2    0[BANK3 ] int 
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;  ptr             1    2[BANK3 ] PTR const unsigned char 
  3874 ;;		 -> NULL(0), rcv_wifi(50), 
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  1    wreg      PTR unsigned char 
  3877 ;; Registers used:
  3878 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3879 ;; Tracked objects:
  3880 ;;		On entry : 60/160
  3881 ;;		On exit  : 160/160
  3882 ;;		Unchanged: FFE9F/0
  3883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3884 ;;      Params:         0       0       0       2       0
  3885 ;;      Locals:         0       0       0       1       0
  3886 ;;      Temps:          0       0       0       0       0
  3887 ;;      Totals:         0       0       0       3       0
  3888 ;;Total ram usage:        3 bytes
  3889 ;; Hardware stack levels used:    1
  3890 ;; Hardware stack levels required when called:    9
  3891 ;; This function calls:
  3892 ;;		Nothing
  3893 ;; This function is called by:
  3894 ;;		_strstr
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897  0B28                     _strchr:	
  3898                           
  3899 ;; hardware stack exceeded
  3900                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0]
  3901                           ;strchr@ptr stored from wreg
  3902  0B28  00CD               	movwf	strchr@ptr^(0+384)
  3903  0B29                     l6508:	
  3904  0B29  084D               	movf	strchr@ptr^(0+384),w
  3905  0B2A  0084               	movwf	4
  3906  0B2B  1783               	bsf	3,7	;select IRP bank2
  3907  0B2C  0800               	movf	0,w
  3908  0B2D  064B               	xorwf	strchr@chr^(0+384),w
  3909  0B2E  1D03               	skipz
  3910  0B2F  2B32               	goto	l9781
  3911  0B30  084D               	movf	strchr@ptr^(0+384),w
  3912  0B31  0008               	return
  3913  0B32                     l9781:	
  3914  0B32  084D               	movf	strchr@ptr^(0+384),w
  3915  0B33  0ACD               	incf	strchr@ptr^(0+384),f
  3916  0B34  0084               	movwf	4
  3917  0B35  0880               	movf	0,f
  3918  0B36  1903               	btfsc	3,2
  3919  0B37  3400               	retlw	0
  3920  0B38  2B29               	goto	l6508
  3921  0B39                     __end_of_strchr:	
  3922                           
  3923                           	psect	text1193
  3924  0942                     __ptext1193:	
  3925 ;; =============== function _Send_ATComm ends ============
  3926                           
  3927                           
  3928 ;; *************** function _Init_Digitrons *****************
  3929 ;; Defined at:
  3930 ;;		line 11 in file "LED/led.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;		None
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;		None
  3935 ;; Return value:  Size  Location     Type
  3936 ;;		None               void
  3937 ;; Registers used:
  3938 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3939 ;; Tracked objects:
  3940 ;;		On entry : 17F/0
  3941 ;;		On exit  : 17F/160
  3942 ;;		Unchanged: FFE80/0
  3943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3944 ;;      Params:         0       0       0       0       0
  3945 ;;      Locals:         0       0       0       0       0
  3946 ;;      Temps:          0       0       0       0       0
  3947 ;;      Totals:         0       0       0       0       0
  3948 ;;Total ram usage:        0 bytes
  3949 ;; Hardware stack levels used:    1
  3950 ;; Hardware stack levels required when called:   12
  3951 ;; This function calls:
  3952 ;;		_queueArray_init
  3953 ;;		_Digitron_Display
  3954 ;; This function is called by:
  3955 ;;		_main
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958  0942                     _Init_Digitrons:	
  3959                           
  3960                           ;led.c: 12: queueArray_init(&digitron1);
  3961                           
  3962 ;; hardware stack exceeded
  3963                           ; Regs used in _Init_Digitrons: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3964  0942  30AC               	movlw	_digitron1& (0+255)
  3965  0943  2158  120A  158A   	fcall	_queueArray_init
  3966                           
  3967                           ;led.c: 13: queueArray_init(&digitron2);
  3968  0946  30BA               	movlw	_digitron2& (0+255)
  3969  0947  2158  120A  158A   	fcall	_queueArray_init
  3970                           
  3971                           ;led.c: 14: queueArray_init(&digitron3);
  3972  094A  3042               	movlw	_digitron3& (0+255)
  3973  094B  2158  120A  158A   	fcall	_queueArray_init
  3974                           
  3975                           ;led.c: 16: Digitron_Display(&digitron1);
  3976  094E  30AC               	movlw	_digitron1& (0+255)
  3977  094F  217D  120A  158A   	fcall	_Digitron_Display
  3978                           
  3979                           ;led.c: 17: Digitron_Display(&digitron2);
  3980  0952  30BA               	movlw	_digitron2& (0+255)
  3981  0953  217D  120A  158A   	fcall	_Digitron_Display
  3982                           
  3983                           ;led.c: 18: Digitron_Display(&digitron3);
  3984  0956  3042               	movlw	_digitron3& (0+255)
  3985  0957  297D               	ljmp	_Digitron_Display
  3986  0958                     __end_of_Init_Digitrons:	
  3987  0958                     __ptext1210:	
  3988 ;; =============== function _Digitron_Send_8bit ends ============
  3989                           
  3990                           
  3991 ;; *************** function _queueArray_init *****************
  3992 ;; Defined at:
  3993 ;;		line 6 in file "data_structure/queue.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;  Q               1    wreg     PTR struct .
  3996 ;;		 -> digitron3(14), digitron2(14), digitron1(14), 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;  Q               1    3[BANK3 ] PTR struct .
  3999 ;;		 -> digitron3(14), digitron2(14), digitron1(14), 
  4000 ;;  j               1    5[BANK3 ] unsigned char 
  4001 ;;  i               1    4[BANK3 ] unsigned char 
  4002 ;; Return value:  Size  Location     Type
  4003 ;;		None               void
  4004 ;; Registers used:
  4005 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4006 ;; Tracked objects:
  4007 ;;		On entry : 1F/0
  4008 ;;		On exit  : 17F/160
  4009 ;;		Unchanged: FFE80/0
  4010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4011 ;;      Params:         0       0       0       0       0
  4012 ;;      Locals:         0       0       0       3       0
  4013 ;;      Temps:          0       0       0       3       0
  4014 ;;      Totals:         0       0       0       6       0
  4015 ;;Total ram usage:        6 bytes
  4016 ;; Hardware stack levels used:    1
  4017 ;; Hardware stack levels required when called:    9
  4018 ;; This function calls:
  4019 ;;		Nothing
  4020 ;; This function is called by:
  4021 ;;		_Init_Digitrons
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024  0958                     _queueArray_init:	
  4025                           
  4026 ;; hardware stack exceeded
  4027                           ; Regs used in _queueArray_init: [wreg-fsr0h+status,2+status,0]
  4028                           ;queueArray_init@Q stored from wreg
  4029  0958  1683               	bsf	3,5	;RP0=1, select bank3
  4030  0959  1703               	bsf	3,6	;RP1=1, select bank3
  4031  095A  00CE               	movwf	queueArray_init@Q^(0+384)
  4032                           
  4033                           ;queue.c: 7: Q->front = 0;
  4034  095B  3E01               	addlw	1
  4035  095C  0084               	movwf	4
  4036  095D  1783               	bsf	3,7	;select IRP bank2
  4037  095E  0180               	clrf	0
  4038                           
  4039                           ;queue.c: 8: Q->rear = 0;
  4040  095F  084E               	movf	queueArray_init@Q^(0+384),w
  4041  0960  0084               	movwf	4
  4042  0961  0180               	clrf	0
  4043                           
  4044                           ;queue.c: 9: for(unsigned char i=0; i<3; i++)
  4045  0962  01CF               	clrf	queueArray_init@i^(0+384)
  4046  0963                     l8949:	
  4047                           
  4048                           ;queue.c: 10: for(unsigned char j=0; j<4; j++)
  4049  0963  01D0               	clrf	queueArray_init@j^(0+384)
  4050  0964                     l8955:	
  4051                           
  4052                           ;queue.c: 11: Q->data[i][j] = 0;
  4053  0964  084F               	movf	queueArray_init@i^(0+384),w
  4054  0965  00CB               	movwf	??_queueArray_init^(0+384)
  4055  0966  1003               	clrc
  4056  0967  0DCB               	rlf	??_queueArray_init^(0+384),f
  4057  0968  1003               	clrc
  4058  0969  0D4B               	rlf	??_queueArray_init^(0+384),w
  4059  096A  074E               	addwf	queueArray_init@Q^(0+384),w
  4060  096B  00CC               	movwf	(??_queueArray_init+1)^(0+384)
  4061  096C  0850               	movf	queueArray_init@j^(0+384),w
  4062  096D  074C               	addwf	(??_queueArray_init+1)^(0+384),w
  4063  096E  00CD               	movwf	(??_queueArray_init+2)^(0+384)
  4064  096F  3E02               	addlw	2
  4065  0970  0084               	movwf	4
  4066  0971  0180               	clrf	0
  4067  0972  0AD0               	incf	queueArray_init@j^(0+384),f
  4068  0973  3004               	movlw	4
  4069  0974  0250               	subwf	queueArray_init@j^(0+384),w
  4070  0975  1C03               	skipc
  4071  0976  2964               	goto	l8955
  4072  0977  0ACF               	incf	queueArray_init@i^(0+384),f
  4073  0978  3003               	movlw	3
  4074  0979  024F               	subwf	queueArray_init@i^(0+384),w
  4075  097A  1803               	btfsc	3,0
  4076  097B  0008               	return
  4077  097C  2963               	goto	l8949
  4078  097D                     __end_of_queueArray_init:	
  4079  097D                     __ptext1195:	
  4080 ;; =============== function _Match ends ============
  4081                           
  4082                           
  4083 ;; *************** function _Digitron_Display *****************
  4084 ;; Defined at:
  4085 ;;		line 23 in file "LED/led.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;  que             1    wreg     PTR struct .
  4088 ;;		 -> digitron3(14), digitron2(14), digitron1(14), 
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;  que             1    8[BANK3 ] PTR struct .
  4091 ;;		 -> digitron3(14), digitron2(14), digitron1(14), 
  4092 ;;  num             1    9[BANK3 ] unsigned char 
  4093 ;;  j               1   11[BANK3 ] unsigned char 
  4094 ;;  i               1   12[BANK3 ] unsigned char 
  4095 ;;  fro             1   10[BANK3 ] unsigned char 
  4096 ;; Return value:  Size  Location     Type
  4097 ;;		None               void
  4098 ;; Registers used:
  4099 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : 17F/160
  4102 ;;		On exit  : 17F/160
  4103 ;;		Unchanged: FFE80/0
  4104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4105 ;;      Params:         0       0       0       0       0
  4106 ;;      Locals:         0       0       0       5       0
  4107 ;;      Temps:          0       0       0       3       0
  4108 ;;      Totals:         0       0       0       8       0
  4109 ;;Total ram usage:        8 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:   11
  4112 ;; This function calls:
  4113 ;;		_Digitron_Command
  4114 ;;		_Digitron_Send_8bit
  4115 ;; This function is called by:
  4116 ;;		_Init_Digitrons
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119  097D                     _Digitron_Display:	
  4120                           
  4121 ;; hardware stack exceeded
  4122                           ; Regs used in _Digitron_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4123                           ;Digitron_Display@que stored from wreg
  4124  097D  00D3               	movwf	Digitron_Display@que^(0+384)
  4125                           
  4126                           ;led.c: 24: unsigned char fro = que->front;
  4127  097E  3E01               	addlw	1
  4128  097F  0084               	movwf	4
  4129  0980  0800               	movf	0,w
  4130  0981  00D5               	movwf	Digitron_Display@fro^(0+384)
  4131                           
  4132                           ;led.c: 25: for(unsigned char i=0; i<3; i++)
  4133  0982  01D7               	clrf	Digitron_Display@i^(0+384)
  4134  0983                     l8973:	
  4135                           
  4136                           ;led.c: 26: {
  4137                           ;led.c: 27: if(fro+i == 3)
  4138  0983  0855               	movf	Digitron_Display@fro^(0+384),w
  4139  0984  0757               	addwf	Digitron_Display@i^(0+384),w
  4140  0985  00D0               	movwf	??_Digitron_Display^(0+384)
  4141  0986  01D1               	clrf	(??_Digitron_Display^(0+384)+1)
  4142  0987  0DD1               	rlf	(??_Digitron_Display+1)^(0+384),f
  4143  0988  3A03               	xorlw	3
  4144  0989  0451               	iorwf	(??_Digitron_Display+1)^(0+384),w
  4145  098A  1D03               	skipz
  4146  098B  298E               	goto	l8977
  4147                           
  4148                           ;led.c: 28: fro = 0;
  4149  098C  01D5               	clrf	Digitron_Display@fro^(0+384)
  4150  098D  2990               	goto	l8979
  4151  098E                     l8977:	
  4152                           
  4153                           ;led.c: 29: else
  4154                           ;led.c: 30: fro = fro+i;
  4155  098E  0857               	movf	Digitron_Display@i^(0+384),w
  4156  098F  07D5               	addwf	Digitron_Display@fro^(0+384),f
  4157  0990                     l8979:	
  4158                           
  4159                           ;led.c: 32: Digitron_Command(i, 0x00);
  4160  0990  01CE               	clrf	?_Digitron_Command^(0+384)
  4161  0991  0857               	movf	Digitron_Display@i^(0+384),w
  4162  0992  21F7  120A  158A   	fcall	_Digitron_Command
  4163                           
  4164                           ;led.c: 33: Digitron_Command(i, 0x40);
  4165  0995  3040               	movlw	64
  4166  0996  00CE               	movwf	?_Digitron_Command^(0+384)
  4167  0997  0857               	movf	Digitron_Display@i^(0+384),w
  4168  0998  21F7  120A  158A   	fcall	_Digitron_Command
  4169                           
  4170                           ;led.c: 34: Digitron_Command(i, 0xc0);
  4171  099B  30C0               	movlw	192
  4172  099C  00CE               	movwf	?_Digitron_Command^(0+384)
  4173  099D  0857               	movf	Digitron_Display@i^(0+384),w
  4174  099E  21F7  120A  158A   	fcall	_Digitron_Command
  4175                           
  4176                           ;led.c: 35: for(unsigned char j=0;j<4;j++)
  4177  09A1  01D6               	clrf	Digitron_Display@j^(0+384)
  4178  09A2                     l8991:	
  4179                           
  4180                           ;led.c: 36: {
  4181                           ;led.c: 37: unsigned char num = que->data[fro][j]-0x30;
  4182  09A2  0855               	movf	Digitron_Display@fro^(0+384),w
  4183  09A3  00D0               	movwf	??_Digitron_Display^(0+384)
  4184  09A4  1003               	clrc
  4185  09A5  0DD0               	rlf	??_Digitron_Display^(0+384),f
  4186  09A6  1003               	clrc
  4187  09A7  0D50               	rlf	??_Digitron_Display^(0+384),w
  4188  09A8  0753               	addwf	Digitron_Display@que^(0+384),w
  4189  09A9  00D1               	movwf	(??_Digitron_Display+1)^(0+384)
  4190  09AA  0856               	movf	Digitron_Display@j^(0+384),w
  4191  09AB  0751               	addwf	(??_Digitron_Display+1)^(0+384),w
  4192  09AC  00D2               	movwf	(??_Digitron_Display+2)^(0+384)
  4193  09AD  3E02               	addlw	2
  4194  09AE  0084               	movwf	4
  4195  09AF  0800               	movf	0,w
  4196  09B0  3ED0               	addlw	208
  4197  09B1  00D4               	movwf	Digitron_Display@num^(0+384)
  4198                           
  4199                           ;led.c: 38: if(num>10)
  4200  09B2  300B               	movlw	11
  4201  09B3  0254               	subwf	Digitron_Display@num^(0+384),w
  4202  09B4  1C03               	skipc
  4203  09B5  29B8               	goto	l8997
  4204                           
  4205                           ;led.c: 39: {
  4206                           ;led.c: 41: num = 9;
  4207  09B6  3009               	movlw	9
  4208  09B7  00D4               	movwf	Digitron_Display@num^(0+384)
  4209  09B8                     l8997:	
  4210                           
  4211                           ;led.c: 42: }
  4212                           ;led.c: 43: Digitron_Send_8bit(CODE[num]);
  4213  09B8  0854               	movf	Digitron_Display@num^(0+384),w
  4214  09B9  3E01               	addlw	low (_CODE-__stringbase)
  4215  09BA  0084               	movwf	4
  4216  09BB  120A  118A  2021   	fcall	stringdir
      +       120A  158A         
  4217  09C0  21DC  120A  158A   	fcall	_Digitron_Send_8bit
  4218                           
  4219                           ;led.c: 44: Digitron_Send_8bit(0);
  4220  09C3  3000               	movlw	0
  4221  09C4  21DC  120A  158A   	fcall	_Digitron_Send_8bit
  4222  09C7  0AD6               	incf	Digitron_Display@j^(0+384),f
  4223  09C8  3004               	movlw	4
  4224  09C9  0256               	subwf	Digitron_Display@j^(0+384),w
  4225  09CA  1C03               	skipc
  4226  09CB  29A2               	goto	l8991
  4227                           
  4228                           ;led.c: 46: }
  4229                           ;led.c: 47: Digitron_Send_8bit(0x8F);
  4230  09CC  308F               	movlw	143
  4231  09CD  21DC  120A  158A   	fcall	_Digitron_Send_8bit
  4232                           
  4233                           ;led.c: 48: PORTD = 0xF0;
  4234  09D0  30F0               	movlw	240
  4235  09D1  1283               	bcf	3,5	;RP0=0, select bank0
  4236  09D2  1303               	bcf	3,6	;RP1=0, select bank0
  4237  09D3  0088               	movwf	8	;volatile
  4238  09D4  1683               	bsf	3,5	;RP0=1, select bank3
  4239  09D5  1703               	bsf	3,6	;RP1=1, select bank3
  4240  09D6  0AD7               	incf	Digitron_Display@i^(0+384),f
  4241  09D7  3003               	movlw	3
  4242  09D8  0257               	subwf	Digitron_Display@i^(0+384),w
  4243  09D9  1803               	btfsc	3,0
  4244  09DA  0008               	return
  4245  09DB  2983               	goto	l8973
  4246  09DC                     __end_of_Digitron_Display:	
  4247  09DC                     __ptext1209:	
  4248 ;; =============== function _delay_us ends ============
  4249                           
  4250                           
  4251 ;; *************** function _Digitron_Send_8bit *****************
  4252 ;; Defined at:
  4253 ;;		line 4 in file "TM1616/TM1616.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  dat             1    wreg     unsigned char 
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;  dat             1    0[BANK3 ] unsigned char 
  4258 ;;  i               1    1[BANK3 ] unsigned char 
  4259 ;; Return value:  Size  Location     Type
  4260 ;;		None               void
  4261 ;; Registers used:
  4262 ;;		wreg, status,2, status,0
  4263 ;; Tracked objects:
  4264 ;;		On entry : 17F/160
  4265 ;;		On exit  : 17F/160
  4266 ;;		Unchanged: FFE80/0
  4267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4268 ;;      Params:         0       0       0       0       0
  4269 ;;      Locals:         0       0       0       2       0
  4270 ;;      Temps:          0       0       0       0       0
  4271 ;;      Totals:         0       0       0       2       0
  4272 ;;Total ram usage:        2 bytes
  4273 ;; Hardware stack levels used:    1
  4274 ;; Hardware stack levels required when called:    9
  4275 ;; This function calls:
  4276 ;;		Nothing
  4277 ;; This function is called by:
  4278 ;;		_Digitron_Display
  4279 ;;		_Digitron_Command
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282  09DC                     _Digitron_Send_8bit:	
  4283                           
  4284 ;; hardware stack exceeded
  4285                           ; Regs used in _Digitron_Send_8bit: [wreg+status,2+status,0]
  4286                           ;Digitron_Send_8bit@dat stored from wreg
  4287  09DC  00CB               	movwf	Digitron_Send_8bit@dat^(0+384)
  4288                           
  4289                           ;TM1616.c: 5: unsigned char i;
  4290                           ;TM1616.c: 6: for(i=0;i<8;i++)
  4291  09DD  01CC               	clrf	Digitron_Send_8bit@i^(0+384)
  4292  09DE                     l1726:	
  4293                           
  4294                           ;TM1616.c: 7: {
  4295                           ;TM1616.c: 8: if(dat&0x01) {
  4296  09DE  1C4B               	btfss	Digitron_Send_8bit@dat^(0+384),0
  4297  09DF  29E4               	goto	l1728
  4298                           
  4299                           ;TM1616.c: 9: RC3=1;
  4300  09E0  1283               	bcf	3,5	;RP0=0, select bank0
  4301  09E1  1303               	bcf	3,6	;RP1=0, select bank0
  4302  09E2  1587               	bsf	7,3
  4303                           
  4304                           ;TM1616.c: 10: }
  4305  09E3  29E7               	goto	l1729
  4306  09E4                     l1728:	
  4307                           
  4308                           ;TM1616.c: 11: else{ RC3=0;}
  4309  09E4  1283               	bcf	3,5	;RP0=0, select bank0
  4310  09E5  1303               	bcf	3,6	;RP1=0, select bank0
  4311  09E6  1187               	bcf	7,3
  4312  09E7                     l1729:	
  4313                           
  4314                           ;TM1616.c: 12: RC2=0;
  4315  09E7  1107               	bcf	7,2
  4316                           
  4317                           ;TM1616.c: 13: dat=dat>>1;
  4318  09E8  1683               	bsf	3,5	;RP0=1, select bank3
  4319  09E9  1703               	bsf	3,6	;RP1=1, select bank3
  4320  09EA  1003               	clrc
  4321  09EB  0CCB               	rrf	Digitron_Send_8bit@dat^(0+384),f
  4322                           
  4323                           ;TM1616.c: 14: RC2=1;
  4324  09EC  1283               	bcf	3,5	;RP0=0, select bank0
  4325  09ED  1303               	bcf	3,6	;RP1=0, select bank0
  4326  09EE  1507               	bsf	7,2
  4327  09EF  1683               	bsf	3,5	;RP0=1, select bank3
  4328  09F0  1703               	bsf	3,6	;RP1=1, select bank3
  4329  09F1  0ACC               	incf	Digitron_Send_8bit@i^(0+384),f
  4330  09F2  3008               	movlw	8
  4331  09F3  024C               	subwf	Digitron_Send_8bit@i^(0+384),w
  4332  09F4  1803               	btfsc	3,0
  4333  09F5  0008               	return
  4334  09F6  29DE               	goto	l1726
  4335  09F7                     __end_of_Digitron_Send_8bit:	
  4336  09F7                     __ptext1198:	
  4337 ;; =============== function _Uart_1SendStr ends ============
  4338                           
  4339                           
  4340 ;; *************** function _Digitron_Command *****************
  4341 ;; Defined at:
  4342 ;;		line 19 in file "TM1616/TM1616.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;  device          1    wreg     unsigned char 
  4345 ;;  com             1    3[BANK3 ] unsigned char 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  device          1    4[BANK3 ] unsigned char 
  4348 ;; Return value:  Size  Location     Type
  4349 ;;		None               void
  4350 ;; Registers used:
  4351 ;;		wreg, status,2, status,0, pclath, cstack
  4352 ;; Tracked objects:
  4353 ;;		On entry : 17F/160
  4354 ;;		On exit  : 17F/160
  4355 ;;		Unchanged: FFE80/0
  4356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4357 ;;      Params:         0       0       0       1       0
  4358 ;;      Locals:         0       0       0       1       0
  4359 ;;      Temps:          0       0       0       0       0
  4360 ;;      Totals:         0       0       0       2       0
  4361 ;;Total ram usage:        2 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:   10
  4364 ;; This function calls:
  4365 ;;		_delay_us
  4366 ;;		_Digitron_Send_8bit
  4367 ;; This function is called by:
  4368 ;;		_Digitron_Display
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371  09F7                     _Digitron_Command:	
  4372                           
  4373 ;; hardware stack exceeded
  4374                           ; Regs used in _Digitron_Command: [wreg+status,2+status,0+pclath+cstack]
  4375                           ;Digitron_Command@device stored from wreg
  4376  09F7  00CF               	movwf	Digitron_Command@device^(0+384)
  4377                           
  4378                           ;TM1616.c: 20: PORTD = 0xF0;
  4379  09F8  30F0               	movlw	240
  4380  09F9  1283               	bcf	3,5	;RP0=0, select bank0
  4381  09FA  1303               	bcf	3,6	;RP1=0, select bank0
  4382  09FB  0088               	movwf	8	;volatile
  4383                           
  4384                           ;TM1616.c: 21: PORTD = device;
  4385  09FC  1683               	bsf	3,5	;RP0=1, select bank3
  4386  09FD  1703               	bsf	3,6	;RP1=1, select bank3
  4387  09FE  084F               	movf	Digitron_Command@device^(0+384),w
  4388  09FF  1283               	bcf	3,5	;RP0=0, select bank0
  4389  0A00  1303               	bcf	3,6	;RP1=0, select bank0
  4390  0A01  0088               	movwf	8	;volatile
  4391                           
  4392                           ;TM1616.c: 22: delay_us(1);
  4393  0A02  3001               	movlw	1
  4394  0A03  2208  120A  158A   	fcall	_delay_us
  4395                           
  4396                           ;TM1616.c: 23: Digitron_Send_8bit(com);
  4397  0A06  084E               	movf	Digitron_Command@com^(0+384),w
  4398  0A07  29DC               	ljmp	_Digitron_Send_8bit
  4399  0A08                     __end_of_Digitron_Command:	
  4400  0A08                     __ptext1208:	
  4401 ;; =============== function _initUART ends ============
  4402                           
  4403                           
  4404 ;; *************** function _delay_us *****************
  4405 ;; Defined at:
  4406 ;;		line 29 in file "timer.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  usec            1    wreg     unsigned char 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;  usec            1    0[BANK3 ] unsigned char 
  4411 ;;  j               1    2[BANK3 ] unsigned char 
  4412 ;;  i               1    1[BANK3 ] unsigned char 
  4413 ;; Return value:  Size  Location     Type
  4414 ;;		None               void
  4415 ;; Registers used:
  4416 ;;		wreg, status,2, status,0
  4417 ;; Tracked objects:
  4418 ;;		On entry : 17F/100
  4419 ;;		On exit  : 17F/160
  4420 ;;		Unchanged: FFE80/0
  4421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4422 ;;      Params:         0       0       0       0       0
  4423 ;;      Locals:         0       0       0       3       0
  4424 ;;      Temps:          0       0       0       0       0
  4425 ;;      Totals:         0       0       0       3       0
  4426 ;;Total ram usage:        3 bytes
  4427 ;; Hardware stack levels used:    1
  4428 ;; Hardware stack levels required when called:    9
  4429 ;; This function calls:
  4430 ;;		Nothing
  4431 ;; This function is called by:
  4432 ;;		_Digitron_Command
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435  0A08                     _delay_us:	
  4436                           
  4437 ;; hardware stack exceeded
  4438                           ; Regs used in _delay_us: [wreg+status,2+status,0]
  4439                           ;delay_us@usec stored from wreg
  4440  0A08  1683               	bsf	3,5	;RP0=1, select bank3
  4441  0A09  1703               	bsf	3,6	;RP1=1, select bank3
  4442  0A0A  00CB               	movwf	delay_us@usec^(0+384)
  4443                           
  4444                           ;timer.c: 30: for(unsigned char i = usec; i>0; i--)
  4445  0A0B  00CC               	movwf	delay_us@i^(0+384)
  4446  0A0C  08CC               	movf	delay_us@i^(0+384),f
  4447  0A0D  1903               	btfsc	3,2
  4448  0A0E  0008               	return
  4449  0A0F                     l9087:	
  4450                           
  4451                           ;timer.c: 31: for(unsigned char j = 2; j>0; j--);
  4452  0A0F  3002               	movlw	2
  4453  0A10  00CD               	movwf	delay_us@j^(0+384)
  4454  0A11                     l9093:	
  4455  0A11  0BCD               	decfsz	delay_us@j^(0+384),f
  4456  0A12  2A11               	goto	l9093
  4457  0A13  0BCC               	decfsz	delay_us@i^(0+384),f
  4458  0A14  2A0F               	goto	l9087
  4459  0A15  0008               	return
  4460  0A16                     __end_of_delay_us:	
  4461                           
  4462                           	psect	text1205
  4463  0800                     __ptext1205:	
  4464 ;; =============== function _DelaySec ends ============
  4465                           
  4466                           
  4467 ;; *************** function _Interrupt_Gross *****************
  4468 ;; Defined at:
  4469 ;;		line 88 in file "interrupt.c"
  4470 ;; Parameters:    Size  Location     Type
  4471 ;;  mov             1    wreg     unsigned char 
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;  mov             1    0[BANK3 ] unsigned char 
  4474 ;; Return value:  Size  Location     Type
  4475 ;;		None               void
  4476 ;; Registers used:
  4477 ;;		wreg
  4478 ;; Tracked objects:
  4479 ;;		On entry : 7F/0
  4480 ;;		On exit  : 17F/60
  4481 ;;		Unchanged: FFE80/0
  4482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4483 ;;      Params:         0       0       0       0       0
  4484 ;;      Locals:         0       0       0       1       0
  4485 ;;      Temps:          0       0       0       0       0
  4486 ;;      Totals:         0       0       0       1       0
  4487 ;;Total ram usage:        1 bytes
  4488 ;; Hardware stack levels used:    1
  4489 ;; Hardware stack levels required when called:    9
  4490 ;; This function calls:
  4491 ;;		Nothing
  4492 ;; This function is called by:
  4493 ;;		_main
  4494 ;; This function uses a non-reentrant model
  4495 ;;
  4496  0800                     _Interrupt_Gross:	
  4497                           
  4498 ;; hardware stack exceeded
  4499                           ; Regs used in _Interrupt_Gross: [wreg]
  4500                           ;Interrupt_Gross@mov stored from wreg
  4501  0800  1683               	bsf	3,5	;RP0=1, select bank3
  4502  0801  1703               	bsf	3,6	;RP1=1, select bank3
  4503  0802  00CB               	movwf	Interrupt_Gross@mov^(0+384)
  4504                           
  4505                           ;interrupt.c: 89: if(mov)
  4506  0803  084B               	movf	Interrupt_Gross@mov^(0+384),w
  4507  0804  1D03               	skipz
  4508                           
  4509                           ;interrupt.c: 90: GIE = 1;
  4510  0805  178B               	bsf	11,7
  4511  0806  0008               	return
  4512  0807                     __end_of_Interrupt_Gross:	
  4513                           
  4514                           	psect	text1206
  4515  1743                     __ptext1206:	
  4516 ;; =============== function _Interrupt_Gross ends ============
  4517                           
  4518                           
  4519 ;; *************** function _Init_Timer0 *****************
  4520 ;; Defined at:
  4521 ;;		line 10 in file "timer.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;		None
  4524 ;; Auto vars:     Size  Location     Type
  4525 ;;		None
  4526 ;; Return value:  Size  Location     Type
  4527 ;;		None               void
  4528 ;; Registers used:
  4529 ;;		wreg
  4530 ;; Tracked objects:
  4531 ;;		On entry : 17F/120
  4532 ;;		On exit  : 17F/100
  4533 ;;		Unchanged: FFE80/0
  4534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4535 ;;      Params:         0       0       0       0       0
  4536 ;;      Locals:         0       0       0       0       0
  4537 ;;      Temps:          0       0       0       0       0
  4538 ;;      Totals:         0       0       0       0       0
  4539 ;;Total ram usage:        0 bytes
  4540 ;; Hardware stack levels used:    1
  4541 ;; Hardware stack levels required when called:    9
  4542 ;; This function calls:
  4543 ;;		Nothing
  4544 ;; This function is called by:
  4545 ;;		_main
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548  1743                     _Init_Timer0:	
  4549                           
  4550                           ;timer.c: 12: OPTION=0x07;
  4551                           
  4552 ;; hardware stack exceeded
  4553                           ; Regs used in _Init_Timer0: [wreg]
  4554  1743  3007               	movlw	7
  4555  1744  0081               	movwf	1	;volatile
  4556                           
  4557                           ;timer.c: 13: TMR0 = 0x28;
  4558  1745  3028               	movlw	40
  4559  1746  1283               	bcf	3,5	;RP0=0, select bank0
  4560  1747  0081               	movwf	1	;volatile
  4561                           
  4562                           ;timer.c: 15: T0IE = 1;
  4563  1748  168B               	bsf	11,5
  4564  1749  0008               	return
  4565  174A                     __end_of_Init_Timer0:	
  4566                           
  4567                           	psect	text1207
  4568  1752                     __ptext1207:	
  4569 ;; =============== function _Init_Timer0 ends ============
  4570                           
  4571                           
  4572 ;; *************** function _initUART *****************
  4573 ;; Defined at:
  4574 ;;		line 4 in file "uart.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;		None
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;		None
  4579 ;; Return value:  Size  Location     Type
  4580 ;;		None               void
  4581 ;; Registers used:
  4582 ;;		wreg
  4583 ;; Tracked objects:
  4584 ;;		On entry : 17F/160
  4585 ;;		On exit  : 17F/120
  4586 ;;		Unchanged: FFE80/0
  4587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4588 ;;      Params:         0       0       0       0       0
  4589 ;;      Locals:         0       0       0       0       0
  4590 ;;      Temps:          0       0       0       0       0
  4591 ;;      Totals:         0       0       0       0       0
  4592 ;;Total ram usage:        0 bytes
  4593 ;; Hardware stack levels used:    1
  4594 ;; Hardware stack levels required when called:    9
  4595 ;; This function calls:
  4596 ;;		Nothing
  4597 ;; This function is called by:
  4598 ;;		_main
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601  1752                     _initUART:	
  4602                           
  4603                           ;uart.c: 6: CSRC=0;
  4604                           
  4605 ;; hardware stack exceeded
  4606                           ; Regs used in _initUART: [wreg]
  4607  1752  1303               	bcf	3,6	;RP1=0, select bank1
  4608  1753  1398               	bcf	24,7
  4609                           
  4610                           ;uart.c: 7: TX9=0;
  4611  1754  1318               	bcf	24,6
  4612                           
  4613                           ;uart.c: 8: TXEN=1;
  4614  1755  1698               	bsf	24,5
  4615                           
  4616                           ;uart.c: 9: SYNC=0;
  4617  1756  1218               	bcf	24,4
  4618                           
  4619                           ;uart.c: 10: BRGH=1;
  4620  1757  1518               	bsf	24,2
  4621                           
  4622                           ;uart.c: 11: TRMT=1;
  4623  1758  1498               	bsf	24,1
  4624                           
  4625                           ;uart.c: 12: TX9D=0;
  4626  1759  1018               	bcf	24,0
  4627                           
  4628                           ;uart.c: 14: SPEN=1;
  4629  175A  1283               	bcf	3,5	;RP0=0, select bank0
  4630  175B  1798               	bsf	24,7
  4631                           
  4632                           ;uart.c: 15: RX9=0;
  4633  175C  1318               	bcf	24,6
  4634                           
  4635                           ;uart.c: 16: SREN=1;
  4636  175D  1698               	bsf	24,5
  4637                           
  4638                           ;uart.c: 17: CREN=1;
  4639  175E  1618               	bsf	24,4
  4640                           
  4641                           ;uart.c: 18: ADDEN=0;
  4642  175F  1198               	bcf	24,3
  4643                           
  4644                           ;uart.c: 19: FERR=0;
  4645  1760  1118               	bcf	24,2
  4646                           
  4647                           ;uart.c: 20: OERR=0;
  4648  1761  1098               	bcf	24,1
  4649                           
  4650                           ;uart.c: 21: RX9D=0;
  4651  1762  1018               	bcf	24,0
  4652                           
  4653                           ;uart.c: 22: TRISC=0X80;
  4654  1763  3080               	movlw	128
  4655  1764  1683               	bsf	3,5	;RP0=1, select bank1
  4656  1765  0087               	movwf	7	;volatile
  4657                           
  4658                           ;uart.c: 23: SPBRG=0X05;
  4659  1766  3005               	movlw	5
  4660  1767  0099               	movwf	25	;volatile
  4661                           
  4662                           ;uart.c: 26: RCIE = 1;
  4663  1768  168C               	bsf	12,5
  4664                           
  4665                           ;uart.c: 29: PEIE=1;
  4666  1769  170B               	bsf	11,6
  4667  176A  0008               	return
  4668  176B                     __end_of_initUART:	
  4669                           
  4670                           	psect	text1211
  4671  0CCB                     __ptext1211:	
  4672 ;; =============== function _queueArray_init ends ============
  4673                           
  4674                           
  4675 ;; *************** function _SerialService *****************
  4676 ;; Defined at:
  4677 ;;		line 5 in file "interrupt.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;		None
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;  tmp             1   78[BANK0 ] unsigned char 
  4682 ;; Return value:  Size  Location     Type
  4683 ;;		None               void
  4684 ;; Registers used:
  4685 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 60/20
  4689 ;;		Unchanged: FFE00/0
  4690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4691 ;;      Params:         0       0       0       0       0
  4692 ;;      Locals:         0       1       0       0       0
  4693 ;;      Temps:          0       0       4       0       0
  4694 ;;      Totals:         0       1       4       0       0
  4695 ;;Total ram usage:        5 bytes
  4696 ;; Hardware stack levels used:    1
  4697 ;; Hardware stack levels required when called:    8
  4698 ;; This function calls:
  4699 ;;		_Pos_meet
  4700 ;; This function is called by:
  4701 ;;		Interrupt level 1
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704  0CCB                     _SerialService:	
  4705                           
  4706                           ;interrupt.c: 6: char tmp;
  4707                           ;interrupt.c: 7: if(RCIE&&RCIF)
  4708  0CCB  1E8C               	btfss	12,5
  4709  0CCC  2D39               	goto	i1l4704
  4710  0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  4711  0CCE  1E8C               	btfss	12,5
  4712  0CCF  2D39               	goto	i1l4704
  4713                           
  4714                           ;interrupt.c: 8: {
  4715                           ;interrupt.c: 11: RCIF=0;
  4716  0CD0  128C               	bcf	12,5
  4717                           
  4718                           ;interrupt.c: 12: tmp=RCREG;
  4719  0CD1  081A               	movf	26,w	;volatile
  4720  0CD2  00EE               	movwf	SerialService@tmp
  4721                           
  4722                           ;interrupt.c: 13: rcv_wifi[WifiRcvCnt] = tmp;
  4723  0CD3  086F               	movf	_WifiRcvCnt,w
  4724  0CD4  3E10               	addlw	_rcv_wifi& (0+255)
  4725  0CD5  0084               	movwf	4
  4726  0CD6  086E               	movf	SerialService@tmp,w
  4727  0CD7  1783               	bsf	3,7	;select IRP bank2
  4728  0CD8  0080               	movwf	0
  4729                           
  4730                           ;interrupt.c: 14: WifiRcvCnt++;
  4731  0CD9  0AEF               	incf	_WifiRcvCnt,f
  4732                           
  4733                           ;interrupt.c: 16: if(WifiRcvCnt > 50)
  4734  0CDA  3033               	movlw	51
  4735  0CDB  026F               	subwf	_WifiRcvCnt,w
  4736  0CDC  1803               	btfsc	3,0
  4737                           
  4738                           ;interrupt.c: 17: {
  4739                           ;interrupt.c: 18: WifiRcvCnt = 0;
  4740  0CDD  01EF               	clrf	_WifiRcvCnt
  4741                           
  4742                           ;interrupt.c: 19: }
  4743                           ;interrupt.c: 21: if(config_ok)
  4744  0CDE  1683               	bsf	3,5	;RP0=1, select bank1
  4745  0CDF  0869               	movf	_config_ok^(0+128),w
  4746  0CE0  1903               	btfsc	3,2
  4747  0CE1  2D39               	goto	i1l4704
  4748                           
  4749                           ;interrupt.c: 22: {
  4750                           ;interrupt.c: 23: if(tmp == '+')
  4751  0CE2  1283               	bcf	3,5	;RP0=0, select bank0
  4752  0CE3  086E               	movf	SerialService@tmp,w
  4753  0CE4  3A2B               	xorlw	43
  4754                           
  4755                           ;interrupt.c: 24: {
  4756                           ;interrupt.c: 26: pos = 0;
  4757  0CE5  1683               	bsf	3,5	;RP0=1, select bank1
  4758  0CE6  1903               	btfsc	3,2
  4759  0CE7  01EA               	clrf	_pos^(0+128)
  4760                           
  4761                           ;interrupt.c: 27: }
  4762                           ;interrupt.c: 28: if((tmp == ',')||(tmp ==':'))
  4763  0CE8  1283               	bcf	3,5	;RP0=0, select bank0
  4764  0CE9  086E               	movf	SerialService@tmp,w
  4765  0CEA  3A2C               	xorlw	44
  4766  0CEB  1903               	skipnz
  4767  0CEC  2CF1               	goto	i1l9345
  4768  0CED  086E               	movf	SerialService@tmp,w
  4769  0CEE  3A3A               	xorlw	58
  4770  0CEF  1D03               	skipz
  4771  0CF0  2D28               	goto	i1l9373
  4772  0CF1                     i1l9345:	
  4773                           
  4774                           ;interrupt.c: 29: {
  4775                           ;interrupt.c: 30: pos++;
  4776  0CF1  1683               	bsf	3,5	;RP0=1, select bank1
  4777  0CF2  0AEA               	incf	_pos^(0+128),f
  4778                           
  4779                           ;interrupt.c: 31: Pos_meet(pos);
  4780  0CF3  086A               	movf	_pos^(0+128),w
  4781  0CF4  2557  120A  158A   	fcall	_Pos_meet
  4782                           
  4783                           ;interrupt.c: 32: }
  4784  0CF7  2D39               	goto	i1l4704
  4785  0CF8                     i1l9349:	
  4786                           
  4787                           ;interrupt.c: 42: {
  4788                           ;interrupt.c: 43: arr_rcv_len[LenRcvCnt++] = tmp;
  4789  0CF8  0866               	movf	_LenRcvCnt^(0+128),w
  4790  0CF9  3EC8               	addlw	_arr_rcv_len& (0+255)
  4791  0CFA  0084               	movwf	4
  4792  0CFB  1283               	bcf	3,5	;RP0=0, select bank0
  4793  0CFC  086E               	movf	SerialService@tmp,w
  4794  0CFD  0080               	movwf	0
  4795  0CFE  1683               	bsf	3,5	;RP0=1, select bank1
  4796  0CFF  0AE6               	incf	_LenRcvCnt^(0+128),f
  4797                           
  4798                           ;interrupt.c: 44: break;
  4799  0D00  2D39               	goto	i1l4704
  4800  0D01                     i1l9353:	
  4801                           
  4802                           ;interrupt.c: 47: {
  4803                           ;interrupt.c: 48: arr_rcv_who[WhoRcvCnt++] = tmp;
  4804  0D01  0868               	movf	_WhoRcvCnt^(0+128),w
  4805  0D02  3EDD               	addlw	_arr_rcv_who& (0+255)
  4806  0D03  0084               	movwf	4
  4807  0D04  1283               	bcf	3,5	;RP0=0, select bank0
  4808  0D05  086E               	movf	SerialService@tmp,w
  4809  0D06  1383               	bcf	3,7	;select IRP bank1
  4810  0D07  0080               	movwf	0
  4811  0D08  1683               	bsf	3,5	;RP0=1, select bank1
  4812  0D09  0AE8               	incf	_WhoRcvCnt^(0+128),f
  4813                           
  4814                           ;interrupt.c: 49: break;
  4815  0D0A  2D39               	goto	i1l4704
  4816  0D0B                     i1l9357:	
  4817                           
  4818                           ;interrupt.c: 52: {
  4819                           ;interrupt.c: 53: arr_rcv_section1[LatiRcvCnt++] = tmp;
  4820  0D0B  0865               	movf	_LatiRcvCnt^(0+128),w
  4821  0D0C  3E90               	addlw	_arr_rcv_section1& (0+255)
  4822  0D0D  0084               	movwf	4
  4823  0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  4824  0D0F  086E               	movf	SerialService@tmp,w
  4825  0D10  0080               	movwf	0
  4826  0D11  1683               	bsf	3,5	;RP0=1, select bank1
  4827  0D12  0AE5               	incf	_LatiRcvCnt^(0+128),f
  4828                           
  4829                           ;interrupt.c: 54: break;
  4830  0D13  2D39               	goto	i1l4704
  4831  0D14                     i1l9361:	
  4832                           
  4833                           ;interrupt.c: 57: {
  4834                           ;interrupt.c: 58: arr_rcv_section2[LongiRcvCnt++] = tmp;
  4835  0D14  0867               	movf	_LongiRcvCnt^(0+128),w
  4836  0D15  3E9A               	addlw	_arr_rcv_section2& (0+255)
  4837  0D16  0084               	movwf	4
  4838  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  4839  0D18  086E               	movf	SerialService@tmp,w
  4840  0D19  0080               	movwf	0
  4841  0D1A  1683               	bsf	3,5	;RP0=1, select bank1
  4842  0D1B  0AE7               	incf	_LongiRcvCnt^(0+128),f
  4843                           
  4844                           ;interrupt.c: 59: if(WifiRcvCnt == val_rcv_len)
  4845  0D1C  1283               	bcf	3,5	;RP0=0, select bank0
  4846  0D1D  086F               	movf	_WifiRcvCnt,w
  4847  0D1E  1683               	bsf	3,5	;RP0=1, select bank1
  4848  0D1F  066C               	xorwf	_val_rcv_len^(0+128),w
  4849  0D20  1D03               	skipz
  4850  0D21  2D39               	goto	i1l4704
  4851                           
  4852                           ;interrupt.c: 60: {
  4853                           ;interrupt.c: 61: pos++;
  4854  0D22  0AEA               	incf	_pos^(0+128),f
  4855                           
  4856                           ;interrupt.c: 62: Pos_meet(pos);
  4857  0D23  086A               	movf	_pos^(0+128),w
  4858  0D24  2557  120A  158A   	fcall	_Pos_meet
  4859  0D27  2D39               	goto	i1l4704
  4860  0D28                     i1l9373:	
  4861  0D28  1683               	bsf	3,5	;RP0=1, select bank1
  4862  0D29  086A               	movf	_pos^(0+128),w
  4863                           
  4864                           ; Switch size 1, requested type "space"
  4865                           ; Number of cases is 5, Range of values is 1 to 5
  4866                           ; switch strategies available:
  4867                           ; Name         Bytes Cycles
  4868                           ; simple_byte    16     9 (average)
  4869                           ; direct_byte    37    22 (fixed)
  4870                           ;	Chosen strategy is simple_byte
  4871  0D2A  3A01               	xorlw	1	; case 1
  4872  0D2B  1903               	skipnz
  4873  0D2C  2D39               	goto	i1l4704
  4874  0D2D  3A03               	xorlw	3	; case 2
  4875  0D2E  1903               	skipnz
  4876  0D2F  2CF8               	goto	i1l9349
  4877  0D30  3A01               	xorlw	1	; case 3
  4878  0D31  1903               	skipnz
  4879  0D32  2D01               	goto	i1l9353
  4880  0D33  3A07               	xorlw	7	; case 4
  4881  0D34  1903               	skipnz
  4882  0D35  2D0B               	goto	i1l9357
  4883  0D36  3A01               	xorlw	1	; case 5
  4884  0D37  1903               	skipnz
  4885  0D38  2D14               	goto	i1l9361
  4886  0D39                     i1l4704:	
  4887                           
  4888                           ;interrupt.c: 68: }
  4889                           ;interrupt.c: 69: }
  4890                           ;interrupt.c: 70: }
  4891                           ;interrupt.c: 72: if(T0IF == 1)
  4892  0D39  1D0B               	btfss	11,2
  4893  0D3A  2D49               	goto	i1l4722
  4894                           
  4895                           ;interrupt.c: 73: {
  4896                           ;interrupt.c: 74: T0IF = 0;
  4897  0D3B  110B               	bcf	11,2
  4898                           
  4899                           ;interrupt.c: 75: TMR0 = 0x28;
  4900  0D3C  3028               	movlw	40
  4901  0D3D  1283               	bcf	3,5	;RP0=0, select bank0
  4902  0D3E  0081               	movwf	1	;volatile
  4903                           
  4904                           ;interrupt.c: 76: if(timer0_cnt++ > 50)
  4905  0D3F  3034               	movlw	52
  4906  0D40  1683               	bsf	3,5	;RP0=1, select bank1
  4907  0D41  0AEB               	incf	_timer0_cnt^(0+128),f	;volatile
  4908  0D42  026B               	subwf	_timer0_cnt^(0+128),w	;volatile
  4909  0D43  1C03               	skipc
  4910  0D44  2D49               	goto	i1l4722
  4911                           
  4912                           ;interrupt.c: 77: {
  4913                           ;interrupt.c: 78: timer0_cnt = 0;
  4914  0D45  01EB               	clrf	_timer0_cnt^(0+128)	;volatile
  4915                           
  4916                           ;interrupt.c: 79: sec_cnt++;
  4917  0D46  0AE1               	incf	_sec_cnt^(0+128),f	;volatile
  4918  0D47  1903               	skipnz
  4919  0D48  0AE2               	incf	(_sec_cnt+1)^(0+128),f	;volatile
  4920  0D49                     i1l4722:	
  4921  0D49  1683               	bsf	3,5	;RP0=1, select bank1
  4922  0D4A  085C               	movf	(??_SerialService+3)^(0+128),w
  4923  0D4B  1283               	bcf	3,5	;RP0=0, select bank0
  4924  0D4C  00FF               	movwf	127
  4925  0D4D  1683               	bsf	3,5	;RP0=1, select bank1
  4926  0D4E  085B               	movf	(??_SerialService+2)^(0+128),w
  4927  0D4F  008A               	movwf	10
  4928  0D50  085A               	movf	(??_SerialService+1)^(0+128),w
  4929  0D51  0084               	movwf	4
  4930  0D52  0859               	movf	??_SerialService^(0+128),w
  4931  0D53  0083               	movwf	3
  4932  0D54  0EFE               	swapf	126,f
  4933  0D55  0E7E               	swapf	126,w
  4934  0D56  0009               	retfie
  4935  0D57                     __end_of_SerialService:	
  4936  0D57                     __ptext1212:	
  4937 ;; =============== function _SerialService ends ============
  4938                           
  4939                           
  4940 ;; *************** function _Pos_meet *****************
  4941 ;; Defined at:
  4942 ;;		line 16 in file "Gps_recive.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;  pos             1    wreg     unsigned char 
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;  pos             1   52[BANK1 ] unsigned char 
  4947 ;;  j               1   56[BANK1 ] unsigned char 
  4948 ;;  j               1   54[BANK1 ] unsigned char 
  4949 ;;  i               1   55[BANK1 ] unsigned char 
  4950 ;;  i               1   53[BANK1 ] unsigned char 
  4951 ;;  arr_rcv_long    6   46[BANK1 ] unsigned char [6]
  4952 ;;  arr_rcv_lati    6   40[BANK1 ] unsigned char [6]
  4953 ;; Return value:  Size  Location     Type
  4954 ;;		None               void
  4955 ;; Registers used:
  4956 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4957 ;; Tracked objects:
  4958 ;;		On entry : 160/120
  4959 ;;		On exit  : 60/20
  4960 ;;		Unchanged: FFE00/0
  4961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4962 ;;      Params:         0       0       0       0       0
  4963 ;;      Locals:         0       0      17       0       0
  4964 ;;      Temps:          0       0       3       0       0
  4965 ;;      Totals:         0       0      20       0       0
  4966 ;;Total ram usage:       20 bytes
  4967 ;; Hardware stack levels used:    1
  4968 ;; Hardware stack levels required when called:    7
  4969 ;; This function calls:
  4970 ;;		_atoi
  4971 ;;		_atol
  4972 ;;		_Distance_Update
  4973 ;;		_Digitron_Update
  4974 ;;		_CleanGpsRcv
  4975 ;; This function is called by:
  4976 ;;		_SerialService
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979  0D57                     _Pos_meet:	
  4980                           
  4981 ;; hardware stack exceeded
  4982                           ; Regs used in _Pos_meet: [allreg]
  4983                           ;Pos_meet@pos stored from wreg
  4984  0D57  00D4               	movwf	Pos_meet@pos^(0+128)
  4985                           
  4986                           ; Switch size 1, requested type "space"
  4987                           ; Number of cases is 4, Range of values is 3 to 6
  4988                           ; switch strategies available:
  4989                           ; Name         Bytes Cycles
  4990                           ; simple_byte    13     7 (average)
  4991                           ; direct_byte    34    22 (fixed)
  4992                           ;	Chosen strategy is simple_byte
  4993                           
  4994                           ;Gps_recive.c: 86: }
  4995                           ;Gps_recive.c: 87: }
  4996                           
  4997                           ;Gps_recive.c: 17: switch(pos)
  4998  0D58  3A03               	xorlw	3	; case 3
  4999  0D59  1903               	skipnz
  5000  0D5A  2D6D               	goto	i1l9387
  5001  0D5B  3A07               	xorlw	7	; case 4
  5002  0D5C  1903               	skipnz
  5003  0D5D  0008               	return
  5004  0D5E  3A01               	xorlw	1	; case 5
  5005  0D5F  1903               	skipnz
  5006  0D60  0008               	return
  5007  0D61  3A03               	xorlw	3	; case 6
  5008  0D62  1D03               	btfss	3,2
  5009  0D63  0008               	return
  5010  0D64  085D               	movf	_arr_rcv_who^(0+128),w
  5011                           
  5012                           ; Switch size 1, requested type "space"
  5013                           ; Number of cases is 3, Range of values is 65 to 67
  5014                           ; switch strategies available:
  5015                           ; Name         Bytes Cycles
  5016                           ; simple_byte    10     6 (average)
  5017                           ; direct_byte    31    22 (fixed)
  5018                           ;	Chosen strategy is simple_byte
  5019  0D65  3A41               	xorlw	65	; case 65
  5020  0D66  1903               	skipnz
  5021  0D67  2D77               	goto	i1l9391
  5022  0D68  3A03               	xorlw	3	; case 66
  5023  0D69  1903               	skipnz
  5024  0D6A  2DF8               	goto	i1l9441
  5025  0D6B  3A01               	xorlw	1	; case 67
  5026  0D6C  2DFB               	goto	i1l9447
  5027  0D6D                     i1l9387:	
  5028                           
  5029                           ;Gps_recive.c: 20: {
  5030                           ;Gps_recive.c: 21: WifiRcvCnt = 0;
  5031  0D6D  1283               	bcf	3,5	;RP0=0, select bank0
  5032  0D6E  01EF               	clrf	_WifiRcvCnt
  5033                           
  5034                           ;Gps_recive.c: 22: val_rcv_len = atoi(arr_rcv_len);
  5035  0D6F  30C8               	movlw	_arr_rcv_len& (0+255)
  5036  0D70  160A  118A  278B   	fcall	_atoi
  5037  0D73  0877               	movf	?_atoi,w
  5038  0D74  1683               	bsf	3,5	;RP0=1, select bank1
  5039  0D75  00EC               	movwf	_val_rcv_len^(0+128)
  5040                           
  5041                           ;Gps_recive.c: 23: break;
  5042  0D76  0008               	return
  5043  0D77                     i1l9391:	
  5044                           
  5045                           ;Gps_recive.c: 39: {
  5046                           ;Gps_recive.c: 40: char arr_rcv_lati[6], arr_rcv_longi[6];
  5047                           ;Gps_recive.c: 43: for(char i = 0; i<10; i++)
  5048  0D77  01D5               	clrf	Pos_meet@i^(0+128)
  5049  0D78                     i1l9397:	
  5050                           
  5051                           ;Gps_recive.c: 44: {
  5052                           ;Gps_recive.c: 45: if(arr_rcv_section1[i]=='.')
  5053  0D78  0855               	movf	Pos_meet@i^(0+128),w
  5054  0D79  3E90               	addlw	_arr_rcv_section1& (0+255)
  5055  0D7A  0084               	movwf	4
  5056  0D7B  0800               	movf	0,w
  5057  0D7C  3A2E               	xorlw	46
  5058  0D7D  1D03               	skipz
  5059  0D7E  2D96               	goto	i1l9411
  5060                           
  5061                           ;Gps_recive.c: 46: {
  5062                           ;Gps_recive.c: 47: for(char j = 0; j<10; j++)
  5063  0D7F  01D6               	clrf	Pos_meet@j^(0+128)
  5064  0D80                     i1l9405:	
  5065                           
  5066                           ;Gps_recive.c: 48: {
  5067                           ;Gps_recive.c: 49: arr_rcv_lati[j] = arr_rcv_section1[i+j+1];
  5068  0D80  3091               	movlw	(_arr_rcv_section1+1)& (0+255)
  5069  0D81  0756               	addwf	Pos_meet@j^(0+128),w
  5070  0D82  00C5               	movwf	??_Pos_meet^(0+128)
  5071  0D83  0855               	movf	Pos_meet@i^(0+128),w
  5072  0D84  0745               	addwf	??_Pos_meet^(0+128),w
  5073  0D85  00C6               	movwf	(??_Pos_meet+1)^(0+128)
  5074  0D86  0084               	movwf	4
  5075  0D87  1783               	bsf	3,7	;select IRP bank3
  5076  0D88  0800               	movf	0,w
  5077  0D89  00C7               	movwf	(??_Pos_meet+2)^(0+128)
  5078  0D8A  0856               	movf	Pos_meet@j^(0+128),w
  5079  0D8B  3EC8               	addlw	Pos_meet@arr_rcv_lati& (0+255)
  5080  0D8C  0084               	movwf	4
  5081  0D8D  0847               	movf	(??_Pos_meet+2)^(0+128),w
  5082  0D8E  1383               	bcf	3,7	;select IRP bank1
  5083  0D8F  0080               	movwf	0
  5084  0D90  0AD6               	incf	Pos_meet@j^(0+128),f
  5085  0D91  300A               	movlw	10
  5086  0D92  0256               	subwf	Pos_meet@j^(0+128),w
  5087  0D93  1803               	btfsc	3,0
  5088  0D94  2D9B               	goto	i1l9415
  5089  0D95  2D80               	goto	i1l9405
  5090  0D96                     i1l9411:	
  5091  0D96  0AD5               	incf	Pos_meet@i^(0+128),f
  5092  0D97  300A               	movlw	10
  5093  0D98  0255               	subwf	Pos_meet@i^(0+128),w
  5094  0D99  1C03               	skipc
  5095  0D9A  2D78               	goto	i1l9397
  5096  0D9B                     i1l9415:	
  5097                           
  5098                           ;Gps_recive.c: 52: }
  5099                           ;Gps_recive.c: 53: }
  5100                           ;Gps_recive.c: 54: for(char i = 0; i<10; i++)
  5101  0D9B  01D7               	clrf	Pos_meet@i_2818^(0+128)
  5102  0D9C                     i1l9421:	
  5103                           
  5104                           ;Gps_recive.c: 55: {
  5105                           ;Gps_recive.c: 56: if(arr_rcv_section2[i]=='.')
  5106  0D9C  0857               	movf	Pos_meet@i_2818^(0+128),w
  5107  0D9D  3E9A               	addlw	_arr_rcv_section2& (0+255)
  5108  0D9E  0084               	movwf	4
  5109  0D9F  1783               	bsf	3,7	;select IRP bank3
  5110  0DA0  0800               	movf	0,w
  5111  0DA1  3A2E               	xorlw	46
  5112  0DA2  1D03               	skipz
  5113  0DA3  2DBB               	goto	i1l9435
  5114                           
  5115                           ;Gps_recive.c: 57: {
  5116                           ;Gps_recive.c: 58: for(char j = 0; j<10; j++)
  5117  0DA4  01D8               	clrf	Pos_meet@j_2819^(0+128)
  5118  0DA5                     i1l9429:	
  5119                           
  5120                           ;Gps_recive.c: 59: {
  5121                           ;Gps_recive.c: 60: arr_rcv_longi[j] = arr_rcv_section2[i+j+1];
  5122  0DA5  309B               	movlw	(_arr_rcv_section2+1)& (0+255)
  5123  0DA6  0758               	addwf	Pos_meet@j_2819^(0+128),w
  5124  0DA7  00C5               	movwf	??_Pos_meet^(0+128)
  5125  0DA8  0857               	movf	Pos_meet@i_2818^(0+128),w
  5126  0DA9  0745               	addwf	??_Pos_meet^(0+128),w
  5127  0DAA  00C6               	movwf	(??_Pos_meet+1)^(0+128)
  5128  0DAB  0084               	movwf	4
  5129  0DAC  1783               	bsf	3,7	;select IRP bank3
  5130  0DAD  0800               	movf	0,w
  5131  0DAE  00C7               	movwf	(??_Pos_meet+2)^(0+128)
  5132  0DAF  0858               	movf	Pos_meet@j_2819^(0+128),w
  5133  0DB0  3ECE               	addlw	Pos_meet@arr_rcv_longi& (0+255)
  5134  0DB1  0084               	movwf	4
  5135  0DB2  0847               	movf	(??_Pos_meet+2)^(0+128),w
  5136  0DB3  1383               	bcf	3,7	;select IRP bank1
  5137  0DB4  0080               	movwf	0
  5138  0DB5  0AD8               	incf	Pos_meet@j_2819^(0+128),f
  5139  0DB6  300A               	movlw	10
  5140  0DB7  0258               	subwf	Pos_meet@j_2819^(0+128),w
  5141  0DB8  1803               	btfsc	3,0
  5142  0DB9  2DC0               	goto	i1l9439
  5143  0DBA  2DA5               	goto	i1l9429
  5144  0DBB                     i1l9435:	
  5145  0DBB  0AD7               	incf	Pos_meet@i_2818^(0+128),f
  5146  0DBC  300A               	movlw	10
  5147  0DBD  0257               	subwf	Pos_meet@i_2818^(0+128),w
  5148  0DBE  1C03               	skipc
  5149  0DBF  2D9C               	goto	i1l9421
  5150  0DC0                     i1l9439:	
  5151                           
  5152                           ;Gps_recive.c: 63: }
  5153                           ;Gps_recive.c: 64: }
  5154                           ;Gps_recive.c: 66: val_rcv_lati = atol(arr_rcv_lati);
  5155  0DC0  30C8               	movlw	Pos_meet@arr_rcv_lati& (0+255)
  5156  0DC1  25FC  120A  158A   	fcall	_atol
  5157  0DC4  0823               	movf	?_atol+3,w
  5158  0DC5  1683               	bsf	3,5	;RP0=1, select bank3
  5159  0DC6  1703               	bsf	3,6	;RP1=1, select bank3
  5160  0DC7  00A7               	movwf	(_val_rcv_lati+3)^(0+384)
  5161  0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  5162  0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  5163  0DCA  0822               	movf	?_atol+2,w
  5164  0DCB  1683               	bsf	3,5	;RP0=1, select bank3
  5165  0DCC  1703               	bsf	3,6	;RP1=1, select bank3
  5166  0DCD  00A6               	movwf	(_val_rcv_lati+2)^(0+384)
  5167  0DCE  1283               	bcf	3,5	;RP0=0, select bank0
  5168  0DCF  1303               	bcf	3,6	;RP1=0, select bank0
  5169  0DD0  0821               	movf	?_atol+1,w
  5170  0DD1  1683               	bsf	3,5	;RP0=1, select bank3
  5171  0DD2  1703               	bsf	3,6	;RP1=1, select bank3
  5172  0DD3  00A5               	movwf	(_val_rcv_lati+1)^(0+384)
  5173  0DD4  1283               	bcf	3,5	;RP0=0, select bank0
  5174  0DD5  1303               	bcf	3,6	;RP1=0, select bank0
  5175  0DD6  0820               	movf	?_atol,w
  5176  0DD7  1683               	bsf	3,5	;RP0=1, select bank3
  5177  0DD8  1703               	bsf	3,6	;RP1=1, select bank3
  5178  0DD9  00A4               	movwf	_val_rcv_lati^(0+384)
  5179                           
  5180                           ;Gps_recive.c: 67: val_rcv_longi = atol(arr_rcv_longi);
  5181  0DDA  30CE               	movlw	Pos_meet@arr_rcv_longi& (0+255)
  5182  0DDB  25FC               	fcall	_atol
  5183  0DDC  0823               	movf	?_atol+3,w
  5184  0DDD  1683               	bsf	3,5	;RP0=1, select bank3
  5185  0DDE  1703               	bsf	3,6	;RP1=1, select bank3
  5186  0DDF  00AB               	movwf	(_val_rcv_longi+3)^(0+384)
  5187  0DE0  1283               	bcf	3,5	;RP0=0, select bank0
  5188  0DE1  1303               	bcf	3,6	;RP1=0, select bank0
  5189  0DE2  0822               	movf	?_atol+2,w
  5190  0DE3  1683               	bsf	3,5	;RP0=1, select bank3
  5191  0DE4  1703               	bsf	3,6	;RP1=1, select bank3
  5192  0DE5  00AA               	movwf	(_val_rcv_longi+2)^(0+384)
  5193  0DE6  1283               	bcf	3,5	;RP0=0, select bank0
  5194  0DE7  1303               	bcf	3,6	;RP1=0, select bank0
  5195  0DE8  0821               	movf	?_atol+1,w
  5196  0DE9  1683               	bsf	3,5	;RP0=1, select bank3
  5197  0DEA  1703               	bsf	3,6	;RP1=1, select bank3
  5198  0DEB  00A9               	movwf	(_val_rcv_longi+1)^(0+384)
  5199  0DEC  1283               	bcf	3,5	;RP0=0, select bank0
  5200  0DED  1303               	bcf	3,6	;RP1=0, select bank0
  5201  0DEE  0820               	movf	?_atol,w
  5202  0DEF  1683               	bsf	3,5	;RP0=1, select bank3
  5203  0DF0  1703               	bsf	3,6	;RP1=1, select bank3
  5204  0DF1  00A8               	movwf	_val_rcv_longi^(0+384)
  5205                           
  5206                           ;Gps_recive.c: 72: Distance_Update();
  5207  0DF2  120A  158A  2339   	fcall	_Distance_Update
      +       120A  158A         
  5208                           
  5209                           ;Gps_recive.c: 73: break;
  5210  0DF7  2DFB               	goto	i1l9447
  5211  0DF8                     i1l9441:	
  5212                           
  5213                           ;Gps_recive.c: 76: {
  5214                           ;Gps_recive.c: 77: Digitron_Update();
  5215  0DF8  26B0  120A  158A   	fcall	_Digitron_Update
  5216  0DFB                     i1l9447:	
  5217                           ;Gps_recive.c: 78: break;
  5218                           
  5219                           
  5220                           ;Gps_recive.c: 85: CleanGpsRcv();
  5221  0DFB  2FCF               	ljmp	i1l9543
  5222  0DFC                     __end_of_Pos_meet:	
  5223  0DFC                     __ptext1232:	
  5224 ;; =============== function ___ftadd ends ============
  5225                           
  5226                           
  5227 ;; *************** function _atol *****************
  5228 ;; Defined at:
  5229 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\atol.c"
  5230 ;; Parameters:    Size  Location     Type
  5231 ;;  s               1    wreg     PTR const unsigned char 
  5232 ;;		 -> Pos_meet@arr_rcv_longi(6), Pos_meet@arr_rcv_lati(6), 
  5233 ;; Auto vars:     Size  Location     Type
  5234 ;;  s               1   13[BANK0 ] PTR const unsigned char 
  5235 ;;		 -> Pos_meet@arr_rcv_longi(6), Pos_meet@arr_rcv_lati(6), 
  5236 ;;  a               4    9[BANK0 ] long 
  5237 ;;  c               1   14[BANK0 ] unsigned char 
  5238 ;;  sign            1    8[BANK0 ] unsigned char 
  5239 ;; Return value:  Size  Location     Type
  5240 ;;                  4    0[BANK0 ] long 
  5241 ;; Registers used:
  5242 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5243 ;; Tracked objects:
  5244 ;;		On entry : 20/20
  5245 ;;		On exit  : 160/0
  5246 ;;		Unchanged: FFE9F/0
  5247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5248 ;;      Params:         0       4       0       0       0
  5249 ;;      Locals:         0       7       0       0       0
  5250 ;;      Temps:          0       4       0       0       0
  5251 ;;      Totals:         0      15       0       0       0
  5252 ;;Total ram usage:       15 bytes
  5253 ;; Hardware stack levels used:    1
  5254 ;; Hardware stack levels required when called:    1
  5255 ;; This function calls:
  5256 ;;		___lmul
  5257 ;;		_isdigit
  5258 ;; This function is called by:
  5259 ;;		_Pos_meet
  5260 ;; This function uses a non-reentrant model
  5261 ;;
  5262  0DFC                     _atol:	
  5263                           
  5264                           ; Regs used in _atol: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5265                           ;atol@s stored from wreg
  5266  0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  5267  0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  5268  0DFE  00AD               	movwf	atol@s
  5269  0DFF                     i1l6051:	
  5270  0DFF  082D               	movf	atol@s,w
  5271  0E00  0084               	movwf	4
  5272  0E01  1383               	bcf	3,7	;select IRP bank0
  5273  0E02  0800               	movf	0,w
  5274  0E03  00AE               	movwf	atol@c
  5275  0E04  0AAD               	incf	atol@s,f
  5276  0E05  3A20               	xorlw	32
  5277  0E06  1903               	skipnz
  5278  0E07  2DFF               	goto	i1l6051
  5279  0E08  082E               	movf	atol@c,w
  5280  0E09  3A09               	xorlw	9
  5281  0E0A  1903               	skipnz
  5282  0E0B  2DFF               	goto	i1l6051
  5283  0E0C  01A9               	clrf	atol@a
  5284  0E0D  01AA               	clrf	atol@a+1
  5285  0E0E  01AB               	clrf	atol@a+2
  5286  0E0F  01AC               	clrf	atol@a+3
  5287  0E10  01A8               	clrf	atol@sign
  5288  0E11  082E               	movf	atol@c,w
  5289  0E12  3A2D               	xorlw	45
  5290  0E13  1D03               	skipz
  5291  0E14  2E17               	goto	i1l9469
  5292  0E15  0AA8               	incf	atol@sign,f
  5293  0E16  2E4D               	goto	i1l9465
  5294  0E17                     i1l9469:	
  5295  0E17  082E               	movf	atol@c,w
  5296  0E18  3A2B               	xorlw	43
  5297  0E19  1903               	btfsc	3,2
  5298  0E1A  2E4D               	goto	i1l9465
  5299  0E1B                     i1l9481:	
  5300  0E1B  082E               	movf	atol@c,w
  5301  0E1C  266F  120A  158A   	fcall	_isdigit
  5302  0E1F  1C03               	btfss	3,0
  5303  0E20  2E53               	goto	i1l9483
  5304  0E21  082E               	movf	atol@c,w
  5305  0E22  3ED0               	addlw	208
  5306  0E23  00A4               	movwf	??_atol
  5307  0E24  01A5               	clrf	??_atol+1
  5308  0E25  01A6               	clrf	??_atol+2
  5309  0E26  01A7               	clrf	??_atol+3
  5310  0E27  082C               	movf	atol@a+3,w
  5311  0E28  00F4               	movwf	?___lmul+3
  5312  0E29  082B               	movf	atol@a+2,w
  5313  0E2A  00F3               	movwf	?___lmul+2
  5314  0E2B  082A               	movf	atol@a+1,w
  5315  0E2C  00F2               	movwf	?___lmul+1
  5316  0E2D  0829               	movf	atol@a,w
  5317  0E2E  00F1               	movwf	?___lmul
  5318  0E2F  300A               	movlw	10
  5319  0E30  00F5               	movwf	?___lmul+4
  5320  0E31  01F6               	clrf	?___lmul+5
  5321  0E32  01F7               	clrf	?___lmul+6
  5322  0E33  01F8               	clrf	?___lmul+7
  5323  0E34  267D  120A  158A   	fcall	___lmul
  5324  0E37  0871               	movf	?___lmul,w
  5325  0E38  07A4               	addwf	??_atol,f
  5326  0E39  0872               	movf	?___lmul+1,w
  5327  0E3A  1803               	skipnc
  5328  0E3B  0F72               	incfsz	?___lmul+1,w
  5329  0E3C  07A5               	addwf	??_atol+1,f
  5330  0E3D  0873               	movf	?___lmul+2,w
  5331  0E3E  1803               	skipnc
  5332  0E3F  0F73               	incfsz	?___lmul+2,w
  5333  0E40  07A6               	addwf	??_atol+2,f
  5334  0E41  0874               	movf	?___lmul+3,w
  5335  0E42  1803               	skipnc
  5336  0E43  0A74               	incf	?___lmul+3,w
  5337  0E44  07A7               	addwf	??_atol+3,f
  5338  0E45  0827               	movf	??_atol+3,w
  5339  0E46  00AC               	movwf	atol@a+3
  5340  0E47  0826               	movf	??_atol+2,w
  5341  0E48  00AB               	movwf	atol@a+2
  5342  0E49  0825               	movf	??_atol+1,w
  5343  0E4A  00AA               	movwf	atol@a+1
  5344  0E4B  0824               	movf	??_atol,w
  5345  0E4C  00A9               	movwf	atol@a
  5346  0E4D                     i1l9465:	
  5347  0E4D  082D               	movf	atol@s,w
  5348  0E4E  0084               	movwf	4
  5349  0E4F  0800               	movf	0,w
  5350  0E50  00AE               	movwf	atol@c
  5351  0E51  0AAD               	incf	atol@s,f
  5352  0E52  2E1B               	goto	i1l9481
  5353  0E53                     i1l9483:	
  5354  0E53  0828               	movf	atol@sign,w
  5355  0E54  1903               	btfsc	3,2
  5356  0E55  2E66               	goto	i1l9489
  5357  0E56  0929               	comf	atol@a,w
  5358  0E57  00A0               	movwf	?_atol
  5359  0E58  092A               	comf	atol@a+1,w
  5360  0E59  00A1               	movwf	?_atol+1
  5361  0E5A  092B               	comf	atol@a+2,w
  5362  0E5B  00A2               	movwf	?_atol+2
  5363  0E5C  092C               	comf	atol@a+3,w
  5364  0E5D  00A3               	movwf	?_atol+3
  5365  0E5E  0AA0               	incf	?_atol,f
  5366  0E5F  1903               	skipnz
  5367  0E60  0AA1               	incf	?_atol+1,f
  5368  0E61  1903               	skipnz
  5369  0E62  0AA2               	incf	?_atol+2,f
  5370  0E63  1903               	skipnz
  5371  0E64  0AA3               	incf	?_atol+3,f
  5372  0E65  0008               	return
  5373  0E66                     i1l9489:	
  5374  0E66  082C               	movf	atol@a+3,w
  5375  0E67  00A3               	movwf	?_atol+3
  5376  0E68  082B               	movf	atol@a+2,w
  5377  0E69  00A2               	movwf	?_atol+2
  5378  0E6A  082A               	movf	atol@a+1,w
  5379  0E6B  00A1               	movwf	?_atol+1
  5380  0E6C  0829               	movf	atol@a,w
  5381  0E6D  00A0               	movwf	?_atol
  5382  0E6E  0008               	return
  5383  0E6F                     __end_of_atol:	
  5384  0E6F                     __ptext1244:	
  5385 ;; =============== function ___wmul ends ============
  5386                           
  5387                           
  5388 ;; *************** function _isdigit *****************
  5389 ;; Defined at:
  5390 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\isdigit.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;  c               1    wreg     unsigned char 
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;  c               1    1[COMMON] unsigned char 
  5395 ;; Return value:  Size  Location     Type
  5396 ;;		None               void
  5397 ;; Registers used:
  5398 ;;		wreg, status,2, status,0
  5399 ;; Tracked objects:
  5400 ;;		On entry : 60/0
  5401 ;;		On exit  : 60/0
  5402 ;;		Unchanged: FFF9F/0
  5403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5404 ;;      Params:         0       0       0       0       0
  5405 ;;      Locals:         2       0       0       0       0
  5406 ;;      Temps:          0       0       0       0       0
  5407 ;;      Totals:         2       0       0       0       0
  5408 ;;Total ram usage:        2 bytes
  5409 ;; Hardware stack levels used:    1
  5410 ;; This function calls:
  5411 ;;		Nothing
  5412 ;; This function is called by:
  5413 ;;		_atoi
  5414 ;;		_atol
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417  0E6F                     _isdigit:	
  5418                           
  5419                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5420                           ;isdigit@c stored from wreg
  5421  0E6F  00F2               	movwf	isdigit@c
  5422  0E70  01F1               	clrf	_isdigit$3171
  5423  0E71  303A               	movlw	58
  5424  0E72  0272               	subwf	isdigit@c,w
  5425  0E73  1803               	skipnc
  5426  0E74  2E7B               	goto	i1l9683
  5427  0E75  3030               	movlw	48
  5428  0E76  0272               	subwf	isdigit@c,w
  5429  0E77  1C03               	skipc
  5430  0E78  2E7B               	goto	i1l9683
  5431  0E79  01F1               	clrf	_isdigit$3171
  5432  0E7A  0AF1               	incf	_isdigit$3171,f
  5433  0E7B                     i1l9683:	
  5434  0E7B  0C71               	rrf	_isdigit$3171,w
  5435  0E7C  0008               	return
  5436  0E7D                     __end_of_isdigit:	
  5437  0E7D                     __ptext1240:	
  5438 ;; =============== function ___fttol ends ============
  5439                           
  5440                           
  5441 ;; *************** function ___lmul *****************
  5442 ;; Defined at:
  5443 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\lmul.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;  multiplier      4    0[COMMON] unsigned long 
  5446 ;;  multiplicand    4    4[COMMON] unsigned long 
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;  product         4    8[COMMON] unsigned long 
  5449 ;; Return value:  Size  Location     Type
  5450 ;;                  4    0[COMMON] unsigned long 
  5451 ;; Registers used:
  5452 ;;		wreg, status,2, status,0
  5453 ;; Tracked objects:
  5454 ;;		On entry : 60/0
  5455 ;;		On exit  : 160/0
  5456 ;;		Unchanged: FFE9F/0
  5457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5458 ;;      Params:         8       0       0       0       0
  5459 ;;      Locals:         4       0       0       0       0
  5460 ;;      Temps:          0       0       0       0       0
  5461 ;;      Totals:        12       0       0       0       0
  5462 ;;Total ram usage:       12 bytes
  5463 ;; Hardware stack levels used:    1
  5464 ;; This function calls:
  5465 ;;		Nothing
  5466 ;; This function is called by:
  5467 ;;		_atol
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470  0E7D                     ___lmul:	
  5471                           
  5472                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5473  0E7D  01F9               	clrf	___lmul@product
  5474  0E7E  01FA               	clrf	___lmul@product+1
  5475  0E7F  01FB               	clrf	___lmul@product+2
  5476  0E80  01FC               	clrf	___lmul@product+3
  5477  0E81                     i1l6201:	
  5478  0E81  1C71               	btfss	___lmul@multiplier,0
  5479  0E82  2E97               	goto	i1l9939
  5480  0E83  0875               	movf	___lmul@multiplicand,w
  5481  0E84  07F9               	addwf	___lmul@product,f
  5482  0E85  0876               	movf	___lmul@multiplicand+1,w
  5483  0E86  1103               	clrz
  5484  0E87  1803               	skipnc
  5485  0E88  3E01               	addlw	1
  5486  0E89  1D03               	btfss	3,2
  5487  0E8A  07FA               	addwf	___lmul@product+1,f
  5488  0E8B  0877               	movf	___lmul@multiplicand+2,w
  5489  0E8C  1103               	clrz
  5490  0E8D  1803               	skipnc
  5491  0E8E  3E01               	addlw	1
  5492  0E8F  1D03               	btfss	3,2
  5493  0E90  07FB               	addwf	___lmul@product+2,f
  5494  0E91  0878               	movf	___lmul@multiplicand+3,w
  5495  0E92  1103               	clrz
  5496  0E93  1803               	skipnc
  5497  0E94  3E01               	addlw	1
  5498  0E95  1D03               	btfss	3,2
  5499  0E96  07FC               	addwf	___lmul@product+3,f
  5500  0E97                     i1l9939:	
  5501  0E97  1003               	clrc
  5502  0E98  0DF5               	rlf	___lmul@multiplicand,f
  5503  0E99  0DF6               	rlf	___lmul@multiplicand+1,f
  5504  0E9A  0DF7               	rlf	___lmul@multiplicand+2,f
  5505  0E9B  0DF8               	rlf	___lmul@multiplicand+3,f
  5506  0E9C  1003               	clrc
  5507  0E9D  0CF4               	rrf	___lmul@multiplier+3,f
  5508  0E9E  0CF3               	rrf	___lmul@multiplier+2,f
  5509  0E9F  0CF2               	rrf	___lmul@multiplier+1,f
  5510  0EA0  0CF1               	rrf	___lmul@multiplier,f
  5511  0EA1  0874               	movf	___lmul@multiplier+3,w
  5512  0EA2  0473               	iorwf	___lmul@multiplier+2,w
  5513  0EA3  0472               	iorwf	___lmul@multiplier+1,w
  5514  0EA4  0471               	iorwf	___lmul@multiplier,w
  5515  0EA5  1D03               	skipz
  5516  0EA6  2E81               	goto	i1l6201
  5517  0EA7  087C               	movf	___lmul@product+3,w
  5518  0EA8  00F4               	movwf	?___lmul+3
  5519  0EA9  087B               	movf	___lmul@product+2,w
  5520  0EAA  00F3               	movwf	?___lmul+2
  5521  0EAB  087A               	movf	___lmul@product+1,w
  5522  0EAC  00F2               	movwf	?___lmul+1
  5523  0EAD  0879               	movf	___lmul@product,w
  5524  0EAE  00F1               	movwf	?___lmul
  5525  0EAF  0008               	return
  5526  0EB0                     __end_of___lmul:	
  5527  0EB0                     __ptext1219:	
  5528 ;; =============== function _sqrt ends ============
  5529                           
  5530                           
  5531 ;; *************** function _Digitron_Update *****************
  5532 ;; Defined at:
  5533 ;;		line 53 in file "LED/led.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;		None
  5536 ;; Auto vars:     Size  Location     Type
  5537 ;;  i               1    6[BANK0 ] unsigned char 
  5538 ;;  order_num       4    1[BANK0 ] unsigned char [4]
  5539 ;;  rider           1    5[BANK0 ] unsigned char 
  5540 ;; Return value:  Size  Location     Type
  5541 ;;		None               void
  5542 ;; Registers used:
  5543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5544 ;; Tracked objects:
  5545 ;;		On entry : 160/120
  5546 ;;		On exit  : 60/0
  5547 ;;		Unchanged: FFE9F/0
  5548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5549 ;;      Params:         0       0       0       0       0
  5550 ;;      Locals:         0       6       0       0       0
  5551 ;;      Temps:          0       1       0       0       0
  5552 ;;      Totals:         0       7       0       0       0
  5553 ;;Total ram usage:        7 bytes
  5554 ;; Hardware stack levels used:    1
  5555 ;; Hardware stack levels required when called:    3
  5556 ;; This function calls:
  5557 ;;		_queueArray_in
  5558 ;;		i1_Digitron_Display
  5559 ;; This function is called by:
  5560 ;;		_Pos_meet
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563  0EB0                     _Digitron_Update:	
  5564                           
  5565                           ;led.c: 54: char order_num[4], rider;
  5566                           ;led.c: 55: for(unsigned char i=0;i<4;i++)
  5567                           
  5568 ;; hardware stack exceeded
  5569                           ; Regs used in _Digitron_Update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5570  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  5571  0EB1  01A6               	clrf	Digitron_Update@i
  5572  0EB2                     i1l9037:	
  5573                           
  5574                           ;led.c: 56: order_num[i]=arr_rcv_section1[i];
  5575  0EB2  0826               	movf	Digitron_Update@i,w
  5576  0EB3  3E90               	addlw	_arr_rcv_section1& (0+255)
  5577  0EB4  0084               	movwf	4
  5578  0EB5  1783               	bsf	3,7	;select IRP bank3
  5579  0EB6  0800               	movf	0,w
  5580  0EB7  00A0               	movwf	??_Digitron_Update
  5581  0EB8  0826               	movf	Digitron_Update@i,w
  5582  0EB9  3E21               	addlw	Digitron_Update@order_num& (0+255)
  5583  0EBA  0084               	movwf	4
  5584  0EBB  0820               	movf	??_Digitron_Update,w
  5585  0EBC  1383               	bcf	3,7	;select IRP bank0
  5586  0EBD  0080               	movwf	0
  5587  0EBE  0AA6               	incf	Digitron_Update@i,f
  5588  0EBF  3004               	movlw	4
  5589  0EC0  0226               	subwf	Digitron_Update@i,w
  5590  0EC1  1C03               	skipc
  5591  0EC2  2EB2               	goto	i1l9037
  5592                           
  5593                           ;led.c: 57: rider = arr_rcv_section2[0];
  5594  0EC3  1683               	bsf	3,5	;RP0=1, select bank3
  5595  0EC4  1703               	bsf	3,6	;RP1=1, select bank3
  5596  0EC5  081A               	movf	_arr_rcv_section2^(0+384),w
  5597  0EC6  1283               	bcf	3,5	;RP0=0, select bank0
  5598  0EC7  1303               	bcf	3,6	;RP1=0, select bank0
  5599  0EC8  00A5               	movwf	Digitron_Update@rider
  5600                           
  5601                           ;led.c: 61: switch(rider)
  5602  0EC9  2EE7               	goto	i1l9047
  5603  0ECA                     i1l9045:	
  5604                           
  5605                           ;led.c: 64: {
  5606                           ;led.c: 65: queueArray_in(&digitron1, order_num);
  5607  0ECA  3021               	movlw	Digitron_Update@order_num& (0+255)
  5608  0ECB  00F1               	movwf	?_queueArray_in
  5609  0ECC  30AC               	movlw	_digitron1& (0+255)
  5610  0ECD  26F2  120A  158A   	fcall	_queueArray_in
  5611                           
  5612                           ;led.c: 66: Digitron_Display(&digitron1);
  5613  0ED0  30AC               	movlw	_digitron1& (0+255)
  5614  0ED1  274A  120A  158A   	fcall	i1_Digitron_Display
  5615  0ED4                     i1l1162:	
  5616                           ;led.c: 67: }
  5617                           ;led.c: 68: case '2':
  5618                           
  5619                           
  5620                           ;led.c: 69: {
  5621                           ;led.c: 70: queueArray_in(&digitron2, order_num);
  5622  0ED4  3021               	movlw	Digitron_Update@order_num& (0+255)
  5623  0ED5  00F1               	movwf	?_queueArray_in
  5624  0ED6  30BA               	movlw	_digitron2& (0+255)
  5625  0ED7  26F2  120A  158A   	fcall	_queueArray_in
  5626                           
  5627                           ;led.c: 71: Digitron_Display(&digitron2);
  5628  0EDA  30BA               	movlw	_digitron2& (0+255)
  5629  0EDB  274A  120A  158A   	fcall	i1_Digitron_Display
  5630  0EDE                     i1l1163:	
  5631                           ;led.c: 72: }
  5632                           ;led.c: 73: case '3':
  5633                           
  5634                           
  5635                           ;led.c: 74: {
  5636                           ;led.c: 75: queueArray_in(&digitron3, order_num);
  5637  0EDE  3021               	movlw	Digitron_Update@order_num& (0+255)
  5638  0EDF  00F1               	movwf	?_queueArray_in
  5639  0EE0  3042               	movlw	_digitron3& (0+255)
  5640  0EE1  26F2  120A  158A   	fcall	_queueArray_in
  5641                           
  5642                           ;led.c: 76: Digitron_Display(&digitron3);
  5643  0EE4  3042               	movlw	_digitron3& (0+255)
  5644  0EE5  274A               	fcall	i1_Digitron_Display
  5645                           
  5646                           ;led.c: 77: }
  5647                           ;led.c: 78: }
  5648  0EE6  0008               	return
  5649  0EE7                     i1l9047:	
  5650  0EE7  0825               	movf	Digitron_Update@rider,w
  5651                           
  5652                           ; Switch size 1, requested type "space"
  5653                           ; Number of cases is 3, Range of values is 49 to 51
  5654                           ; switch strategies available:
  5655                           ; Name         Bytes Cycles
  5656                           ; simple_byte    10     6 (average)
  5657                           ; direct_byte    31    22 (fixed)
  5658                           ;	Chosen strategy is simple_byte
  5659  0EE8  3A31               	xorlw	49	; case 49
  5660  0EE9  1903               	skipnz
  5661  0EEA  2ECA               	goto	i1l9045
  5662  0EEB  3A03               	xorlw	3	; case 50
  5663  0EEC  1903               	skipnz
  5664  0EED  2ED4               	goto	i1l1162
  5665  0EEE  3A01               	xorlw	1	; case 51
  5666  0EEF  1D03               	btfss	3,2
  5667  0EF0  0008               	return
  5668  0EF1  2EDE               	goto	i1l1163
  5669  0EF2                     __end_of_Digitron_Update:	
  5670  0EF2                     __ptext1246:	
  5671 ;; =============== function _CleanGpsRcv ends ============
  5672                           
  5673                           
  5674 ;; *************** function _queueArray_in *****************
  5675 ;; Defined at:
  5676 ;;		line 15 in file "data_structure/queue.c"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;  Q               1    wreg     PTR struct .
  5679 ;;		 -> digitron3(14), digitron2(14), digitron1(14), 
  5680 ;;  buf             1    0[COMMON] PTR unsigned char 
  5681 ;;		 -> Digitron_Update@order_num(4), 
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;  Q               1    7[COMMON] PTR struct .
  5684 ;;		 -> digitron3(14), digitron2(14), digitron1(14), 
  5685 ;;  i               1    6[COMMON] unsigned char 
  5686 ;; Return value:  Size  Location     Type
  5687 ;;		None               void
  5688 ;; Registers used:
  5689 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5690 ;; Tracked objects:
  5691 ;;		On entry : 40/0
  5692 ;;		On exit  : 160/120
  5693 ;;		Unchanged: FFE9F/0
  5694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5695 ;;      Params:         1       0       0       0       0
  5696 ;;      Locals:         2       0       0       0       0
  5697 ;;      Temps:          5       0       0       0       0
  5698 ;;      Totals:         8       0       0       0       0
  5699 ;;Total ram usage:        8 bytes
  5700 ;; Hardware stack levels used:    1
  5701 ;; This function calls:
  5702 ;;		Nothing
  5703 ;; This function is called by:
  5704 ;;		_Digitron_Update
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707  0EF2                     _queueArray_in:	
  5708                           
  5709                           ; Regs used in _queueArray_in: [wreg-fsr0h+status,2+status,0]
  5710                           ;queueArray_in@Q stored from wreg
  5711  0EF2  00F8               	movwf	queueArray_in@Q
  5712                           
  5713                           ;queue.c: 16: for(unsigned char i=0; i<4; i++)
  5714  0EF3  01F7               	clrf	queueArray_in@i
  5715  0EF4                     i1l9055:	
  5716                           
  5717                           ;queue.c: 17: {
  5718                           ;queue.c: 18: Q->data[Q->rear][i] = buf[i];
  5719  0EF4  0877               	movf	queueArray_in@i,w
  5720  0EF5  0771               	addwf	queueArray_in@buf,w
  5721  0EF6  00F2               	movwf	??_queueArray_in
  5722  0EF7  0084               	movwf	4
  5723  0EF8  1383               	bcf	3,7	;select IRP bank0
  5724  0EF9  0800               	movf	0,w
  5725  0EFA  00F3               	movwf	??_queueArray_in+1
  5726  0EFB  0878               	movf	queueArray_in@Q,w
  5727  0EFC  0084               	movwf	4
  5728  0EFD  1783               	bsf	3,7	;select IRP bank2
  5729  0EFE  0800               	movf	0,w
  5730  0EFF  00F4               	movwf	??_queueArray_in+2
  5731  0F00  1003               	clrc
  5732  0F01  0DF4               	rlf	??_queueArray_in+2,f
  5733  0F02  1003               	clrc
  5734  0F03  0D74               	rlf	??_queueArray_in+2,w
  5735  0F04  0778               	addwf	queueArray_in@Q,w
  5736  0F05  00F5               	movwf	??_queueArray_in+3
  5737  0F06  0877               	movf	queueArray_in@i,w
  5738  0F07  0775               	addwf	??_queueArray_in+3,w
  5739  0F08  00F6               	movwf	??_queueArray_in+4
  5740  0F09  3E02               	addlw	2
  5741  0F0A  0084               	movwf	4
  5742  0F0B  0873               	movf	??_queueArray_in+1,w
  5743  0F0C  0080               	movwf	0
  5744  0F0D  0AF7               	incf	queueArray_in@i,f
  5745  0F0E  3004               	movlw	4
  5746  0F0F  0277               	subwf	queueArray_in@i,w
  5747  0F10  1C03               	skipc
  5748  0F11  2EF4               	goto	i1l9055
  5749                           
  5750                           ;queue.c: 19: }
  5751                           ;queue.c: 21: if(first_time)
  5752  0F12  1683               	bsf	3,5	;RP0=1, select bank1
  5753  0F13  086D               	movf	_first_time^(0+128),w
  5754  0F14  1903               	btfsc	3,2
  5755  0F15  2F1B               	goto	i1l9067
  5756                           
  5757                           ;queue.c: 22: {
  5758                           ;queue.c: 23: Q->rear++;
  5759  0F16  0878               	movf	queueArray_in@Q,w
  5760  0F17  0084               	movwf	4
  5761  0F18  0A80               	incf	0,f
  5762                           
  5763                           ;queue.c: 24: first_time = 0;
  5764  0F19  01ED               	clrf	_first_time^(0+128)
  5765                           
  5766                           ;queue.c: 25: }
  5767  0F1A  0008               	return
  5768  0F1B                     i1l9067:	
  5769                           
  5770                           ;queue.c: 26: else if(Q->rear == Q->front)
  5771  0F1B  0878               	movf	queueArray_in@Q,w
  5772  0F1C  3E01               	addlw	1
  5773  0F1D  0084               	movwf	4
  5774  0F1E  0800               	movf	0,w
  5775  0F1F  00F2               	movwf	??_queueArray_in
  5776  0F20  0878               	movf	queueArray_in@Q,w
  5777  0F21  0084               	movwf	4
  5778  0F22  0800               	movf	0,w
  5779  0F23  0672               	xorwf	??_queueArray_in,w
  5780  0F24  1D03               	skipz
  5781  0F25  2F3C               	goto	i1l9075
  5782                           
  5783                           ;queue.c: 27: {
  5784                           ;queue.c: 28: if(Q->rear == 3-1)
  5785  0F26  0878               	movf	queueArray_in@Q,w
  5786  0F27  0084               	movwf	4
  5787  0F28  0800               	movf	0,w
  5788  0F29  3A02               	xorlw	2
  5789  0F2A  1D03               	skipz
  5790  0F2B  2F34               	goto	i1l9073
  5791                           
  5792                           ;queue.c: 29: {
  5793                           ;queue.c: 30: Q->rear = 0;
  5794  0F2C  0878               	movf	queueArray_in@Q,w
  5795  0F2D  0084               	movwf	4
  5796  0F2E  0180               	clrf	0
  5797                           
  5798                           ;queue.c: 31: Q->front = 0;
  5799  0F2F  0878               	movf	queueArray_in@Q,w
  5800  0F30  3E01               	addlw	1
  5801  0F31  0084               	movwf	4
  5802  0F32  0180               	clrf	0
  5803                           
  5804                           ;queue.c: 32: }
  5805  0F33  0008               	return
  5806  0F34                     i1l9073:	
  5807                           
  5808                           ;queue.c: 33: else
  5809                           ;queue.c: 34: {
  5810                           ;queue.c: 35: Q->rear++;
  5811  0F34  0878               	movf	queueArray_in@Q,w
  5812  0F35  0084               	movwf	4
  5813  0F36  0A80               	incf	0,f
  5814                           
  5815                           ;queue.c: 36: Q->front++;
  5816  0F37  0878               	movf	queueArray_in@Q,w
  5817  0F38  3E01               	addlw	1
  5818  0F39  0084               	movwf	4
  5819  0F3A  0A80               	incf	0,f
  5820  0F3B  0008               	return
  5821  0F3C                     i1l9075:	
  5822                           
  5823                           ;queue.c: 39: else
  5824                           ;queue.c: 40: {
  5825                           ;queue.c: 41: if(Q->rear == 3-1)
  5826  0F3C  0878               	movf	queueArray_in@Q,w
  5827  0F3D  0084               	movwf	4
  5828  0F3E  0800               	movf	0,w
  5829  0F3F  3A02               	xorlw	2
  5830  0F40  1D03               	skipz
  5831  0F41  2F46               	goto	i1l9079
  5832                           
  5833                           ;queue.c: 42: Q->rear = 0;
  5834  0F42  0878               	movf	queueArray_in@Q,w
  5835  0F43  0084               	movwf	4
  5836  0F44  0180               	clrf	0
  5837  0F45  0008               	return
  5838  0F46                     i1l9079:	
  5839                           
  5840                           ;queue.c: 43: else
  5841                           ;queue.c: 44: Q->rear++;
  5842  0F46  0878               	movf	queueArray_in@Q,w
  5843  0F47  0084               	movwf	4
  5844  0F48  0A80               	incf	0,f
  5845  0F49  0008               	return
  5846  0F4A                     __end_of_queueArray_in:	
  5847  0F4A                     __ptext1220:	
  5848 ;; =============== function _Digitron_Update ends ============
  5849                           
  5850                           
  5851 ;; *************** function i1_Digitron_Display *****************
  5852 ;; Defined at:
  5853 ;;		line 23 in file "LED/led.c"
  5854 ;; Parameters:    Size  Location     Type
  5855 ;;  Digitron_Dis    1    wreg     PTR struct .
  5856 ;;		 -> digitron3(14), digitron2(14), digitron1(14), 
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;  Digitron_Dis    1    8[COMMON] PTR struct .
  5859 ;;		 -> digitron3(14), digitron2(14), digitron1(14), 
  5860 ;;  Digitron_Dis    1   12[COMMON] unsigned char 
  5861 ;;  Digitron_Dis    1   11[COMMON] unsigned char 
  5862 ;;  Digitron_Dis    1   10[COMMON] unsigned char 
  5863 ;;  Digitron_Dis    1    9[COMMON] unsigned char 
  5864 ;; Return value:  Size  Location     Type
  5865 ;;		None               void
  5866 ;; Registers used:
  5867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5868 ;; Tracked objects:
  5869 ;;		On entry : 160/120
  5870 ;;		On exit  : 160/100
  5871 ;;		Unchanged: FFE9F/0
  5872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5873 ;;      Params:         0       0       0       0       0
  5874 ;;      Locals:         5       0       0       0       0
  5875 ;;      Temps:          3       0       0       0       0
  5876 ;;      Totals:         8       0       0       0       0
  5877 ;;Total ram usage:        8 bytes
  5878 ;; Hardware stack levels used:    1
  5879 ;; Hardware stack levels required when called:    2
  5880 ;; This function calls:
  5881 ;;		i1_Digitron_Command
  5882 ;;		i1_Digitron_Send_8bit
  5883 ;; This function is called by:
  5884 ;;		_Digitron_Update
  5885 ;; This function uses a non-reentrant model
  5886 ;;
  5887  0F4A                     i1_Digitron_Display:	
  5888                           
  5889 ;; hardware stack exceeded
  5890                           ; Regs used in i1_Digitron_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5891                           ;i1Digitron_Display@que stored from wreg
  5892  0F4A  00F9               	movwf	i1Digitron_Display@que
  5893                           
  5894                           ;led.c: 24: unsigned char fro = que->front;
  5895  0F4B  3E01               	addlw	1
  5896  0F4C  0084               	movwf	4
  5897  0F4D  0800               	movf	0,w
  5898  0F4E  00FB               	movwf	i1Digitron_Display@fro
  5899                           
  5900                           ;led.c: 25: for(unsigned char i=0; i<3; i++)
  5901  0F4F  01FD               	clrf	i1Digitron_Display@i
  5902  0F50                     i1l10263:	
  5903                           
  5904                           ;led.c: 26: {
  5905                           ;led.c: 27: if(fro+i == 3)
  5906  0F50  087B               	movf	i1Digitron_Display@fro,w
  5907  0F51  077D               	addwf	i1Digitron_Display@i,w
  5908  0F52  00F6               	movwf	??i1_Digitron_Display
  5909  0F53  01F7               	clrf	??i1_Digitron_Display+1
  5910  0F54  0DF7               	rlf	??i1_Digitron_Display+1,f
  5911  0F55  3A03               	xorlw	3
  5912  0F56  0477               	iorwf	??i1_Digitron_Display+1,w
  5913  0F57  1D03               	skipz
  5914  0F58  2F5B               	goto	i1l10267
  5915                           
  5916                           ;led.c: 28: fro = 0;
  5917  0F59  01FB               	clrf	i1Digitron_Display@fro
  5918  0F5A  2F5D               	goto	i1l10269
  5919  0F5B                     i1l10267:	
  5920                           
  5921                           ;led.c: 29: else
  5922                           ;led.c: 30: fro = fro+i;
  5923  0F5B  087D               	movf	i1Digitron_Display@i,w
  5924  0F5C  07FB               	addwf	i1Digitron_Display@fro,f
  5925  0F5D                     i1l10269:	
  5926                           
  5927                           ;led.c: 32: Digitron_Command(i, 0x00);
  5928  0F5D  01F4               	clrf	?i1_Digitron_Command
  5929  0F5E  087D               	movf	i1Digitron_Display@i,w
  5930  0F5F  27B6  120A  158A   	fcall	i1_Digitron_Command
  5931                           
  5932                           ;led.c: 33: Digitron_Command(i, 0x40);
  5933  0F62  3040               	movlw	64
  5934  0F63  00F4               	movwf	?i1_Digitron_Command
  5935  0F64  087D               	movf	i1Digitron_Display@i,w
  5936  0F65  27B6  120A  158A   	fcall	i1_Digitron_Command
  5937                           
  5938                           ;led.c: 34: Digitron_Command(i, 0xc0);
  5939  0F68  30C0               	movlw	192
  5940  0F69  00F4               	movwf	?i1_Digitron_Command
  5941  0F6A  087D               	movf	i1Digitron_Display@i,w
  5942  0F6B  27B6  120A  158A   	fcall	i1_Digitron_Command
  5943                           
  5944                           ;led.c: 35: for(unsigned char j=0;j<4;j++)
  5945  0F6E  01FC               	clrf	i1Digitron_Display@j
  5946  0F6F                     i1l10281:	
  5947                           
  5948                           ;led.c: 36: {
  5949                           ;led.c: 37: unsigned char num = que->data[fro][j]-0x30;
  5950  0F6F  087B               	movf	i1Digitron_Display@fro,w
  5951  0F70  00F6               	movwf	??i1_Digitron_Display
  5952  0F71  1003               	clrc
  5953  0F72  0DF6               	rlf	??i1_Digitron_Display,f
  5954  0F73  1003               	clrc
  5955  0F74  0D76               	rlf	??i1_Digitron_Display,w
  5956  0F75  0779               	addwf	i1Digitron_Display@que,w
  5957  0F76  00F7               	movwf	??i1_Digitron_Display+1
  5958  0F77  087C               	movf	i1Digitron_Display@j,w
  5959  0F78  0777               	addwf	??i1_Digitron_Display+1,w
  5960  0F79  00F8               	movwf	??i1_Digitron_Display+2
  5961  0F7A  3E02               	addlw	2
  5962  0F7B  0084               	movwf	4
  5963  0F7C  0800               	movf	0,w
  5964  0F7D  3ED0               	addlw	208
  5965  0F7E  00FA               	movwf	i1Digitron_Display@num
  5966                           
  5967                           ;led.c: 38: if(num>10)
  5968  0F7F  300B               	movlw	11
  5969  0F80  027A               	subwf	i1Digitron_Display@num,w
  5970  0F81  1C03               	skipc
  5971  0F82  2F85               	goto	i1l10287
  5972                           
  5973                           ;led.c: 39: {
  5974                           ;led.c: 41: num = 9;
  5975  0F83  3009               	movlw	9
  5976  0F84  00FA               	movwf	i1Digitron_Display@num
  5977  0F85                     i1l10287:	
  5978                           
  5979                           ;led.c: 42: }
  5980                           ;led.c: 43: Digitron_Send_8bit(CODE[num]);
  5981  0F85  087A               	movf	i1Digitron_Display@num,w
  5982  0F86  3E01               	addlw	low (_CODE-__stringbase)
  5983  0F87  0084               	movwf	4
  5984  0F88  120A  118A  2021   	fcall	stringdir
      +       120A  158A         
  5985  0F8D  27A5  120A  158A   	fcall	i1_Digitron_Send_8bit
  5986                           
  5987                           ;led.c: 44: Digitron_Send_8bit(0);
  5988  0F90  3000               	movlw	0
  5989  0F91  27A5  120A  158A   	fcall	i1_Digitron_Send_8bit
  5990  0F94  0AFC               	incf	i1Digitron_Display@j,f
  5991  0F95  3004               	movlw	4
  5992  0F96  027C               	subwf	i1Digitron_Display@j,w
  5993  0F97  1C03               	skipc
  5994  0F98  2F6F               	goto	i1l10281
  5995                           
  5996                           ;led.c: 46: }
  5997                           ;led.c: 47: Digitron_Send_8bit(0x8F);
  5998  0F99  308F               	movlw	143
  5999  0F9A  27A5  120A  158A   	fcall	i1_Digitron_Send_8bit
  6000                           
  6001                           ;led.c: 48: PORTD = 0xF0;
  6002  0F9D  30F0               	movlw	240
  6003  0F9E  0088               	movwf	8	;volatile
  6004  0F9F  0AFD               	incf	i1Digitron_Display@i,f
  6005  0FA0  3003               	movlw	3
  6006  0FA1  027D               	subwf	i1Digitron_Display@i,w
  6007  0FA2  1803               	btfsc	3,0
  6008  0FA3  0008               	return
  6009  0FA4  2F50               	goto	i1l10263
  6010  0FA5                     __end_ofi1_Digitron_Display:	
  6011  0FA5                     __ptext1235:	
  6012 ;; =============== function i1_delay_us ends ============
  6013                           
  6014                           
  6015 ;; *************** function i1_Digitron_Send_8bit *****************
  6016 ;; Defined at:
  6017 ;;		line 4 in file "TM1616/TM1616.c"
  6018 ;; Parameters:    Size  Location     Type
  6019 ;;  Digitron_Sen    1    wreg     unsigned char 
  6020 ;; Auto vars:     Size  Location     Type
  6021 ;;  Digitron_Sen    1    0[COMMON] unsigned char 
  6022 ;;  Digitron_Sen    1    1[COMMON] unsigned char 
  6023 ;; Return value:  Size  Location     Type
  6024 ;;		None               void
  6025 ;; Registers used:
  6026 ;;		wreg, status,2, status,0
  6027 ;; Tracked objects:
  6028 ;;		On entry : 140/100
  6029 ;;		On exit  : 160/100
  6030 ;;		Unchanged: FFE9F/0
  6031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6032 ;;      Params:         0       0       0       0       0
  6033 ;;      Locals:         2       0       0       0       0
  6034 ;;      Temps:          0       0       0       0       0
  6035 ;;      Totals:         2       0       0       0       0
  6036 ;;Total ram usage:        2 bytes
  6037 ;; Hardware stack levels used:    1
  6038 ;; This function calls:
  6039 ;;		Nothing
  6040 ;; This function is called by:
  6041 ;;		i1_Digitron_Display
  6042 ;;		i1_Digitron_Command
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045  0FA5                     i1_Digitron_Send_8bit:	
  6046                           
  6047 ;; hardware stack exceeded
  6048                           ; Regs used in i1_Digitron_Send_8bit: [wreg+status,2+status,0]
  6049                           ;i1Digitron_Send_8bit@dat stored from wreg
  6050  0FA5  00F1               	movwf	i1Digitron_Send_8bit@dat
  6051                           
  6052                           ;TM1616.c: 5: unsigned char i;
  6053                           ;TM1616.c: 6: for(i=0;i<8;i++)
  6054  0FA6  01F2               	clrf	i1Digitron_Send_8bit@i
  6055  0FA7                     i1l1726:	
  6056                           
  6057                           ;TM1616.c: 7: {
  6058                           ;TM1616.c: 8: if(dat&0x01) {
  6059  0FA7  1C71               	btfss	i1Digitron_Send_8bit@dat,0
  6060  0FA8  2FAB               	goto	i1l1728
  6061                           
  6062                           ;TM1616.c: 9: RC3=1;
  6063  0FA9  1587               	bsf	7,3
  6064                           
  6065                           ;TM1616.c: 10: }
  6066  0FAA  2FAC               	goto	i1l1729
  6067  0FAB                     i1l1728:	
  6068                           
  6069                           ;TM1616.c: 11: else{ RC3=0;}
  6070  0FAB  1187               	bcf	7,3
  6071  0FAC                     i1l1729:	
  6072                           
  6073                           ;TM1616.c: 12: RC2=0;
  6074  0FAC  1107               	bcf	7,2
  6075                           
  6076                           ;TM1616.c: 13: dat=dat>>1;
  6077  0FAD  1003               	clrc
  6078  0FAE  0CF1               	rrf	i1Digitron_Send_8bit@dat,f
  6079                           
  6080                           ;TM1616.c: 14: RC2=1;
  6081  0FAF  1507               	bsf	7,2
  6082  0FB0  0AF2               	incf	i1Digitron_Send_8bit@i,f
  6083  0FB1  3008               	movlw	8
  6084  0FB2  0272               	subwf	i1Digitron_Send_8bit@i,w
  6085  0FB3  1803               	btfsc	3,0
  6086  0FB4  0008               	return
  6087  0FB5  2FA7               	goto	i1l1726
  6088  0FB6                     __end_ofi1_Digitron_Send_8bit:	
  6089  0FB6                     __ptext1224:	
  6090 ;; =============== function ___ftsub ends ============
  6091                           
  6092                           
  6093 ;; *************** function i1_Digitron_Command *****************
  6094 ;; Defined at:
  6095 ;;		line 19 in file "TM1616/TM1616.c"
  6096 ;; Parameters:    Size  Location     Type
  6097 ;;  Digitron_Com    1    wreg     unsigned char 
  6098 ;;  Digitron_Com    1    3[COMMON] unsigned char 
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;  Digitron_Com    1    4[COMMON] unsigned char 
  6101 ;; Return value:  Size  Location     Type
  6102 ;;		None               void
  6103 ;; Registers used:
  6104 ;;		wreg, status,2, status,0, pclath, cstack
  6105 ;; Tracked objects:
  6106 ;;		On entry : 140/120
  6107 ;;		On exit  : 160/100
  6108 ;;		Unchanged: FFE9F/0
  6109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6110 ;;      Params:         1       0       0       0       0
  6111 ;;      Locals:         1       0       0       0       0
  6112 ;;      Temps:          0       0       0       0       0
  6113 ;;      Totals:         2       0       0       0       0
  6114 ;;Total ram usage:        2 bytes
  6115 ;; Hardware stack levels used:    1
  6116 ;; Hardware stack levels required when called:    1
  6117 ;; This function calls:
  6118 ;;		i1_delay_us
  6119 ;;		i1_Digitron_Send_8bit
  6120 ;; This function is called by:
  6121 ;;		i1_Digitron_Display
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124  0FB6                     i1_Digitron_Command:	
  6125                           
  6126 ;; hardware stack exceeded
  6127                           ; Regs used in i1_Digitron_Command: [wreg+status,2+status,0+pclath+cstack]
  6128                           ;i1Digitron_Command@device stored from wreg
  6129  0FB6  00F5               	movwf	i1Digitron_Command@device
  6130                           
  6131                           ;TM1616.c: 20: PORTD = 0xF0;
  6132  0FB7  30F0               	movlw	240
  6133  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  6134  0FB9  0088               	movwf	8	;volatile
  6135                           
  6136                           ;TM1616.c: 21: PORTD = device;
  6137  0FBA  0875               	movf	i1Digitron_Command@device,w
  6138  0FBB  0088               	movwf	8	;volatile
  6139                           
  6140                           ;TM1616.c: 22: delay_us(1);
  6141  0FBC  3001               	movlw	1
  6142  0FBD  27C3  120A  158A   	fcall	i1_delay_us
  6143                           
  6144                           ;TM1616.c: 23: Digitron_Send_8bit(com);
  6145  0FC0  0874               	movf	i1Digitron_Command@com,w
  6146  0FC1  27A5               	fcall	i1_Digitron_Send_8bit
  6147  0FC2  0008               	return
  6148  0FC3                     __end_ofi1_Digitron_Command:	
  6149  0FC3                     __ptext1234:	
  6150 ;; =============== function _atoi ends ============
  6151                           
  6152                           
  6153 ;; *************** function i1_delay_us *****************
  6154 ;; Defined at:
  6155 ;;		line 29 in file "timer.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;  delay_us        1    wreg     unsigned char 
  6158 ;; Auto vars:     Size  Location     Type
  6159 ;;  delay_us        1    0[COMMON] unsigned char 
  6160 ;;  delay_us        1    2[COMMON] unsigned char 
  6161 ;;  delay_us        1    1[COMMON] unsigned char 
  6162 ;; Return value:  Size  Location     Type
  6163 ;;		None               void
  6164 ;; Registers used:
  6165 ;;		wreg, status,2, status,0
  6166 ;; Tracked objects:
  6167 ;;		On entry : 160/100
  6168 ;;		On exit  : 160/100
  6169 ;;		Unchanged: FFE9F/0
  6170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6171 ;;      Params:         0       0       0       0       0
  6172 ;;      Locals:         3       0       0       0       0
  6173 ;;      Temps:          0       0       0       0       0
  6174 ;;      Totals:         3       0       0       0       0
  6175 ;;Total ram usage:        3 bytes
  6176 ;; Hardware stack levels used:    1
  6177 ;; This function calls:
  6178 ;;		Nothing
  6179 ;; This function is called by:
  6180 ;;		i1_Digitron_Command
  6181 ;; This function uses a non-reentrant model
  6182 ;;
  6183  0FC3                     i1_delay_us:	
  6184                           
  6185 ;; hardware stack exceeded
  6186                           ; Regs used in i1_delay_us: [wreg+status,2+status,0]
  6187                           ;i1delay_us@usec stored from wreg
  6188  0FC3  00F1               	movwf	i1delay_us@usec
  6189                           
  6190                           ;timer.c: 30: for(unsigned char i = usec; i>0; i--)
  6191  0FC4  00F2               	movwf	i1delay_us@i
  6192  0FC5  08F2               	movf	i1delay_us@i,f
  6193  0FC6  1903               	btfsc	3,2
  6194  0FC7  0008               	return
  6195  0FC8                     i1l10327:	
  6196                           
  6197                           ;timer.c: 31: for(unsigned char j = 2; j>0; j--);
  6198  0FC8  3002               	movlw	2
  6199  0FC9  00F3               	movwf	i1delay_us@j
  6200  0FCA                     i1l10333:	
  6201  0FCA  0BF3               	decfsz	i1delay_us@j,f
  6202  0FCB  2FCA               	goto	i1l10333
  6203  0FCC  0BF2               	decfsz	i1delay_us@i,f
  6204  0FCD  2FC8               	goto	i1l10327
  6205  0FCE  0008               	return
  6206  0FCF                     __end_ofi1_delay_us:	
  6207  0FCF                     __ptext1245:	
  6208 ;; =============== function _isdigit ends ============
  6209                           
  6210                           
  6211 ;; *************** function _CleanGpsRcv *****************
  6212 ;; Defined at:
  6213 ;;		line 91 in file "Gps_recive.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;		None
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;  i               1    0[COMMON] unsigned char 
  6218 ;; Return value:  Size  Location     Type
  6219 ;;		None               void
  6220 ;; Registers used:
  6221 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6222 ;; Tracked objects:
  6223 ;;		On entry : 40/20
  6224 ;;		On exit  : 160/20
  6225 ;;		Unchanged: FFE9F/0
  6226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6227 ;;      Params:         0       0       0       0       0
  6228 ;;      Locals:         1       0       0       0       0
  6229 ;;      Temps:          0       0       0       0       0
  6230 ;;      Totals:         1       0       0       0       0
  6231 ;;Total ram usage:        1 bytes
  6232 ;; Hardware stack levels used:    1
  6233 ;; This function calls:
  6234 ;;		Nothing
  6235 ;; This function is called by:
  6236 ;;		_Pos_meet
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239  0FCF                     _CleanGpsRcv:	
  6240  0FCF                     i1l9543:	
  6241                           ; Regs used in _CleanGpsRcv: [wreg-fsr0h+status,2+status,0]
  6242                           
  6243                           
  6244                           ;Gps_recive.c: 92: unsigned char i = 0;
  6245  0FCF  01F1               	clrf	CleanGpsRcv@i
  6246                           
  6247                           ;Gps_recive.c: 93: for(i=0; i<=10; i++)
  6248  0FD0  01F1               	clrf	CleanGpsRcv@i
  6249  0FD1                     i1l9549:	
  6250                           
  6251                           ;Gps_recive.c: 94: {
  6252                           ;Gps_recive.c: 95: arr_rcv_section1[i] = 0;
  6253  0FD1  0871               	movf	CleanGpsRcv@i,w
  6254  0FD2  3E90               	addlw	_arr_rcv_section1& (0+255)
  6255  0FD3  0084               	movwf	4
  6256  0FD4  1783               	bsf	3,7	;select IRP bank3
  6257  0FD5  0180               	clrf	0
  6258  0FD6  0AF1               	incf	CleanGpsRcv@i,f
  6259  0FD7  300B               	movlw	11
  6260  0FD8  0271               	subwf	CleanGpsRcv@i,w
  6261  0FD9  1C03               	skipc
  6262  0FDA  2FD1               	goto	i1l9549
  6263                           
  6264                           ;Gps_recive.c: 96: }
  6265                           ;Gps_recive.c: 97: for(i=0; i<=10; i++)
  6266  0FDB  01F1               	clrf	CleanGpsRcv@i
  6267  0FDC                     i1l9561:	
  6268                           
  6269                           ;Gps_recive.c: 98: {
  6270                           ;Gps_recive.c: 99: arr_rcv_section2[i] = 0;
  6271  0FDC  0871               	movf	CleanGpsRcv@i,w
  6272  0FDD  3E9A               	addlw	_arr_rcv_section2& (0+255)
  6273  0FDE  0084               	movwf	4
  6274  0FDF  0180               	clrf	0
  6275  0FE0  0AF1               	incf	CleanGpsRcv@i,f
  6276  0FE1  300B               	movlw	11
  6277  0FE2  0271               	subwf	CleanGpsRcv@i,w
  6278  0FE3  1C03               	skipc
  6279  0FE4  2FDC               	goto	i1l9561
  6280                           
  6281                           ;Gps_recive.c: 100: }
  6282                           ;Gps_recive.c: 101: for(i=0; i<=2; i++)
  6283  0FE5  01F1               	clrf	CleanGpsRcv@i
  6284  0FE6                     i1l9573:	
  6285                           
  6286                           ;Gps_recive.c: 102: {
  6287                           ;Gps_recive.c: 103: arr_rcv_len[i] = 0;
  6288  0FE6  0871               	movf	CleanGpsRcv@i,w
  6289  0FE7  3EC8               	addlw	_arr_rcv_len& (0+255)
  6290  0FE8  0084               	movwf	4
  6291  0FE9  0180               	clrf	0
  6292  0FEA  0AF1               	incf	CleanGpsRcv@i,f
  6293  0FEB  3003               	movlw	3
  6294  0FEC  0271               	subwf	CleanGpsRcv@i,w
  6295  0FED  1C03               	skipc
  6296  0FEE  2FE6               	goto	i1l9573
  6297                           
  6298                           ;Gps_recive.c: 104: }
  6299                           ;Gps_recive.c: 105: for(i=0; i<=2; i++)
  6300  0FEF  01F1               	clrf	CleanGpsRcv@i
  6301  0FF0                     i1l9585:	
  6302                           
  6303                           ;Gps_recive.c: 106: {
  6304                           ;Gps_recive.c: 107: arr_rcv_who[i] = 0;
  6305  0FF0  0871               	movf	CleanGpsRcv@i,w
  6306  0FF1  3EDD               	addlw	_arr_rcv_who& (0+255)
  6307  0FF2  0084               	movwf	4
  6308  0FF3  1383               	bcf	3,7	;select IRP bank1
  6309  0FF4  0180               	clrf	0
  6310  0FF5  0AF1               	incf	CleanGpsRcv@i,f
  6311  0FF6  3003               	movlw	3
  6312  0FF7  0271               	subwf	CleanGpsRcv@i,w
  6313  0FF8  1C03               	skipc
  6314  0FF9  2FF0               	goto	i1l9585
  6315                           
  6316                           ;Gps_recive.c: 108: }
  6317                           ;Gps_recive.c: 109: LatiRcvCnt = 0;
  6318  0FFA  1683               	bsf	3,5	;RP0=1, select bank1
  6319  0FFB  01E5               	clrf	_LatiRcvCnt^(0+128)
  6320                           
  6321                           ;Gps_recive.c: 110: LongiRcvCnt = 0;
  6322  0FFC  01E7               	clrf	_LongiRcvCnt^(0+128)
  6323                           
  6324                           ;Gps_recive.c: 111: LenRcvCnt = 0;
  6325  0FFD  01E6               	clrf	_LenRcvCnt^(0+128)
  6326                           
  6327                           ;Gps_recive.c: 112: WhoRcvCnt = 0;
  6328  0FFE  01E8               	clrf	_WhoRcvCnt^(0+128)
  6329  0FFF  0008               	return
  6330  1000                     __end_of_CleanGpsRcv:	
  6331                           
  6332                           	psect	intentry
  6333  0004                     __pintentry:	
  6334 ;; hardware stack exceeded
  6335                           ; Regs used in _SerialService: [allreg]
  6336                           
  6337  0004                     interrupt_function:	
  6338  007E                     saved_w	set	btemp
  6339  0004  00FE               	movwf	btemp
  6340  0005  0803               	movf	3,w
  6341  0006  1683               	bsf	3,5	;RP0=1, select bank1
  6342  0007  1303               	bcf	3,6	;RP1=0, select bank1
  6343  0008  00D9               	movwf	??_SerialService^(0+128)
  6344  0009  0804               	movf	4,w
  6345  000A  00DA               	movwf	(??_SerialService+1)^(0+128)
  6346  000B  080A               	movf	10,w
  6347  000C  00DB               	movwf	(??_SerialService+2)^(0+128)
  6348  000D  1283               	bcf	3,5	;RP0=0, select bank0
  6349  000E  087F               	movf	btemp+1,w
  6350  000F  1683               	bsf	3,5	;RP0=1, select bank1
  6351  0010  00DC               	movwf	(??_SerialService+3)^(0+128)
  6352  0011  120A  158A  2CCB   	ljmp	_SerialService
  6353                           
  6354                           	psect	text1213
  6355  0B39                     __ptext1213:	
  6356 ;; =============== function _Pos_meet ends ============
  6357                           
  6358                           
  6359 ;; *************** function _Distance_Update *****************
  6360 ;; Defined at:
  6361 ;;		line 126 in file "Gps_recive.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;		None
  6364 ;; Auto vars:     Size  Location     Type
  6365 ;;  dat             2   34[BANK1 ] unsigned int 
  6366 ;;  mask            2   30[BANK1 ] unsigned int 
  6367 ;;  dat             2   32[BANK1 ] unsigned int 
  6368 ;;  mask            2   28[BANK1 ] unsigned int 
  6369 ;;  mask            2   26[BANK1 ] unsigned int 
  6370 ;;  dat             2   24[BANK1 ] unsigned int 
  6371 ;;  level           1   36[BANK1 ] unsigned char 
  6372 ;; Return value:  Size  Location     Type
  6373 ;;		None               void
  6374 ;; Registers used:
  6375 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6376 ;; Tracked objects:
  6377 ;;		On entry : 160/60
  6378 ;;		On exit  : 40/0
  6379 ;;		Unchanged: FFE00/0
  6380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6381 ;;      Params:         0       0       0       0       0
  6382 ;;      Locals:         0       0      13       0       0
  6383 ;;      Temps:          0       0       0       0       0
  6384 ;;      Totals:         0       0      13       0       0
  6385 ;;Total ram usage:       13 bytes
  6386 ;; Hardware stack levels used:    1
  6387 ;; Hardware stack levels required when called:    6
  6388 ;; This function calls:
  6389 ;;		_Calc_DistanceLevel
  6390 ;;		_Register_SendData
  6391 ;; This function is called by:
  6392 ;;		_Pos_meet
  6393 ;; This function uses a non-reentrant model
  6394 ;;
  6395  0B39                     _Distance_Update:	
  6396                           
  6397                           ;Gps_recive.c: 127: unsigned char level;
  6398                           ;Gps_recive.c: 129: level = Calc_DistanceLevel();
  6399                           
  6400 ;; hardware stack exceeded
  6401                           ; Regs used in _Distance_Update: [allreg]
  6402  0B39  23D5  120A  158A   	fcall	_Calc_DistanceLevel
  6403  0B3C  00C4               	movwf	Distance_Update@level^(0+128)
  6404                           
  6405                           ;Gps_recive.c: 130: level--;
  6406  0B3D  03C4               	decf	Distance_Update@level^(0+128),f
  6407                           
  6408                           ;Gps_recive.c: 170: }
  6409                           ;Gps_recive.c: 172: }
  6410                           
  6411                           ;Gps_recive.c: 131: switch(arr_rcv_who[1])
  6412  0B3E  085E               	movf	(_arr_rcv_who^(0+128)+1),w
  6413                           
  6414                           ; Switch size 1, requested type "space"
  6415                           ; Number of cases is 3, Range of values is 49 to 51
  6416                           ; switch strategies available:
  6417                           ; Name         Bytes Cycles
  6418                           ; simple_byte    10     6 (average)
  6419                           ; direct_byte    31    22 (fixed)
  6420                           ;	Chosen strategy is simple_byte
  6421  0B3F  3A31               	xorlw	49	; case 49
  6422  0B40  1903               	skipnz
  6423  0B41  2B49               	goto	i1l9497
  6424  0B42  3A03               	xorlw	3	; case 50
  6425  0B43  1903               	skipnz
  6426  0B44  2B6B               	goto	i1l9509
  6427  0B45  3A01               	xorlw	1	; case 51
  6428  0B46  1D03               	btfss	3,2
  6429  0B47  0008               	return
  6430  0B48  2B96               	goto	i1l9525
  6431  0B49                     i1l9497:	
  6432                           
  6433                           ;Gps_recive.c: 134: {
  6434                           ;Gps_recive.c: 135: unsigned int dat;
  6435                           ;Gps_recive.c: 136: unsigned int mask = 0x07FF;
  6436  0B49  30FF               	movlw	255
  6437  0B4A  00BA               	movwf	Distance_Update@mask^(0+128)
  6438  0B4B  3007               	movlw	7
  6439  0B4C  00BB               	movwf	(Distance_Update@mask^(0+128)+1)
  6440                           
  6441                           ;Gps_recive.c: 137: dat = 0xF800<<level;
  6442  0B4D  01B8               	clrf	Distance_Update@dat^(0+128)
  6443  0B4E  30F8               	movlw	248
  6444  0B4F  00B9               	movwf	(Distance_Update@dat^(0+128)+1)
  6445  0B50  0A44               	incf	Distance_Update@level^(0+128),w
  6446  0B51  2B55               	goto	u266_20
  6447  0B52                     u266_25:	
  6448  0B52  1003               	clrc
  6449  0B53  0DB8               	rlf	Distance_Update@dat^(0+128),f
  6450  0B54  0DB9               	rlf	(Distance_Update@dat+1)^(0+128),f
  6451  0B55                     u266_20:	
  6452  0B55  3EFF               	addlw	-1
  6453  0B56  1D03               	skipz
  6454  0B57  2B52               	goto	u266_25
  6455                           
  6456                           ;Gps_recive.c: 138: mask |= dat;
  6457  0B58  0838               	movf	Distance_Update@dat^(0+128),w
  6458  0B59  04BA               	iorwf	Distance_Update@mask^(0+128),f
  6459  0B5A  0839               	movf	(Distance_Update@dat+1)^(0+128),w
  6460  0B5B  04BB               	iorwf	(Distance_Update@mask+1)^(0+128),f
  6461                           
  6462                           ;Gps_recive.c: 140: gps_location |= 0xF800;
  6463  0B5C  30F8               	movlw	248
  6464  0B5D  04E0               	iorwf	(_gps_location+1)^(0+128),f
  6465                           
  6466                           ;Gps_recive.c: 141: gps_location &= mask;
  6467  0B5E  083A               	movf	Distance_Update@mask^(0+128),w
  6468  0B5F  05DF               	andwf	_gps_location^(0+128),f
  6469  0B60  083B               	movf	(Distance_Update@mask+1)^(0+128),w
  6470  0B61  05E0               	andwf	(_gps_location+1)^(0+128),f
  6471                           
  6472                           ;Gps_recive.c: 143: Register_SendData(gps_location, 16);
  6473  0B62  0860               	movf	(_gps_location+1)^(0+128),w
  6474  0B63  00F2               	movwf	?_Register_SendData+1
  6475  0B64  085F               	movf	_gps_location^(0+128),w
  6476  0B65  00F1               	movwf	?_Register_SendData
  6477  0B66  3010               	movlw	16
  6478  0B67  00F3               	movwf	?_Register_SendData+2
  6479  0B68  23BE  120A  158A   	fcall	_Register_SendData
  6480  0B6B                     i1l9509:	
  6481                           
  6482                           ;Gps_recive.c: 146: {
  6483                           ;Gps_recive.c: 147: unsigned int dat;
  6484                           ;Gps_recive.c: 148: unsigned int mask = 0xF83F;
  6485  0B6B  303F               	movlw	63
  6486  0B6C  1683               	bsf	3,5	;RP0=1, select bank1
  6487  0B6D  00BC               	movwf	Distance_Update@mask_2829^(0+128)
  6488  0B6E  30F8               	movlw	248
  6489  0B6F  00BD               	movwf	(Distance_Update@mask_2829^(0+128)+1)
  6490                           
  6491                           ;Gps_recive.c: 149: dat = 0xF800<<level;
  6492  0B70  01C0               	clrf	Distance_Update@dat_2828^(0+128)
  6493  0B71  00C1               	movwf	(Distance_Update@dat_2828^(0+128)+1)
  6494  0B72  0A44               	incf	Distance_Update@level^(0+128),w
  6495  0B73  2B77               	goto	u267_20
  6496  0B74                     u267_25:	
  6497  0B74  1003               	clrc
  6498  0B75  0DC0               	rlf	Distance_Update@dat_2828^(0+128),f
  6499  0B76  0DC1               	rlf	(Distance_Update@dat_2828+1)^(0+128),f
  6500  0B77                     u267_20:	
  6501  0B77  3EFF               	addlw	-1
  6502  0B78  1D03               	skipz
  6503  0B79  2B74               	goto	u267_25
  6504                           
  6505                           ;Gps_recive.c: 150: dat = dat >> 5;
  6506  0B7A  3005               	movlw	5
  6507  0B7B                     u268_25:	
  6508  0B7B  1003               	clrc
  6509  0B7C  0CC1               	rrf	(Distance_Update@dat_2828+1)^(0+128),f
  6510  0B7D  0CC0               	rrf	Distance_Update@dat_2828^(0+128),f
  6511  0B7E  3EFF               	addlw	-1
  6512  0B7F  1D03               	skipz
  6513  0B80  2B7B               	goto	u268_25
  6514                           
  6515                           ;Gps_recive.c: 151: mask |= dat;
  6516  0B81  0840               	movf	Distance_Update@dat_2828^(0+128),w
  6517  0B82  04BC               	iorwf	Distance_Update@mask_2829^(0+128),f
  6518  0B83  0841               	movf	(Distance_Update@dat_2828+1)^(0+128),w
  6519  0B84  04BD               	iorwf	(Distance_Update@mask_2829+1)^(0+128),f
  6520                           
  6521                           ;Gps_recive.c: 153: gps_location |= 0x07C0;
  6522  0B85  30C0               	movlw	192
  6523  0B86  04DF               	iorwf	_gps_location^(0+128),f
  6524  0B87  3007               	movlw	7
  6525  0B88  04E0               	iorwf	(_gps_location+1)^(0+128),f
  6526                           
  6527                           ;Gps_recive.c: 154: gps_location &= mask;
  6528  0B89  083C               	movf	Distance_Update@mask_2829^(0+128),w
  6529  0B8A  05DF               	andwf	_gps_location^(0+128),f
  6530  0B8B  083D               	movf	(Distance_Update@mask_2829+1)^(0+128),w
  6531  0B8C  05E0               	andwf	(_gps_location+1)^(0+128),f
  6532                           
  6533                           ;Gps_recive.c: 156: Register_SendData(gps_location, 16);
  6534  0B8D  0860               	movf	(_gps_location+1)^(0+128),w
  6535  0B8E  00F2               	movwf	?_Register_SendData+1
  6536  0B8F  085F               	movf	_gps_location^(0+128),w
  6537  0B90  00F1               	movwf	?_Register_SendData
  6538  0B91  3010               	movlw	16
  6539  0B92  00F3               	movwf	?_Register_SendData+2
  6540  0B93  23BE  120A  158A   	fcall	_Register_SendData
  6541  0B96                     i1l9525:	
  6542                           
  6543                           ;Gps_recive.c: 159: {
  6544                           ;Gps_recive.c: 160: unsigned int dat;
  6545                           ;Gps_recive.c: 161: unsigned int mask = 0xFFC1;
  6546  0B96  30C1               	movlw	193
  6547  0B97  1683               	bsf	3,5	;RP0=1, select bank1
  6548  0B98  00BE               	movwf	Distance_Update@mask_2831^(0+128)
  6549  0B99  30FF               	movlw	255
  6550  0B9A  00BF               	movwf	(Distance_Update@mask_2831^(0+128)+1)
  6551                           
  6552                           ;Gps_recive.c: 162: dat = 0xF800<<level;
  6553  0B9B  01C2               	clrf	Distance_Update@dat_2830^(0+128)
  6554  0B9C  30F8               	movlw	248
  6555  0B9D  00C3               	movwf	(Distance_Update@dat_2830^(0+128)+1)
  6556  0B9E  0A44               	incf	Distance_Update@level^(0+128),w
  6557  0B9F  2BA3               	goto	u269_20
  6558  0BA0                     u269_25:	
  6559  0BA0  1003               	clrc
  6560  0BA1  0DC2               	rlf	Distance_Update@dat_2830^(0+128),f
  6561  0BA2  0DC3               	rlf	(Distance_Update@dat_2830+1)^(0+128),f
  6562  0BA3                     u269_20:	
  6563  0BA3  3EFF               	addlw	-1
  6564  0BA4  1D03               	skipz
  6565  0BA5  2BA0               	goto	u269_25
  6566                           
  6567                           ;Gps_recive.c: 163: dat = dat >> 10;
  6568  0BA6  300A               	movlw	10
  6569  0BA7                     u270_25:	
  6570  0BA7  1003               	clrc
  6571  0BA8  0CC3               	rrf	(Distance_Update@dat_2830+1)^(0+128),f
  6572  0BA9  0CC2               	rrf	Distance_Update@dat_2830^(0+128),f
  6573  0BAA  3EFF               	addlw	-1
  6574  0BAB  1D03               	skipz
  6575  0BAC  2BA7               	goto	u270_25
  6576                           
  6577                           ;Gps_recive.c: 164: mask |= dat;
  6578  0BAD  0842               	movf	Distance_Update@dat_2830^(0+128),w
  6579  0BAE  04BE               	iorwf	Distance_Update@mask_2831^(0+128),f
  6580  0BAF  0843               	movf	(Distance_Update@dat_2830+1)^(0+128),w
  6581  0BB0  04BF               	iorwf	(Distance_Update@mask_2831+1)^(0+128),f
  6582                           
  6583                           ;Gps_recive.c: 166: gps_location |= 0x003E;
  6584  0BB1  303E               	movlw	62
  6585  0BB2  04DF               	iorwf	_gps_location^(0+128),f
  6586                           
  6587                           ;Gps_recive.c: 167: gps_location &= mask;
  6588  0BB3  083E               	movf	Distance_Update@mask_2831^(0+128),w
  6589  0BB4  05DF               	andwf	_gps_location^(0+128),f
  6590  0BB5  083F               	movf	(Distance_Update@mask_2831+1)^(0+128),w
  6591  0BB6  05E0               	andwf	(_gps_location+1)^(0+128),f
  6592                           
  6593                           ;Gps_recive.c: 169: Register_SendData(gps_location, 16);
  6594  0BB7  0860               	movf	(_gps_location+1)^(0+128),w
  6595  0BB8  00F2               	movwf	?_Register_SendData+1
  6596  0BB9  085F               	movf	_gps_location^(0+128),w
  6597  0BBA  00F1               	movwf	?_Register_SendData
  6598  0BBB  3010               	movlw	16
  6599  0BBC  00F3               	movwf	?_Register_SendData+2
  6600  0BBD  2BBE               	ljmp	i1l8929
  6601  0BBE                     __end_of_Distance_Update:	
  6602  0BBE                     __ptext1247:	
  6603 ;; =============== function _queueArray_in ends ============
  6604                           
  6605                           
  6606 ;; *************** function _Register_SendData *****************
  6607 ;; Defined at:
  6608 ;;		line 4 in file "74HC595/74HC595.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;  dat             2    0[COMMON] unsigned int 
  6611 ;;  length          1    2[COMMON] unsigned char 
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;  i               1    3[COMMON] unsigned char 
  6614 ;; Return value:  Size  Location     Type
  6615 ;;		None               void
  6616 ;; Registers used:
  6617 ;;		wreg, status,2, status,0
  6618 ;; Tracked objects:
  6619 ;;		On entry : 60/20
  6620 ;;		On exit  : 60/0
  6621 ;;		Unchanged: FFF9F/0
  6622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6623 ;;      Params:         3       0       0       0       0
  6624 ;;      Locals:         1       0       0       0       0
  6625 ;;      Temps:          0       0       0       0       0
  6626 ;;      Totals:         4       0       0       0       0
  6627 ;;Total ram usage:        4 bytes
  6628 ;; Hardware stack levels used:    1
  6629 ;; This function calls:
  6630 ;;		Nothing
  6631 ;; This function is called by:
  6632 ;;		_Distance_Update
  6633 ;; This function uses a non-reentrant model
  6634 ;;
  6635  0BBE                     _Register_SendData:	
  6636  0BBE                     i1l8929:	
  6637                           ; Regs used in _Register_SendData: [wreg+status,2+status,0]
  6638                           
  6639                           
  6640                           ;74HC595.c: 5: for(unsigned char i = 0; i<length; i++)
  6641  0BBE  01F4               	clrf	Register_SendData@i
  6642  0BBF                     i1l8937:	
  6643  0BBF  0873               	movf	Register_SendData@length,w
  6644  0BC0  0274               	subwf	Register_SendData@i,w
  6645  0BC1  1803               	btfsc	3,0
  6646  0BC2  2BD1               	goto	i1l563
  6647                           
  6648                           ;74HC595.c: 6: {
  6649                           ;74HC595.c: 7: if(dat&0x01)
  6650  0BC3  1C71               	btfss	Register_SendData@dat,0
  6651  0BC4  2BC8               	goto	i1l561
  6652                           
  6653                           ;74HC595.c: 8: RE1=1;
  6654  0BC5  1283               	bcf	3,5	;RP0=0, select bank0
  6655  0BC6  1489               	bsf	9,1
  6656  0BC7  2BCA               	goto	i1l562
  6657  0BC8                     i1l561:	
  6658                           
  6659                           ;74HC595.c: 9: else RE1=0;
  6660  0BC8  1283               	bcf	3,5	;RP0=0, select bank0
  6661  0BC9  1089               	bcf	9,1
  6662  0BCA                     i1l562:	
  6663                           
  6664                           ;74HC595.c: 10: RE0 = 1;
  6665  0BCA  1409               	bsf	9,0
  6666                           
  6667                           ;74HC595.c: 11: dat = dat >> 1;
  6668  0BCB  1003               	clrc
  6669  0BCC  0CF2               	rrf	Register_SendData@dat+1,f
  6670  0BCD  0CF1               	rrf	Register_SendData@dat,f
  6671                           
  6672                           ;74HC595.c: 12: RE0 = 0;
  6673  0BCE  1009               	bcf	9,0
  6674  0BCF  0AF4               	incf	Register_SendData@i,f
  6675  0BD0  2BBF               	goto	i1l8937
  6676  0BD1                     i1l563:	
  6677                           
  6678                           ;74HC595.c: 13: }
  6679                           ;74HC595.c: 14: RE2 = 1;
  6680  0BD1  1283               	bcf	3,5	;RP0=0, select bank0
  6681  0BD2  1509               	bsf	9,2
  6682                           
  6683                           ;74HC595.c: 15: RE2 = 0;
  6684  0BD3  1109               	bcf	9,2
  6685  0BD4  0008               	return
  6686  0BD5                     __end_of_Register_SendData:	
  6687  0BD5                     __ptext1214:	
  6688 ;; =============== function _Distance_Update ends ============
  6689                           
  6690                           
  6691 ;; *************** function _Calc_DistanceLevel *****************
  6692 ;; Defined at:
  6693 ;;		line 117 in file "Gps_recive.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;		None
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;  level           1   23[BANK1 ] unsigned char 
  6698 ;; Return value:  Size  Location     Type
  6699 ;;                  1    wreg      unsigned char 
  6700 ;; Registers used:
  6701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6702 ;; Tracked objects:
  6703 ;;		On entry : 160/60
  6704 ;;		On exit  : 60/20
  6705 ;;		Unchanged: FFE00/0
  6706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6707 ;;      Params:         0       0       0       0       0
  6708 ;;      Locals:         0       0      10       0       0
  6709 ;;      Temps:          0       0       0       0       0
  6710 ;;      Totals:         0       0      10       0       0
  6711 ;;Total ram usage:       10 bytes
  6712 ;; Hardware stack levels used:    1
  6713 ;; Hardware stack levels required when called:    5
  6714 ;; This function calls:
  6715 ;;		___altoft
  6716 ;;		_pow
  6717 ;;		___ftadd
  6718 ;;		_sqrt
  6719 ;;		___fttol
  6720 ;;		___lwdiv
  6721 ;; This function is called by:
  6722 ;;		_Distance_Update
  6723 ;; This function uses a non-reentrant model
  6724 ;;
  6725  0BD5                     _Calc_DistanceLevel:	
  6726                           
  6727                           ;Gps_recive.c: 118: unsigned char level;
  6728                           ;Gps_recive.c: 120: t = (unsigned int)sqrt(pow(val_rcv_longi - 65234, 2)+pow(val_rcv_lat
      +                          i-89303, 2));
  6729                           
  6730 ;; hardware stack exceeded
  6731                           ; Regs used in _Calc_DistanceLevel: [allreg]
  6732  0BD5  082B               	movf	(_val_rcv_longi+3)^(0+384),w
  6733  0BD6  1283               	bcf	3,5	;RP0=0, select bank0
  6734  0BD7  1303               	bcf	3,6	;RP1=0, select bank0
  6735  0BD8  00AC               	movwf	?___altoft+3
  6736  0BD9  1683               	bsf	3,5	;RP0=1, select bank3
  6737  0BDA  1703               	bsf	3,6	;RP1=1, select bank3
  6738  0BDB  082A               	movf	(_val_rcv_longi+2)^(0+384),w
  6739  0BDC  1283               	bcf	3,5	;RP0=0, select bank0
  6740  0BDD  1303               	bcf	3,6	;RP1=0, select bank0
  6741  0BDE  00AB               	movwf	?___altoft+2
  6742  0BDF  1683               	bsf	3,5	;RP0=1, select bank3
  6743  0BE0  1703               	bsf	3,6	;RP1=1, select bank3
  6744  0BE1  0829               	movf	(_val_rcv_longi+1)^(0+384),w
  6745  0BE2  1283               	bcf	3,5	;RP0=0, select bank0
  6746  0BE3  1303               	bcf	3,6	;RP1=0, select bank0
  6747  0BE4  00AA               	movwf	?___altoft+1
  6748  0BE5  1683               	bsf	3,5	;RP0=1, select bank3
  6749  0BE6  1703               	bsf	3,6	;RP1=1, select bank3
  6750  0BE7  0828               	movf	_val_rcv_longi^(0+384),w
  6751  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  6752  0BE9  1303               	bcf	3,6	;RP1=0, select bank0
  6753  0BEA  00A9               	movwf	?___altoft
  6754  0BEB  302E               	movlw	46
  6755  0BEC  07A9               	addwf	?___altoft,f
  6756  0BED  3001               	movlw	1
  6757  0BEE  1803               	skipnc
  6758  0BEF  3002               	movlw	2
  6759  0BF0  07AA               	addwf	?___altoft+1,f
  6760  0BF1  30FF               	movlw	255
  6761  0BF2  1C03               	skipc
  6762  0BF3  07AB               	addwf	?___altoft+2,f
  6763  0BF4  1C03               	skipc
  6764  0BF5  07AC               	addwf	?___altoft+3,f
  6765  0BF6  120A  118A  27D1   	fcall	___altoft
      +       120A  158A         
  6766  0BFB  0829               	movf	?___altoft,w
  6767  0BFC  1683               	bsf	3,5	;RP0=1, select bank1
  6768  0BFD  00AE               	movwf	_Calc_DistanceLevel$3685^(0+128)
  6769  0BFE  1283               	bcf	3,5	;RP0=0, select bank0
  6770  0BFF  082A               	movf	?___altoft+1,w
  6771  0C00  1683               	bsf	3,5	;RP0=1, select bank1
  6772  0C01  00AF               	movwf	(_Calc_DistanceLevel$3685+1)^(0+128)
  6773  0C02  1283               	bcf	3,5	;RP0=0, select bank0
  6774  0C03  082B               	movf	?___altoft+2,w
  6775  0C04  1683               	bsf	3,5	;RP0=1, select bank1
  6776  0C05  00B0               	movwf	(_Calc_DistanceLevel$3685+2)^(0+128)
  6777                           
  6778                           ;Gps_recive.c: 118: unsigned char level;
  6779                           ;Gps_recive.c: 120: t = (unsigned int)sqrt(pow(val_rcv_longi - 65234, 2)+pow(val_rcv_lat
      +                          i-89303, 2));
  6780  0C06  1703               	bsf	3,6	;RP1=1, select bank3
  6781  0C07  0827               	movf	(_val_rcv_lati+3)^(0+384),w
  6782  0C08  1283               	bcf	3,5	;RP0=0, select bank0
  6783  0C09  1303               	bcf	3,6	;RP1=0, select bank0
  6784  0C0A  00AC               	movwf	?___altoft+3
  6785  0C0B  1683               	bsf	3,5	;RP0=1, select bank3
  6786  0C0C  1703               	bsf	3,6	;RP1=1, select bank3
  6787  0C0D  0826               	movf	(_val_rcv_lati+2)^(0+384),w
  6788  0C0E  1283               	bcf	3,5	;RP0=0, select bank0
  6789  0C0F  1303               	bcf	3,6	;RP1=0, select bank0
  6790  0C10  00AB               	movwf	?___altoft+2
  6791  0C11  1683               	bsf	3,5	;RP0=1, select bank3
  6792  0C12  1703               	bsf	3,6	;RP1=1, select bank3
  6793  0C13  0825               	movf	(_val_rcv_lati+1)^(0+384),w
  6794  0C14  1283               	bcf	3,5	;RP0=0, select bank0
  6795  0C15  1303               	bcf	3,6	;RP1=0, select bank0
  6796  0C16  00AA               	movwf	?___altoft+1
  6797  0C17  1683               	bsf	3,5	;RP0=1, select bank3
  6798  0C18  1703               	bsf	3,6	;RP1=1, select bank3
  6799  0C19  0824               	movf	_val_rcv_lati^(0+384),w
  6800  0C1A  1283               	bcf	3,5	;RP0=0, select bank0
  6801  0C1B  1303               	bcf	3,6	;RP1=0, select bank0
  6802  0C1C  00A9               	movwf	?___altoft
  6803  0C1D  3029               	movlw	41
  6804  0C1E  07A9               	addwf	?___altoft,f
  6805  0C1F  30A3               	movlw	163
  6806  0C20  1803               	skipnc
  6807  0C21  30A4               	movlw	164
  6808  0C22  07AA               	addwf	?___altoft+1,f
  6809  0C23  30FE               	movlw	254
  6810  0C24  1803               	skipnc
  6811  0C25  30FF               	movlw	255
  6812  0C26  07AB               	addwf	?___altoft+2,f
  6813  0C27  30FF               	movlw	255
  6814  0C28  1C03               	skipc
  6815  0C29  07AC               	addwf	?___altoft+3,f
  6816  0C2A  120A  118A  27D1   	fcall	___altoft
      +       120A  158A         
  6817  0C2F  0829               	movf	?___altoft,w
  6818  0C30  1683               	bsf	3,5	;RP0=1, select bank1
  6819  0C31  00B1               	movwf	_Calc_DistanceLevel$3686^(0+128)
  6820  0C32  1283               	bcf	3,5	;RP0=0, select bank0
  6821  0C33  082A               	movf	?___altoft+1,w
  6822  0C34  1683               	bsf	3,5	;RP0=1, select bank1
  6823  0C35  00B2               	movwf	(_Calc_DistanceLevel$3686+1)^(0+128)
  6824  0C36  1283               	bcf	3,5	;RP0=0, select bank0
  6825  0C37  082B               	movf	?___altoft+2,w
  6826  0C38  1683               	bsf	3,5	;RP0=1, select bank1
  6827  0C39  00B3               	movwf	(_Calc_DistanceLevel$3686+2)^(0+128)
  6828                           
  6829                           ;Gps_recive.c: 118: unsigned char level;
  6830                           ;Gps_recive.c: 120: t = (unsigned int)sqrt(pow(val_rcv_longi - 65234, 2)+pow(val_rcv_lat
      +                          i-89303, 2));
  6831  0C3A  01A3               	clrf	(?_pow^(0+128)+3)
  6832  0C3B  01A4               	clrf	((?_pow+1)^(0+128)+3)
  6833  0C3C  3040               	movlw	64
  6834  0C3D  00A5               	movwf	((?_pow+2)^(0+128)+3)
  6835  0C3E  0831               	movf	_Calc_DistanceLevel$3686^(0+128),w
  6836  0C3F  00A0               	movwf	?_pow^(0+128)
  6837  0C40  0832               	movf	(_Calc_DistanceLevel$3686+1)^(0+128),w
  6838  0C41  00A1               	movwf	(?_pow+1)^(0+128)
  6839  0C42  0833               	movf	(_Calc_DistanceLevel$3686+2)^(0+128),w
  6840  0C43  00A2               	movwf	(?_pow+2)^(0+128)
  6841  0C44  120A  118A  2110   	fcall	_pow
      +       120A  158A         
  6842  0C49  0820               	movf	?_pow^(0+128),w
  6843  0C4A  00B4               	movwf	_Calc_DistanceLevel$3687^(0+128)
  6844  0C4B  0821               	movf	(?_pow+1)^(0+128),w
  6845  0C4C  00B5               	movwf	(_Calc_DistanceLevel$3687+1)^(0+128)
  6846  0C4D  0822               	movf	(?_pow+2)^(0+128),w
  6847  0C4E  00B6               	movwf	(_Calc_DistanceLevel$3687+2)^(0+128)
  6848                           
  6849                           ;Gps_recive.c: 118: unsigned char level;
  6850                           ;Gps_recive.c: 120: t = (unsigned int)sqrt(pow(val_rcv_longi - 65234, 2)+pow(val_rcv_lat
      +                          i-89303, 2));
  6851  0C4F  01A3               	clrf	(?_pow^(0+128)+3)
  6852  0C50  01A4               	clrf	((?_pow+1)^(0+128)+3)
  6853  0C51  3040               	movlw	64
  6854  0C52  00A5               	movwf	((?_pow+2)^(0+128)+3)
  6855  0C53  082E               	movf	_Calc_DistanceLevel$3685^(0+128),w
  6856  0C54  00A0               	movwf	?_pow^(0+128)
  6857  0C55  082F               	movf	(_Calc_DistanceLevel$3685+1)^(0+128),w
  6858  0C56  00A1               	movwf	(?_pow+1)^(0+128)
  6859  0C57  0830               	movf	(_Calc_DistanceLevel$3685+2)^(0+128),w
  6860  0C58  00A2               	movwf	(?_pow+2)^(0+128)
  6861  0C59  120A  118A  2110   	fcall	_pow
      +       120A  158A         
  6862  0C5E  0820               	movf	?_pow^(0+128),w
  6863  0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  6864  0C60  00B2               	movwf	?___ftadd+3
  6865  0C61  1683               	bsf	3,5	;RP0=1, select bank1
  6866  0C62  0821               	movf	(?_pow+1)^(0+128),w
  6867  0C63  1283               	bcf	3,5	;RP0=0, select bank0
  6868  0C64  00B3               	movwf	?___ftadd+4
  6869  0C65  1683               	bsf	3,5	;RP0=1, select bank1
  6870  0C66  0822               	movf	(?_pow+2)^(0+128),w
  6871  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  6872  0C68  00B4               	movwf	?___ftadd+5
  6873  0C69  1683               	bsf	3,5	;RP0=1, select bank1
  6874  0C6A  0834               	movf	_Calc_DistanceLevel$3687^(0+128),w
  6875  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  6876  0C6C  00AF               	movwf	?___ftadd
  6877  0C6D  1683               	bsf	3,5	;RP0=1, select bank1
  6878  0C6E  0835               	movf	(_Calc_DistanceLevel$3687+1)^(0+128),w
  6879  0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  6880  0C70  00B0               	movwf	?___ftadd+1
  6881  0C71  1683               	bsf	3,5	;RP0=1, select bank1
  6882  0C72  0836               	movf	(_Calc_DistanceLevel$3687+2)^(0+128),w
  6883  0C73  1283               	bcf	3,5	;RP0=0, select bank0
  6884  0C74  00B1               	movwf	?___ftadd+2
  6885  0C75  120A  118A  25DA   	fcall	___ftadd
      +       120A  158A         
  6886  0C7A  082F               	movf	?___ftadd,w
  6887  0C7B  00DE               	movwf	?_sqrt
  6888  0C7C  0830               	movf	?___ftadd+1,w
  6889  0C7D  00DF               	movwf	?_sqrt+1
  6890  0C7E  0831               	movf	?___ftadd+2,w
  6891  0C7F  00E0               	movwf	?_sqrt+2
  6892  0C80  120A  118A  24B9   	fcall	_sqrt
      +       120A  158A         
  6893  0C85  085E               	movf	?_sqrt,w
  6894  0C86  00F9               	movwf	?___fttol
  6895  0C87  085F               	movf	?_sqrt+1,w
  6896  0C88  00FA               	movwf	?___fttol+1
  6897  0C89  0860               	movf	?_sqrt+2,w
  6898  0C8A  00FB               	movwf	?___fttol+2
  6899  0C8B  120A  118A  2350   	fcall	___fttol
      +       120A  158A         
  6900  0C90  087A               	movf	?___fttol+1,w
  6901  0C91  1683               	bsf	3,5	;RP0=1, select bank1
  6902  0C92  00E4               	movwf	(_t+1)^(0+128)
  6903  0C93  0879               	movf	?___fttol,w
  6904  0C94  00E3               	movwf	_t^(0+128)
  6905                           
  6906                           ;Gps_recive.c: 121: level = (unsigned char)(t/1000);
  6907  0C95  30E8               	movlw	232
  6908  0C96  00F1               	movwf	?___lwdiv
  6909  0C97  3003               	movlw	3
  6910  0C98  00F2               	movwf	?___lwdiv+1
  6911  0C99  0864               	movf	(_t+1)^(0+128),w
  6912  0C9A  00F4               	movwf	?___lwdiv+3
  6913  0C9B  0863               	movf	_t^(0+128),w
  6914  0C9C  00F3               	movwf	?___lwdiv+2
  6915  0C9D  24A1               	fcall	___lwdiv
  6916  0C9E  0871               	movf	?___lwdiv,w
  6917  0C9F  00B7               	movwf	Calc_DistanceLevel@level^(0+128)
  6918                           
  6919                           ;Gps_recive.c: 122: return level;
  6920  0CA0  0008               	return
  6921  0CA1                     __end_of_Calc_DistanceLevel:	
  6922  0CA1                     __ptext1242:	
  6923 ;; =============== function ___ftpack ends ============
  6924                           
  6925                           
  6926 ;; *************** function ___lwdiv *****************
  6927 ;; Defined at:
  6928 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\lwdiv.c"
  6929 ;; Parameters:    Size  Location     Type
  6930 ;;  divisor         2    0[COMMON] unsigned int 
  6931 ;;  dividend        2    2[COMMON] unsigned int 
  6932 ;; Auto vars:     Size  Location     Type
  6933 ;;  quotient        2    4[COMMON] unsigned int 
  6934 ;;  counter         1    6[COMMON] unsigned char 
  6935 ;; Return value:  Size  Location     Type
  6936 ;;                  2    0[COMMON] unsigned int 
  6937 ;; Registers used:
  6938 ;;		wreg, status,2, status,0
  6939 ;; Tracked objects:
  6940 ;;		On entry : 60/20
  6941 ;;		On exit  : 60/20
  6942 ;;		Unchanged: FFF9F/0
  6943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6944 ;;      Params:         4       0       0       0       0
  6945 ;;      Locals:         3       0       0       0       0
  6946 ;;      Temps:          0       0       0       0       0
  6947 ;;      Totals:         7       0       0       0       0
  6948 ;;Total ram usage:        7 bytes
  6949 ;; Hardware stack levels used:    1
  6950 ;; This function calls:
  6951 ;;		Nothing
  6952 ;; This function is called by:
  6953 ;;		_Calc_DistanceLevel
  6954 ;; This function uses a non-reentrant model
  6955 ;;
  6956  0CA1                     ___lwdiv:	
  6957                           
  6958 ;; hardware stack exceeded
  6959                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6960  0CA1  01F5               	clrf	___lwdiv@quotient
  6961  0CA2  01F6               	clrf	___lwdiv@quotient+1
  6962  0CA3  0872               	movf	___lwdiv@divisor+1,w
  6963  0CA4  0471               	iorwf	___lwdiv@divisor,w
  6964  0CA5  1903               	skipnz
  6965  0CA6  2CC6               	goto	i1l9825
  6966  0CA7  01F7               	clrf	___lwdiv@counter
  6967  0CA8                     L8:	
  6968  0CA8  0AF7               	incf	___lwdiv@counter,f
  6969  0CA9  1BF2               	btfsc	___lwdiv@divisor+1,7
  6970  0CAA  2CAF               	goto	i1l9813
  6971  0CAB  1003               	clrc
  6972  0CAC  0DF1               	rlf	___lwdiv@divisor,f
  6973  0CAD  0DF2               	rlf	___lwdiv@divisor+1,f
  6974  0CAE  2CA8               	goto	L8
  6975  0CAF                     i1l9813:	
  6976  0CAF  1003               	clrc
  6977  0CB0  0DF5               	rlf	___lwdiv@quotient,f
  6978  0CB1  0DF6               	rlf	___lwdiv@quotient+1,f
  6979  0CB2  0872               	movf	___lwdiv@divisor+1,w
  6980  0CB3  0274               	subwf	___lwdiv@dividend+1,w
  6981  0CB4  1D03               	skipz
  6982  0CB5  2CB8               	goto	u302_25
  6983  0CB6  0871               	movf	___lwdiv@divisor,w
  6984  0CB7  0273               	subwf	___lwdiv@dividend,w
  6985  0CB8                     u302_25:	
  6986  0CB8  1C03               	skipc
  6987  0CB9  2CC2               	goto	L9
  6988  0CBA  0871               	movf	___lwdiv@divisor,w
  6989  0CBB  02F3               	subwf	___lwdiv@dividend,f
  6990  0CBC  0872               	movf	___lwdiv@divisor+1,w
  6991  0CBD  1C03               	skipc
  6992  0CBE  03F4               	decf	___lwdiv@dividend+1,f
  6993  0CBF  02F4               	subwf	___lwdiv@dividend+1,f
  6994  0CC0  1475               	bsf	___lwdiv@quotient,0
  6995  0CC1  1003               	clrc
  6996  0CC2                     L9:	
  6997  0CC2  0CF2               	rrf	___lwdiv@divisor+1,f
  6998  0CC3  0CF1               	rrf	___lwdiv@divisor,f
  6999  0CC4  0BF7               	decfsz	___lwdiv@counter,f
  7000  0CC5  2CAF               	goto	i1l9813
  7001  0CC6                     i1l9825:	
  7002  0CC6  0876               	movf	___lwdiv@quotient+1,w
  7003  0CC7  00F2               	movwf	?___lwdiv+1
  7004  0CC8  0875               	movf	___lwdiv@quotient,w
  7005  0CC9  00F1               	movwf	?___lwdiv
  7006  0CCA  0008               	return
  7007  0CCB                     __end_of___lwdiv:	
  7008                           
  7009                           	psect	text1215
  7010  0110                     __ptext1215:	
  7011 ;; =============== function _Calc_DistanceLevel ends ============
  7012                           
  7013                           
  7014 ;; *************** function _pow *****************
  7015 ;; Defined at:
  7016 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\pow.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;  x               3    0[BANK1 ] unsigned char 
  7019 ;;  y               3    3[BANK1 ] unsigned char 
  7020 ;; Auto vars:     Size  Location     Type
  7021 ;;  yi              4   10[BANK1 ] unsigned long 
  7022 ;;  sign            1    9[BANK1 ] unsigned char 
  7023 ;; Return value:  Size  Location     Type
  7024 ;;                  3    0[BANK1 ] unsigned char 
  7025 ;; Registers used:
  7026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7027 ;; Tracked objects:
  7028 ;;		On entry : 60/20
  7029 ;;		On exit  : 60/20
  7030 ;;		Unchanged: FFE00/0
  7031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7032 ;;      Params:         0       0       6       0       0
  7033 ;;      Locals:         0       0       8       0       0
  7034 ;;      Temps:          0       0       0       0       0
  7035 ;;      Totals:         0       0      14       0       0
  7036 ;;Total ram usage:       14 bytes
  7037 ;; Hardware stack levels used:    1
  7038 ;; Hardware stack levels required when called:    4
  7039 ;; This function calls:
  7040 ;;		___ftge
  7041 ;;		___fttol
  7042 ;;		___lltoft
  7043 ;;		___ftneg
  7044 ;;		_log
  7045 ;;		___ftmul
  7046 ;;		_exp
  7047 ;; This function is called by:
  7048 ;;		_Calc_DistanceLevel
  7049 ;; This function uses a non-reentrant model
  7050 ;;
  7051  0110                     _pow:	
  7052                           
  7053 ;; hardware stack exceeded
  7054                           ; Regs used in _pow: [allreg]
  7055  0110  01A9               	clrf	pow@sign^(0+128)
  7056  0111  0822               	movf	(pow@x+2)^(0+128),w
  7057  0112  0421               	iorwf	(pow@x+1)^(0+128),w
  7058  0113  0420               	iorwf	pow@x^(0+128),w
  7059  0114  1D03               	skipz
  7060  0115  2924               	goto	i1l9613
  7061  0116  01F1               	clrf	?___ftge
  7062  0117  01F2               	clrf	?___ftge+1
  7063  0118  01F3               	clrf	?___ftge+2
  7064  0119  0823               	movf	pow@y^(0+128),w
  7065  011A  00F4               	movwf	?___ftge+3
  7066  011B  0824               	movf	(pow@y+1)^(0+128),w
  7067  011C  00F5               	movwf	?___ftge+4
  7068  011D  0825               	movf	(pow@y+2)^(0+128),w
  7069  011E  00F6               	movwf	?___ftge+5
  7070  011F  2753               	fcall	___ftge
  7071  0120  01A0               	clrf	?_pow^(0+128)
  7072  0121  01A1               	clrf	(?_pow+1)^(0+128)
  7073  0122  01A2               	clrf	(?_pow+2)^(0+128)
  7074  0123  0008               	return
  7075  0124                     i1l9613:	
  7076  0124  0825               	movf	(pow@y+2)^(0+128),w
  7077  0125  0424               	iorwf	(pow@y+1)^(0+128),w
  7078  0126  0423               	iorwf	pow@y^(0+128),w
  7079  0127  1D03               	skipz
  7080  0128  292F               	goto	i1l9619
  7081  0129  01A0               	clrf	?_pow^(0+128)
  7082  012A  3080               	movlw	128
  7083  012B  00A1               	movwf	(?_pow+1)^(0+128)
  7084  012C  303F               	movlw	63
  7085  012D  00A2               	movwf	(?_pow+2)^(0+128)
  7086  012E  0008               	return
  7087  012F                     i1l9619:	
  7088  012F  0820               	movf	pow@x^(0+128),w
  7089  0130  00F1               	movwf	?___ftge
  7090  0131  0821               	movf	(pow@x+1)^(0+128),w
  7091  0132  00F2               	movwf	?___ftge+1
  7092  0133  0822               	movf	(pow@x+2)^(0+128),w
  7093  0134  00F3               	movwf	?___ftge+2
  7094  0135  01F4               	clrf	?___ftge+3
  7095  0136  01F5               	clrf	?___ftge+4
  7096  0137  01F6               	clrf	?___ftge+5
  7097  0138  2753  120A  118A   	fcall	___ftge
  7098  013B  1803               	btfsc	3,0
  7099  013C  297D               	goto	i1l9633
  7100  013D  0823               	movf	pow@y^(0+128),w
  7101  013E  00F9               	movwf	?___fttol
  7102  013F  0824               	movf	(pow@y+1)^(0+128),w
  7103  0140  00FA               	movwf	?___fttol+1
  7104  0141  0825               	movf	(pow@y+2)^(0+128),w
  7105  0142  00FB               	movwf	?___fttol+2
  7106  0143  2350               	fcall	___fttol
  7107  0144  087C               	movf	?___fttol+3,w
  7108  0145  1683               	bsf	3,5	;RP0=1, select bank1
  7109  0146  00AD               	movwf	(pow@yi+3)^(0+128)
  7110  0147  087B               	movf	?___fttol+2,w
  7111  0148  00AC               	movwf	(pow@yi+2)^(0+128)
  7112  0149  087A               	movf	?___fttol+1,w
  7113  014A  00AB               	movwf	(pow@yi+1)^(0+128)
  7114  014B  0879               	movf	?___fttol,w
  7115  014C  00AA               	movwf	pow@yi^(0+128)
  7116  014D  082D               	movf	(pow@yi+3)^(0+128),w
  7117  014E  00FC               	movwf	?___lltoft+3
  7118  014F  082C               	movf	(pow@yi+2)^(0+128),w
  7119  0150  00FB               	movwf	?___lltoft+2
  7120  0151  082B               	movf	(pow@yi+1)^(0+128),w
  7121  0152  00FA               	movwf	?___lltoft+1
  7122  0153  082A               	movf	pow@yi^(0+128),w
  7123  0154  00F9               	movwf	?___lltoft
  7124  0155  160A  118A  276B   	fcall	___lltoft
      +       120A  118A         
  7125  015A  0825               	movf	(pow@y+2)^(0+128),w
  7126  015B  067B               	xorwf	?___lltoft+2,w
  7127  015C  1D03               	skipz
  7128  015D  2964               	goto	u278_25
  7129  015E  0824               	movf	(pow@y+1)^(0+128),w
  7130  015F  067A               	xorwf	?___lltoft+1,w
  7131  0160  1D03               	skipz
  7132  0161  2964               	goto	u278_25
  7133  0162  0823               	movf	pow@y^(0+128),w
  7134  0163  0679               	xorwf	?___lltoft,w
  7135  0164                     u278_25:	
  7136  0164  1903               	skipnz
  7137  0165  296A               	goto	i1l9627
  7138  0166  01A0               	clrf	?_pow^(0+128)
  7139  0167  01A1               	clrf	(?_pow+1)^(0+128)
  7140  0168  01A2               	clrf	(?_pow+2)^(0+128)
  7141  0169  0008               	return
  7142  016A                     i1l9627:	
  7143  016A  082A               	movf	pow@yi^(0+128),w
  7144  016B  00A9               	movwf	pow@sign^(0+128)
  7145  016C  3001               	movlw	1
  7146  016D  05A9               	andwf	pow@sign^(0+128),f
  7147  016E  0820               	movf	pow@x^(0+128),w
  7148  016F  00F1               	movwf	?___ftneg
  7149  0170  0821               	movf	(pow@x+1)^(0+128),w
  7150  0171  00F2               	movwf	?___ftneg+1
  7151  0172  0822               	movf	(pow@x+2)^(0+128),w
  7152  0173  00F3               	movwf	?___ftneg+2
  7153  0174  23B2  120A  118A   	fcall	___ftneg
  7154  0177  0871               	movf	?___ftneg,w
  7155  0178  00A0               	movwf	pow@x^(0+128)
  7156  0179  0872               	movf	?___ftneg+1,w
  7157  017A  00A1               	movwf	(pow@x+1)^(0+128)
  7158  017B  0873               	movf	?___ftneg+2,w
  7159  017C  00A2               	movwf	(pow@x+2)^(0+128)
  7160  017D                     i1l9633:	
  7161  017D  0820               	movf	pow@x^(0+128),w
  7162  017E  1283               	bcf	3,5	;RP0=0, select bank0
  7163  017F  00D0               	movwf	?_log
  7164  0180  1683               	bsf	3,5	;RP0=1, select bank1
  7165  0181  0821               	movf	(pow@x+1)^(0+128),w
  7166  0182  1283               	bcf	3,5	;RP0=0, select bank0
  7167  0183  00D1               	movwf	?_log+1
  7168  0184  1683               	bsf	3,5	;RP0=1, select bank1
  7169  0185  0822               	movf	(pow@x+2)^(0+128),w
  7170  0186  1283               	bcf	3,5	;RP0=0, select bank0
  7171  0187  00D2               	movwf	?_log+2
  7172  0188  21D5  120A  118A   	fcall	_log
  7173  018B  0850               	movf	?_log,w
  7174  018C  1683               	bsf	3,5	;RP0=1, select bank1
  7175  018D  00A6               	movwf	_pow$3688^(0+128)
  7176  018E  1283               	bcf	3,5	;RP0=0, select bank0
  7177  018F  0851               	movf	?_log+1,w
  7178  0190  1683               	bsf	3,5	;RP0=1, select bank1
  7179  0191  00A7               	movwf	(_pow$3688+1)^(0+128)
  7180  0192  1283               	bcf	3,5	;RP0=0, select bank0
  7181  0193  0852               	movf	?_log+2,w
  7182  0194  1683               	bsf	3,5	;RP0=1, select bank1
  7183  0195  00A8               	movwf	(_pow$3688+2)^(0+128)
  7184  0196  0823               	movf	pow@y^(0+128),w
  7185  0197  1283               	bcf	3,5	;RP0=0, select bank0
  7186  0198  00A0               	movwf	?___ftmul
  7187  0199  1683               	bsf	3,5	;RP0=1, select bank1
  7188  019A  0824               	movf	(pow@y+1)^(0+128),w
  7189  019B  1283               	bcf	3,5	;RP0=0, select bank0
  7190  019C  00A1               	movwf	?___ftmul+1
  7191  019D  1683               	bsf	3,5	;RP0=1, select bank1
  7192  019E  0825               	movf	(pow@y+2)^(0+128),w
  7193  019F  1283               	bcf	3,5	;RP0=0, select bank0
  7194  01A0  00A2               	movwf	?___ftmul+2
  7195  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  7196  01A2  0826               	movf	_pow$3688^(0+128),w
  7197  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  7198  01A4  00A3               	movwf	?___ftmul+3
  7199  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  7200  01A6  0827               	movf	(_pow$3688+1)^(0+128),w
  7201  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  7202  01A8  00A4               	movwf	?___ftmul+4
  7203  01A9  1683               	bsf	3,5	;RP0=1, select bank1
  7204  01AA  0828               	movf	(_pow$3688+2)^(0+128),w
  7205  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  7206  01AC  00A5               	movwf	?___ftmul+5
  7207  01AD  269A  120A  118A   	fcall	___ftmul
  7208  01B0  0820               	movf	?___ftmul,w
  7209  01B1  00D5               	movwf	?_exp
  7210  01B2  0821               	movf	?___ftmul+1,w
  7211  01B3  00D6               	movwf	?_exp+1
  7212  01B4  0822               	movf	?___ftmul+2,w
  7213  01B5  00D7               	movwf	?_exp+2
  7214  01B6  225E  120A  118A   	fcall	_exp
  7215  01B9  0855               	movf	?_exp,w
  7216  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  7217  01BB  00A0               	movwf	pow@x^(0+128)
  7218  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  7219  01BD  0856               	movf	?_exp+1,w
  7220  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  7221  01BF  00A1               	movwf	(pow@x+1)^(0+128)
  7222  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  7223  01C1  0857               	movf	?_exp+2,w
  7224  01C2  1683               	bsf	3,5	;RP0=1, select bank1
  7225  01C3  00A2               	movwf	(pow@x+2)^(0+128)
  7226  01C4  0829               	movf	pow@sign^(0+128),w
  7227  01C5  1903               	btfsc	3,2
  7228  01C6  0008               	return
  7229  01C7  0820               	movf	pow@x^(0+128),w
  7230  01C8  00F1               	movwf	?___ftneg
  7231  01C9  0821               	movf	(pow@x+1)^(0+128),w
  7232  01CA  00F2               	movwf	?___ftneg+1
  7233  01CB  0822               	movf	(pow@x+2)^(0+128),w
  7234  01CC  00F3               	movwf	?___ftneg+2
  7235  01CD  23B2               	fcall	___ftneg
  7236  01CE  0871               	movf	?___ftneg,w
  7237  01CF  00A0               	movwf	?_pow^(0+128)
  7238  01D0  0872               	movf	?___ftneg+1,w
  7239  01D1  00A1               	movwf	(?_pow+1)^(0+128)
  7240  01D2  0873               	movf	?___ftneg+2,w
  7241  01D3  00A2               	movwf	(?_pow+2)^(0+128)
  7242  01D4  0008               	return
  7243  01D5                     __end_of_pow:	
  7244  01D5                     __ptext1217:	
  7245 ;; =============== function _exp ends ============
  7246                           
  7247                           
  7248 ;; *************** function _log *****************
  7249 ;; Defined at:
  7250 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\log.c"
  7251 ;; Parameters:    Size  Location     Type
  7252 ;;  x               3   48[BANK0 ] unsigned char 
  7253 ;; Auto vars:     Size  Location     Type
  7254 ;;  exp             2   51[BANK0 ] int 
  7255 ;; Return value:  Size  Location     Type
  7256 ;;                  3   48[BANK0 ] int 
  7257 ;; Registers used:
  7258 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7259 ;; Tracked objects:
  7260 ;;		On entry : 60/0
  7261 ;;		On exit  : 60/0
  7262 ;;		Unchanged: FFE9F/0
  7263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7264 ;;      Params:         0       3       0       0       0
  7265 ;;      Locals:         0       2       0       0       0
  7266 ;;      Temps:          0       0       0       0       0
  7267 ;;      Totals:         0       5       0       0       0
  7268 ;;Total ram usage:        5 bytes
  7269 ;; Hardware stack levels used:    1
  7270 ;; Hardware stack levels required when called:    3
  7271 ;; This function calls:
  7272 ;;		___ftge
  7273 ;;		_frexp
  7274 ;;		___ftmul
  7275 ;;		___ftadd
  7276 ;;		_eval_poly
  7277 ;;		___awtoft
  7278 ;; This function is called by:
  7279 ;;		_pow
  7280 ;; This function uses a non-reentrant model
  7281 ;;
  7282  01D5                     _log:	
  7283                           
  7284 ;; hardware stack exceeded
  7285                           ; Regs used in _log: [allreg]
  7286  01D5  0850               	movf	log@x,w
  7287  01D6  00F1               	movwf	?___ftge
  7288  01D7  0851               	movf	log@x+1,w
  7289  01D8  00F2               	movwf	?___ftge+1
  7290  01D9  0852               	movf	log@x+2,w
  7291  01DA  00F3               	movwf	?___ftge+2
  7292  01DB  01F4               	clrf	?___ftge+3
  7293  01DC  01F5               	clrf	?___ftge+4
  7294  01DD  01F6               	clrf	?___ftge+5
  7295  01DE  2753  120A  118A   	fcall	___ftge
  7296  01E1  1803               	btfsc	3,0
  7297  01E2  29E7               	goto	i1l9693
  7298  01E3  01D0               	clrf	?_log
  7299  01E4  01D1               	clrf	?_log+1
  7300  01E5  01D2               	clrf	?_log+2
  7301  01E6  0008               	return
  7302  01E7                     i1l9693:	
  7303  01E7  0852               	movf	log@x+2,w
  7304  01E8  0451               	iorwf	log@x+1,w
  7305  01E9  0450               	iorwf	log@x,w
  7306  01EA  1D03               	skipz
  7307  01EB  29F0               	goto	i1l9699
  7308  01EC  01D0               	clrf	?_log
  7309  01ED  01D1               	clrf	?_log+1
  7310  01EE  01D2               	clrf	?_log+2
  7311  01EF  0008               	return
  7312  01F0                     i1l9699:	
  7313  01F0  01AF               	clrf	?___ftadd
  7314  01F1  3080               	movlw	128
  7315  01F2  00B0               	movwf	?___ftadd+1
  7316  01F3  30BF               	movlw	191
  7317  01F4  00B1               	movwf	?___ftadd+2
  7318  01F5  01A0               	clrf	?___ftmul
  7319  01F6  01A1               	clrf	?___ftmul+1
  7320  01F7  3040               	movlw	64
  7321  01F8  00A2               	movwf	?___ftmul+2
  7322  01F9  3053               	movlw	log@exp& (0+255)
  7323  01FA  00F4               	movwf	?_frexp+3
  7324  01FB  0850               	movf	log@x,w
  7325  01FC  00F1               	movwf	?_frexp
  7326  01FD  0851               	movf	log@x+1,w
  7327  01FE  00F2               	movwf	?_frexp+1
  7328  01FF  0852               	movf	log@x+2,w
  7329  0200  00F3               	movwf	?_frexp+2
  7330  0201  2795  120A  118A   	fcall	_frexp
  7331  0204  0871               	movf	?_frexp,w
  7332  0205  00A3               	movwf	?___ftmul+3
  7333  0206  0872               	movf	?_frexp+1,w
  7334  0207  00A4               	movwf	?___ftmul+4
  7335  0208  0873               	movf	?_frexp+2,w
  7336  0209  00A5               	movwf	?___ftmul+5
  7337  020A  269A  120A  118A   	fcall	___ftmul
  7338  020D  0820               	movf	?___ftmul,w
  7339  020E  00B2               	movwf	?___ftadd+3
  7340  020F  0821               	movf	?___ftmul+1,w
  7341  0210  00B3               	movwf	?___ftadd+4
  7342  0211  0822               	movf	?___ftmul+2,w
  7343  0212  00B4               	movwf	?___ftadd+5
  7344  0213  25DA  120A  118A   	fcall	___ftadd
  7345  0216  082F               	movf	?___ftadd,w
  7346  0217  00D0               	movwf	log@x
  7347  0218  0830               	movf	?___ftadd+1,w
  7348  0219  00D1               	movwf	log@x+1
  7349  021A  0831               	movf	?___ftadd+2,w
  7350  021B  00D2               	movwf	log@x+2
  7351  021C  30FF               	movlw	-1
  7352  021D  07D3               	addwf	log@exp,f
  7353  021E  1C03               	skipc
  7354  021F  03D4               	decf	log@exp+1,f
  7355  0220  0850               	movf	log@x,w
  7356  0221  00C5               	movwf	?_eval_poly
  7357  0222  0851               	movf	log@x+1,w
  7358  0223  00C6               	movwf	?_eval_poly+1
  7359  0224  0852               	movf	log@x+2,w
  7360  0225  00C7               	movwf	?_eval_poly+2
  7361  0226  3029               	movlw	(log@coeff-__stringbase)& (0+255)
  7362  0227  00C8               	movwf	?_eval_poly+3
  7363  0228  3008               	movlw	8
  7364  0229  00C9               	movwf	?_eval_poly+4
  7365  022A  01CA               	clrf	?_eval_poly+5
  7366  022B  257C  120A  118A   	fcall	_eval_poly
  7367  022E  0845               	movf	?_eval_poly,w
  7368  022F  00D0               	movwf	log@x
  7369  0230  0846               	movf	?_eval_poly+1,w
  7370  0231  00D1               	movwf	log@x+1
  7371  0232  0847               	movf	?_eval_poly+2,w
  7372  0233  00D2               	movwf	log@x+2
  7373  0234  0850               	movf	log@x,w
  7374  0235  00AF               	movwf	?___ftadd
  7375  0236  0851               	movf	log@x+1,w
  7376  0237  00B0               	movwf	?___ftadd+1
  7377  0238  0852               	movf	log@x+2,w
  7378  0239  00B1               	movwf	?___ftadd+2
  7379  023A  3072               	movlw	114
  7380  023B  00A0               	movwf	?___ftmul
  7381  023C  3031               	movlw	49
  7382  023D  00A1               	movwf	?___ftmul+1
  7383  023E  303F               	movlw	63
  7384  023F  00A2               	movwf	?___ftmul+2
  7385  0240  0854               	movf	log@exp+1,w
  7386  0241  00FA               	movwf	?___awtoft+1
  7387  0242  0853               	movf	log@exp,w
  7388  0243  00F9               	movwf	?___awtoft
  7389  0244  23BA  120A  118A   	fcall	___awtoft
  7390  0247  0879               	movf	?___awtoft,w
  7391  0248  00A3               	movwf	?___ftmul+3
  7392  0249  087A               	movf	?___awtoft+1,w
  7393  024A  00A4               	movwf	?___ftmul+4
  7394  024B  087B               	movf	?___awtoft+2,w
  7395  024C  00A5               	movwf	?___ftmul+5
  7396  024D  269A  120A  118A   	fcall	___ftmul
  7397  0250  0820               	movf	?___ftmul,w
  7398  0251  00B2               	movwf	?___ftadd+3
  7399  0252  0821               	movf	?___ftmul+1,w
  7400  0253  00B3               	movwf	?___ftadd+4
  7401  0254  0822               	movf	?___ftmul+2,w
  7402  0255  00B4               	movwf	?___ftadd+5
  7403  0256  25DA               	fcall	___ftadd
  7404  0257  082F               	movf	?___ftadd,w
  7405  0258  00D0               	movwf	?_log
  7406  0259  0830               	movf	?___ftadd+1,w
  7407  025A  00D1               	movwf	?_log+1
  7408  025B  0831               	movf	?___ftadd+2,w
  7409  025C  00D2               	movwf	?_log+2
  7410  025D  0008               	return
  7411  025E                     __end_of_log:	
  7412  025E                     __ptext1216:	
  7413 ;; =============== function _pow ends ============
  7414                           
  7415                           
  7416 ;; *************** function _exp *****************
  7417 ;; Defined at:
  7418 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\exp.c"
  7419 ;; Parameters:    Size  Location     Type
  7420 ;;  x               3   53[BANK0 ] unsigned char 
  7421 ;; Auto vars:     Size  Location     Type
  7422 ;;  exp             2   59[BANK0 ] int 
  7423 ;;  sign            1   61[BANK0 ] unsigned char 
  7424 ;; Return value:  Size  Location     Type
  7425 ;;                  3   53[BANK0 ] unsigned char 
  7426 ;; Registers used:
  7427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7428 ;; Tracked objects:
  7429 ;;		On entry : 60/0
  7430 ;;		On exit  : 60/0
  7431 ;;		Unchanged: FFE00/0
  7432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7433 ;;      Params:         0       3       0       0       0
  7434 ;;      Locals:         0       6       0       0       0
  7435 ;;      Temps:          0       0       0       0       0
  7436 ;;      Totals:         0       9       0       0       0
  7437 ;;Total ram usage:        9 bytes
  7438 ;; Hardware stack levels used:    1
  7439 ;; Hardware stack levels required when called:    3
  7440 ;; This function calls:
  7441 ;;		___ftge
  7442 ;;		___ftneg
  7443 ;;		___ftmul
  7444 ;;		_floor
  7445 ;;		___fttol
  7446 ;;		___awtoft
  7447 ;;		___ftsub
  7448 ;;		_eval_poly
  7449 ;;		_ldexp
  7450 ;;		___ftdiv
  7451 ;; This function is called by:
  7452 ;;		_pow
  7453 ;; This function uses a non-reentrant model
  7454 ;;
  7455  025E                     _exp:	
  7456                           
  7457 ;; hardware stack exceeded
  7458                           ; Regs used in _exp: [allreg]
  7459  025E  0857               	movf	exp@x+2,w
  7460  025F  0456               	iorwf	exp@x+1,w
  7461  0260  0455               	iorwf	exp@x,w
  7462  0261  1D03               	skipz
  7463  0262  2A69               	goto	i1l9715
  7464  0263  01D5               	clrf	?_exp
  7465  0264  3080               	movlw	128
  7466  0265  00D6               	movwf	?_exp+1
  7467  0266  303F               	movlw	63
  7468  0267  00D7               	movwf	?_exp+2
  7469  0268  0008               	return
  7470  0269                     i1l9715:	
  7471  0269  3072               	movlw	114
  7472  026A  00F1               	movwf	?___ftge
  7473  026B  3031               	movlw	49
  7474  026C  00F2               	movwf	?___ftge+1
  7475  026D  3044               	movlw	68
  7476  026E  00F3               	movwf	?___ftge+2
  7477  026F  0855               	movf	exp@x,w
  7478  0270  00F4               	movwf	?___ftge+3
  7479  0271  0856               	movf	exp@x+1,w
  7480  0272  00F5               	movwf	?___ftge+4
  7481  0273  0857               	movf	exp@x+2,w
  7482  0274  00F6               	movwf	?___ftge+5
  7483  0275  2753  120A  118A   	fcall	___ftge
  7484  0278  1803               	btfsc	3,0
  7485  0279  2A80               	goto	i1l9725
  7486  027A  30FF               	movlw	255
  7487  027B  00D5               	movwf	?_exp
  7488  027C  307F               	movlw	127
  7489  027D  00D6               	movwf	?_exp+1
  7490  027E  00D7               	movwf	?_exp+2
  7491  027F  0008               	return
  7492  0280                     i1l9725:	
  7493  0280  0855               	movf	exp@x,w
  7494  0281  00F1               	movwf	?___ftge
  7495  0282  0856               	movf	exp@x+1,w
  7496  0283  00F2               	movwf	?___ftge+1
  7497  0284  0857               	movf	exp@x+2,w
  7498  0285  00F3               	movwf	?___ftge+2
  7499  0286  3049               	movlw	73
  7500  0287  00F4               	movwf	?___ftge+3
  7501  0288  303A               	movlw	58
  7502  0289  00F5               	movwf	?___ftge+4
  7503  028A  30C4               	movlw	196
  7504  028B  00F6               	movwf	?___ftge+5
  7505  028C  2753  120A  118A   	fcall	___ftge
  7506  028F  1803               	btfsc	3,0
  7507  0290  2A95               	goto	i1l9731
  7508  0291  01D5               	clrf	?_exp
  7509  0292  01D6               	clrf	?_exp+1
  7510  0293  01D7               	clrf	?_exp+2
  7511  0294  0008               	return
  7512  0295                     i1l9731:	
  7513  0295  0855               	movf	exp@x,w
  7514  0296  00F1               	movwf	?___ftge
  7515  0297  0856               	movf	exp@x+1,w
  7516  0298  00F2               	movwf	?___ftge+1
  7517  0299  0857               	movf	exp@x+2,w
  7518  029A  00F3               	movwf	?___ftge+2
  7519  029B  01F4               	clrf	?___ftge+3
  7520  029C  01F5               	clrf	?___ftge+4
  7521  029D  01F6               	clrf	?___ftge+5
  7522  029E  2753  120A  118A   	fcall	___ftge
  7523  02A1  3000               	movlw	0
  7524  02A2  1C03               	btfss	3,0
  7525  02A3  3001               	movlw	1
  7526  02A4  00DD               	movwf	exp@sign
  7527  02A5  085D               	movf	exp@sign,w
  7528  02A6  1903               	btfsc	3,2
  7529  02A7  2AB7               	goto	i1l9737
  7530  02A8  0855               	movf	exp@x,w
  7531  02A9  00F1               	movwf	?___ftneg
  7532  02AA  0856               	movf	exp@x+1,w
  7533  02AB  00F2               	movwf	?___ftneg+1
  7534  02AC  0857               	movf	exp@x+2,w
  7535  02AD  00F3               	movwf	?___ftneg+2
  7536  02AE  23B2  120A  118A   	fcall	___ftneg
  7537  02B1  0871               	movf	?___ftneg,w
  7538  02B2  00D5               	movwf	exp@x
  7539  02B3  0872               	movf	?___ftneg+1,w
  7540  02B4  00D6               	movwf	exp@x+1
  7541  02B5  0873               	movf	?___ftneg+2,w
  7542  02B6  00D7               	movwf	exp@x+2
  7543  02B7                     i1l9737:	
  7544  02B7  30AA               	movlw	170
  7545  02B8  00A0               	movwf	?___ftmul
  7546  02B9  30B8               	movlw	184
  7547  02BA  00A1               	movwf	?___ftmul+1
  7548  02BB  303F               	movlw	63
  7549  02BC  00A2               	movwf	?___ftmul+2
  7550  02BD  0855               	movf	exp@x,w
  7551  02BE  00A3               	movwf	?___ftmul+3
  7552  02BF  0856               	movf	exp@x+1,w
  7553  02C0  00A4               	movwf	?___ftmul+4
  7554  02C1  0857               	movf	exp@x+2,w
  7555  02C2  00A5               	movwf	?___ftmul+5
  7556  02C3  269A  120A  118A   	fcall	___ftmul
  7557  02C6  0820               	movf	?___ftmul,w
  7558  02C7  00D5               	movwf	exp@x
  7559  02C8  0821               	movf	?___ftmul+1,w
  7560  02C9  00D6               	movwf	exp@x+1
  7561  02CA  0822               	movf	?___ftmul+2,w
  7562  02CB  00D7               	movwf	exp@x+2
  7563  02CC  0855               	movf	exp@x,w
  7564  02CD  00BB               	movwf	?_floor
  7565  02CE  0856               	movf	exp@x+1,w
  7566  02CF  00BC               	movwf	?_floor+1
  7567  02D0  0857               	movf	exp@x+2,w
  7568  02D1  00BD               	movwf	?_floor+2
  7569  02D2  2449  120A  118A   	fcall	_floor
  7570  02D5  083B               	movf	?_floor,w
  7571  02D6  00F9               	movwf	?___fttol
  7572  02D7  083C               	movf	?_floor+1,w
  7573  02D8  00FA               	movwf	?___fttol+1
  7574  02D9  083D               	movf	?_floor+2,w
  7575  02DA  00FB               	movwf	?___fttol+2
  7576  02DB  2350  120A  118A   	fcall	___fttol
  7577  02DE  087A               	movf	?___fttol+1,w
  7578  02DF  00DC               	movwf	exp@exp+1
  7579  02E0  0879               	movf	?___fttol,w
  7580  02E1  00DB               	movwf	exp@exp
  7581  02E2  085C               	movf	exp@exp+1,w
  7582  02E3  00FA               	movwf	?___awtoft+1
  7583  02E4  085B               	movf	exp@exp,w
  7584  02E5  00F9               	movwf	?___awtoft
  7585  02E6  23BA  120A  118A   	fcall	___awtoft
  7586  02E9  0879               	movf	?___awtoft,w
  7587  02EA  00BB               	movwf	?___ftsub
  7588  02EB  087A               	movf	?___awtoft+1,w
  7589  02EC  00BC               	movwf	?___ftsub+1
  7590  02ED  087B               	movf	?___awtoft+2,w
  7591  02EE  00BD               	movwf	?___ftsub+2
  7592  02EF  0855               	movf	exp@x,w
  7593  02F0  00BE               	movwf	?___ftsub+3
  7594  02F1  0856               	movf	exp@x+1,w
  7595  02F2  00BF               	movwf	?___ftsub+4
  7596  02F3  0857               	movf	exp@x+2,w
  7597  02F4  00C0               	movwf	?___ftsub+5
  7598  02F5  277F  120A  118A   	fcall	___ftsub
  7599  02F8  083B               	movf	?___ftsub,w
  7600  02F9  00D5               	movwf	exp@x
  7601  02FA  083C               	movf	?___ftsub+1,w
  7602  02FB  00D6               	movwf	exp@x+1
  7603  02FC  083D               	movf	?___ftsub+2,w
  7604  02FD  00D7               	movwf	exp@x+2
  7605  02FE  0855               	movf	exp@x,w
  7606  02FF  00C5               	movwf	?_eval_poly
  7607  0300  0856               	movf	exp@x+1,w
  7608  0301  00C6               	movwf	?_eval_poly+1
  7609  0302  0857               	movf	exp@x+2,w
  7610  0303  00C7               	movwf	?_eval_poly+2
  7611  0304  300B               	movlw	(exp@coeff-__stringbase)& (0+255)
  7612  0305  00C8               	movwf	?_eval_poly+3
  7613  0306  3009               	movlw	9
  7614  0307  00C9               	movwf	?_eval_poly+4
  7615  0308  01CA               	clrf	?_eval_poly+5
  7616  0309  257C  120A  118A   	fcall	_eval_poly
  7617  030C  0845               	movf	?_eval_poly,w
  7618  030D  00BB               	movwf	?_ldexp
  7619  030E  0846               	movf	?_eval_poly+1,w
  7620  030F  00BC               	movwf	?_ldexp+1
  7621  0310  0847               	movf	?_eval_poly+2,w
  7622  0311  00BD               	movwf	?_ldexp+2
  7623  0312  085C               	movf	exp@exp+1,w
  7624  0313  00BF               	movwf	?_ldexp+4
  7625  0314  085B               	movf	exp@exp,w
  7626  0315  00BE               	movwf	?_ldexp+3
  7627  0316  23D5  120A  118A   	fcall	_ldexp
  7628  0319  083B               	movf	?_ldexp,w
  7629  031A  00D5               	movwf	exp@x
  7630  031B  083C               	movf	?_ldexp+1,w
  7631  031C  00D6               	movwf	exp@x+1
  7632  031D  083D               	movf	?_ldexp+2,w
  7633  031E  00D7               	movwf	exp@x+2
  7634  031F  085D               	movf	exp@sign,w
  7635  0320  1903               	btfsc	3,2
  7636  0321  0008               	return
  7637  0322  01D8               	clrf	_exp$3416
  7638  0323  3080               	movlw	128
  7639  0324  00D9               	movwf	_exp$3416+1
  7640  0325  307F               	movlw	127
  7641  0326  00DA               	movwf	_exp$3416+2
  7642  0327  30FF               	movlw	255
  7643  0328  00D8               	movwf	_exp$3416
  7644  0329  307F               	movlw	127
  7645  032A  00D9               	movwf	_exp$3416+1
  7646  032B  00DA               	movwf	_exp$3416+2
  7647  032C  0657               	xorwf	exp@x+2,w
  7648  032D  1D03               	skipz
  7649  032E  2B35               	goto	u292_25
  7650  032F  0856               	movf	exp@x+1,w
  7651  0330  0659               	xorwf	_exp$3416+1,w
  7652  0331  1D03               	skipz
  7653  0332  2B35               	goto	u292_25
  7654  0333  0855               	movf	exp@x,w
  7655  0334  0658               	xorwf	_exp$3416,w
  7656  0335                     u292_25:	
  7657  0335  1D03               	skipz
  7658  0336  2B3B               	goto	i1l9753
  7659  0337  01D5               	clrf	?_exp
  7660  0338  01D6               	clrf	?_exp+1
  7661  0339  01D7               	clrf	?_exp+2
  7662  033A  0008               	return
  7663  033B                     i1l9753:	
  7664  033B  0855               	movf	exp@x,w
  7665  033C  00A0               	movwf	?___ftdiv
  7666  033D  0856               	movf	exp@x+1,w
  7667  033E  00A1               	movwf	?___ftdiv+1
  7668  033F  0857               	movf	exp@x+2,w
  7669  0340  00A2               	movwf	?___ftdiv+2
  7670  0341  01A3               	clrf	?___ftdiv+3
  7671  0342  3080               	movlw	128
  7672  0343  00A4               	movwf	?___ftdiv+4
  7673  0344  303F               	movlw	63
  7674  0345  00A5               	movwf	?___ftdiv+5
  7675  0346  120A  158A  2007   	fcall	___ftdiv
  7676  0349  0820               	movf	?___ftdiv,w
  7677  034A  00D5               	movwf	?_exp
  7678  034B  0821               	movf	?___ftdiv+1,w
  7679  034C  00D6               	movwf	?_exp+1
  7680  034D  0822               	movf	?___ftdiv+2,w
  7681  034E  00D7               	movwf	?_exp+2
  7682  034F  0008               	return
  7683  0350                     __end_of_exp:	
  7684  0350                     __ptext1239:	
  7685 ;; =============== function ___ftneg ends ============
  7686                           
  7687                           
  7688 ;; *************** function ___fttol *****************
  7689 ;; Defined at:
  7690 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\fttol.c"
  7691 ;; Parameters:    Size  Location     Type
  7692 ;;  f1              3    8[COMMON] float 
  7693 ;; Auto vars:     Size  Location     Type
  7694 ;;  lval            4    4[BANK0 ] unsigned long 
  7695 ;;  exp1            1    8[BANK0 ] unsigned char 
  7696 ;;  sign1           1    3[BANK0 ] unsigned char 
  7697 ;; Return value:  Size  Location     Type
  7698 ;;                  4    8[COMMON] long 
  7699 ;; Registers used:
  7700 ;;		wreg, status,2, status,0
  7701 ;; Tracked objects:
  7702 ;;		On entry : 40/0
  7703 ;;		On exit  : 60/0
  7704 ;;		Unchanged: FFF9F/0
  7705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7706 ;;      Params:         4       0       0       0       0
  7707 ;;      Locals:         0       6       0       0       0
  7708 ;;      Temps:          0       3       0       0       0
  7709 ;;      Totals:         4       9       0       0       0
  7710 ;;Total ram usage:       13 bytes
  7711 ;; Hardware stack levels used:    1
  7712 ;; This function calls:
  7713 ;;		Nothing
  7714 ;; This function is called by:
  7715 ;;		_Calc_DistanceLevel
  7716 ;;		_pow
  7717 ;;		_exp
  7718 ;;		_floor
  7719 ;; This function uses a non-reentrant model
  7720 ;;
  7721  0350                     ___fttol:	
  7722                           
  7723 ;; hardware stack exceeded
  7724                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7725  0350  0879               	movf	___fttol@f1,w
  7726  0351  1283               	bcf	3,5	;RP0=0, select bank0
  7727  0352  00A0               	movwf	??___fttol
  7728  0353  087A               	movf	___fttol@f1+1,w
  7729  0354  00A1               	movwf	??___fttol+1
  7730  0355  087B               	movf	___fttol@f1+2,w
  7731  0356  00A2               	movwf	??___fttol+2
  7732  0357  1003               	clrc
  7733  0358  0D21               	rlf	??___fttol+1,w
  7734  0359  0D22               	rlf	??___fttol+2,w
  7735  035A  00A8               	movwf	___fttol@exp1
  7736  035B  08A8               	movf	___fttol@exp1,f
  7737  035C  1D03               	skipz
  7738  035D  2B63               	goto	i1l10057
  7739  035E                     i1l10055:	
  7740  035E  01F9               	clrf	?___fttol
  7741  035F  01FA               	clrf	?___fttol+1
  7742  0360  01FB               	clrf	?___fttol+2
  7743  0361  01FC               	clrf	?___fttol+3
  7744  0362  0008               	return
  7745  0363                     i1l10057:	
  7746  0363  0879               	movf	___fttol@f1,w
  7747  0364  00A0               	movwf	??___fttol
  7748  0365  087A               	movf	___fttol@f1+1,w
  7749  0366  00A1               	movwf	??___fttol+1
  7750  0367  087B               	movf	___fttol@f1+2,w
  7751  0368  00A2               	movwf	??___fttol+2
  7752  0369  3017               	movlw	23
  7753  036A                     u347_25:	
  7754  036A  1003               	clrc
  7755  036B  0CA2               	rrf	??___fttol+2,f
  7756  036C  0CA1               	rrf	??___fttol+1,f
  7757  036D  0CA0               	rrf	??___fttol,f
  7758  036E  3EFF               	addlw	-1
  7759  036F  1D03               	skipz
  7760  0370  2B6A               	goto	u347_25
  7761  0371  0820               	movf	??___fttol,w
  7762  0372  00A3               	movwf	___fttol@sign1
  7763  0373  17FA               	bsf	___fttol@f1+1,7
  7764  0374  01FB               	clrf	___fttol@f1+2
  7765  0375  0879               	movf	___fttol@f1,w
  7766  0376  00A4               	movwf	___fttol@lval
  7767  0377  087A               	movf	___fttol@f1+1,w
  7768  0378  00A5               	movwf	___fttol@lval+1
  7769  0379  087B               	movf	___fttol@f1+2,w
  7770  037A  00A6               	movwf	___fttol@lval+2
  7771  037B  01A7               	clrf	___fttol@lval+3
  7772  037C  308E               	movlw	142
  7773  037D  02A8               	subwf	___fttol@exp1,f
  7774  037E  1FA8               	btfss	___fttol@exp1,7
  7775  037F  2B8D               	goto	i1l10077
  7776  0380  0828               	movf	___fttol@exp1,w
  7777  0381  3A80               	xorlw	128
  7778  0382  3E8F               	addlw	143
  7779  0383  1C03               	btfss	3,0
  7780  0384  2B5E               	goto	i1l10055
  7781  0385                     i1l10073:	
  7782  0385  1003               	clrc
  7783  0386  0CA7               	rrf	___fttol@lval+3,f
  7784  0387  0CA6               	rrf	___fttol@lval+2,f
  7785  0388  0CA5               	rrf	___fttol@lval+1,f
  7786  0389  0CA4               	rrf	___fttol@lval,f
  7787  038A  0FA8               	incfsz	___fttol@exp1,f
  7788  038B  2B85               	goto	i1l10073
  7789  038C  2B9B               	goto	i1l10083
  7790  038D                     i1l10077:	
  7791  038D  3018               	movlw	24
  7792  038E  0228               	subwf	___fttol@exp1,w
  7793  038F  1803               	btfsc	3,0
  7794  0390  2B5E               	goto	i1l10055
  7795  0391                     i1l6243:	
  7796  0391  08A8               	movf	___fttol@exp1,f
  7797  0392  1903               	btfsc	3,2
  7798  0393  2B9B               	goto	i1l10083
  7799  0394  1003               	clrc
  7800  0395  0DA4               	rlf	___fttol@lval,f
  7801  0396  0DA5               	rlf	___fttol@lval+1,f
  7802  0397  0DA6               	rlf	___fttol@lval+2,f
  7803  0398  0DA7               	rlf	___fttol@lval+3,f
  7804  0399  03A8               	decf	___fttol@exp1,f
  7805  039A  2B91               	goto	i1l6243
  7806  039B                     i1l10083:	
  7807  039B  0823               	movf	___fttol@sign1,w
  7808  039C  1903               	btfsc	3,2
  7809  039D  2BA9               	goto	i1l10087
  7810  039E  09A4               	comf	___fttol@lval,f
  7811  039F  09A5               	comf	___fttol@lval+1,f
  7812  03A0  09A6               	comf	___fttol@lval+2,f
  7813  03A1  09A7               	comf	___fttol@lval+3,f
  7814  03A2  0AA4               	incf	___fttol@lval,f
  7815  03A3  1903               	skipnz
  7816  03A4  0AA5               	incf	___fttol@lval+1,f
  7817  03A5  1903               	skipnz
  7818  03A6  0AA6               	incf	___fttol@lval+2,f
  7819  03A7  1903               	skipnz
  7820  03A8  0AA7               	incf	___fttol@lval+3,f
  7821  03A9                     i1l10087:	
  7822  03A9  0827               	movf	___fttol@lval+3,w
  7823  03AA  00FC               	movwf	?___fttol+3
  7824  03AB  0826               	movf	___fttol@lval+2,w
  7825  03AC  00FB               	movwf	?___fttol+2
  7826  03AD  0825               	movf	___fttol@lval+1,w
  7827  03AE  00FA               	movwf	?___fttol+1
  7828  03AF  0824               	movf	___fttol@lval,w
  7829  03B0  00F9               	movwf	?___fttol
  7830  03B1  0008               	return
  7831  03B2                     __end_of___fttol:	
  7832  03B2                     __ptext1238:	
  7833 ;; =============== function ___ftge ends ============
  7834                           
  7835                           
  7836 ;; *************** function ___ftneg *****************
  7837 ;; Defined at:
  7838 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\ftneg.c"
  7839 ;; Parameters:    Size  Location     Type
  7840 ;;  f1              3    0[COMMON] float 
  7841 ;; Auto vars:     Size  Location     Type
  7842 ;;		None
  7843 ;; Return value:  Size  Location     Type
  7844 ;;                  3    0[COMMON] float 
  7845 ;; Registers used:
  7846 ;;		wreg
  7847 ;; Tracked objects:
  7848 ;;		On entry : 40/20
  7849 ;;		On exit  : 40/20
  7850 ;;		Unchanged: FFFBF/0
  7851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7852 ;;      Params:         3       0       0       0       0
  7853 ;;      Locals:         0       0       0       0       0
  7854 ;;      Temps:          0       0       0       0       0
  7855 ;;      Totals:         3       0       0       0       0
  7856 ;;Total ram usage:        3 bytes
  7857 ;; Hardware stack levels used:    1
  7858 ;; This function calls:
  7859 ;;		Nothing
  7860 ;; This function is called by:
  7861 ;;		_pow
  7862 ;;		_exp
  7863 ;;		_ldexp
  7864 ;; This function uses a non-reentrant model
  7865 ;;
  7866  03B2                     ___ftneg:	
  7867                           
  7868 ;; hardware stack exceeded
  7869                           ; Regs used in ___ftneg: [wreg]
  7870  03B2  0873               	movf	___ftneg@f1+2,w
  7871  03B3  0472               	iorwf	___ftneg@f1+1,w
  7872  03B4  0471               	iorwf	___ftneg@f1,w
  7873  03B5  1903               	skipnz
  7874  03B6  0008               	return
  7875  03B7  3080               	movlw	128
  7876  03B8  06F3               	xorwf	___ftneg@f1+2,f
  7877  03B9  0008               	return
  7878  03BA                     __end_of___ftneg:	
  7879  03BA                     __ptext1228:	
  7880 ;; =============== function ___altoft ends ============
  7881                           
  7882                           
  7883 ;; *************** function ___awtoft *****************
  7884 ;; Defined at:
  7885 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\awtoft.c"
  7886 ;; Parameters:    Size  Location     Type
  7887 ;;  c               2    8[COMMON] int 
  7888 ;; Auto vars:     Size  Location     Type
  7889 ;;  sign            1   11[COMMON] unsigned char 
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  3    8[COMMON] float 
  7892 ;; Registers used:
  7893 ;;		wreg, status,2, status,0, pclath, cstack
  7894 ;; Tracked objects:
  7895 ;;		On entry : 160/0
  7896 ;;		On exit  : 160/0
  7897 ;;		Unchanged: FFE9F/0
  7898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7899 ;;      Params:         3       0       0       0       0
  7900 ;;      Locals:         1       0       0       0       0
  7901 ;;      Temps:          0       0       0       0       0
  7902 ;;      Totals:         4       0       0       0       0
  7903 ;;Total ram usage:        4 bytes
  7904 ;; Hardware stack levels used:    1
  7905 ;; Hardware stack levels required when called:    1
  7906 ;; This function calls:
  7907 ;;		___ftpack
  7908 ;; This function is called by:
  7909 ;;		_exp
  7910 ;;		_log
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913  03BA                     ___awtoft:	
  7914                           
  7915 ;; hardware stack exceeded
  7916                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7917  03BA  01FC               	clrf	___awtoft@sign
  7918  03BB  1FFA               	btfss	___awtoft@c+1,7
  7919  03BC  2BC4               	goto	i1l10099
  7920  03BD  09F9               	comf	___awtoft@c,f
  7921  03BE  09FA               	comf	___awtoft@c+1,f
  7922  03BF  0AF9               	incf	___awtoft@c,f
  7923  03C0  1903               	skipnz
  7924  03C1  0AFA               	incf	___awtoft@c+1,f
  7925  03C2  01FC               	clrf	___awtoft@sign
  7926  03C3  0AFC               	incf	___awtoft@sign,f
  7927  03C4                     i1l10099:	
  7928  03C4  0879               	movf	___awtoft@c,w
  7929  03C5  00F1               	movwf	?___ftpack
  7930  03C6  087A               	movf	___awtoft@c+1,w
  7931  03C7  00F2               	movwf	?___ftpack+1
  7932  03C8  01F3               	clrf	?___ftpack+2
  7933  03C9  308E               	movlw	142
  7934  03CA  00F4               	movwf	?___ftpack+3
  7935  03CB  087C               	movf	___awtoft@sign,w
  7936  03CC  00F5               	movwf	?___ftpack+4
  7937  03CD  2715               	fcall	___ftpack
  7938  03CE  0871               	movf	?___ftpack,w
  7939  03CF  00F9               	movwf	?___awtoft
  7940  03D0  0872               	movf	?___ftpack+1,w
  7941  03D1  00FA               	movwf	?___awtoft+1
  7942  03D2  0873               	movf	?___ftpack+2,w
  7943  03D3  00FB               	movwf	?___awtoft+2
  7944  03D4  0008               	return
  7945  03D5                     __end_of___awtoft:	
  7946  03D5                     __ptext1225:	
  7947 ;; =============== function i1_Digitron_Command ends ============
  7948                           
  7949                           
  7950 ;; *************** function _ldexp *****************
  7951 ;; Defined at:
  7952 ;;		line 278 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\frexp.c"
  7953 ;; Parameters:    Size  Location     Type
  7954 ;;  value           3   27[BANK0 ] unsigned char 
  7955 ;;  newexp          2   30[BANK0 ] int 
  7956 ;; Auto vars:     Size  Location     Type
  7957 ;;		None
  7958 ;; Return value:  Size  Location     Type
  7959 ;;                  3   27[BANK0 ] int 
  7960 ;; Registers used:
  7961 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7962 ;; Tracked objects:
  7963 ;;		On entry : 160/0
  7964 ;;		On exit  : 60/0
  7965 ;;		Unchanged: FFE00/0
  7966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7967 ;;      Params:         0       5       0       0       0
  7968 ;;      Locals:         0       3       0       0       0
  7969 ;;      Temps:          0       2       0       0       0
  7970 ;;      Totals:         0      10       0       0       0
  7971 ;;Total ram usage:       10 bytes
  7972 ;; Hardware stack levels used:    1
  7973 ;; Hardware stack levels required when called:    1
  7974 ;; This function calls:
  7975 ;;		___ftge
  7976 ;;		___ftneg
  7977 ;; This function is called by:
  7978 ;;		_exp
  7979 ;; This function uses a non-reentrant model
  7980 ;;
  7981  03D5                     _ldexp:	
  7982                           
  7983 ;; hardware stack exceeded
  7984                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7985  03D5  083D               	movf	ldexp@value+2,w
  7986  03D6  043C               	iorwf	ldexp@value+1,w
  7987  03D7  043B               	iorwf	ldexp@value,w
  7988  03D8  1D03               	skipz
  7989  03D9  2BDE               	goto	i1l10201
  7990  03DA  01BB               	clrf	?_ldexp
  7991  03DB  01BC               	clrf	?_ldexp+1
  7992  03DC  01BD               	clrf	?_ldexp+2
  7993  03DD  0008               	return
  7994  03DE                     i1l10201:	
  7995  03DE  083D               	movf	ldexp@value+2,w
  7996  03DF  397F               	andlw	127
  7997  03E0  00C0               	movwf	??_ldexp
  7998  03E1  01C1               	clrf	??_ldexp+1
  7999  03E2  1003               	clrc
  8000  03E3  0DC0               	rlf	??_ldexp,f
  8001  03E4  0DC1               	rlf	??_ldexp+1,f
  8002  03E5  0840               	movf	??_ldexp,w
  8003  03E6  07BE               	addwf	ldexp@newexp,f
  8004  03E7  1803               	skipnc
  8005  03E8  0ABF               	incf	ldexp@newexp+1,f
  8006  03E9  0841               	movf	??_ldexp+1,w
  8007  03EA  07BF               	addwf	ldexp@newexp+1,f
  8008  03EB  0D3C               	rlf	ldexp@value+1,w
  8009  03EC  0D3C               	rlf	ldexp@value+1,w
  8010  03ED  3901               	andlw	1
  8011  03EE  07BE               	addwf	ldexp@newexp,f
  8012  03EF  1803               	skipnc
  8013  03F0  0ABF               	incf	ldexp@newexp+1,f
  8014  03F1  1FBF               	btfss	ldexp@newexp+1,7
  8015  03F2  2BF7               	goto	i1l10211
  8016  03F3  01BB               	clrf	?_ldexp
  8017  03F4  01BC               	clrf	?_ldexp+1
  8018  03F5  01BD               	clrf	?_ldexp+2
  8019  03F6  0008               	return
  8020  03F7                     i1l10211:	
  8021  03F7  083F               	movf	ldexp@newexp+1,w
  8022  03F8  3A80               	xorlw	128
  8023  03F9  00FF               	movwf	127
  8024  03FA  3081               	movlw	129
  8025  03FB  027F               	subwf	127,w
  8026  03FC  1D03               	skipz
  8027  03FD  2C00               	goto	u369_25
  8028  03FE  3000               	movlw	0
  8029  03FF  023E               	subwf	ldexp@newexp,w
  8030  0400                     u369_25:	
  8031  0400  1C03               	skipc
  8032  0401  2C30               	goto	i1l10229
  8033  0402  1283               	bcf	3,5	;RP0=0, select bank0
  8034  0403  1303               	bcf	3,6	;RP1=0, select bank0
  8035  0404  083B               	movf	ldexp@value,w
  8036  0405  00F1               	movwf	?___ftge
  8037  0406  083C               	movf	ldexp@value+1,w
  8038  0407  00F2               	movwf	?___ftge+1
  8039  0408  083D               	movf	ldexp@value+2,w
  8040  0409  00F3               	movwf	?___ftge+2
  8041  040A  01F4               	clrf	?___ftge+3
  8042  040B  01F5               	clrf	?___ftge+4
  8043  040C  01F6               	clrf	?___ftge+5
  8044  040D  2753  120A  118A   	fcall	___ftge
  8045  0410  1803               	btfsc	3,0
  8046  0411  2C2A               	goto	i1l10225
  8047  0412  01C2               	clrf	_ldexp$3469
  8048  0413  3080               	movlw	128
  8049  0414  00C3               	movwf	_ldexp$3469+1
  8050  0415  307F               	movlw	127
  8051  0416  00C4               	movwf	_ldexp$3469+2
  8052  0417  30FF               	movlw	255
  8053  0418  00C2               	movwf	_ldexp$3469
  8054  0419  307F               	movlw	127
  8055  041A  00C3               	movwf	_ldexp$3469+1
  8056  041B  00C4               	movwf	_ldexp$3469+2
  8057  041C  0842               	movf	_ldexp$3469,w
  8058  041D  00F1               	movwf	?___ftneg
  8059  041E  0843               	movf	_ldexp$3469+1,w
  8060  041F  00F2               	movwf	?___ftneg+1
  8061  0420  0844               	movf	_ldexp$3469+2,w
  8062  0421  00F3               	movwf	?___ftneg+2
  8063  0422  23B2               	fcall	___ftneg
  8064  0423  0871               	movf	?___ftneg,w
  8065  0424  00BB               	movwf	?_ldexp
  8066  0425  0872               	movf	?___ftneg+1,w
  8067  0426  00BC               	movwf	?_ldexp+1
  8068  0427  0873               	movf	?___ftneg+2,w
  8069  0428  00BD               	movwf	?_ldexp+2
  8070  0429  0008               	return
  8071  042A                     i1l10225:	
  8072  042A  30FF               	movlw	255
  8073  042B  00BB               	movwf	?_ldexp
  8074  042C  307F               	movlw	127
  8075  042D  00BC               	movwf	?_ldexp+1
  8076  042E  00BD               	movwf	?_ldexp+2
  8077  042F  0008               	return
  8078  0430                     i1l10229:	
  8079  0430  1283               	bcf	3,5	;RP0=0, select bank0
  8080  0431  1303               	bcf	3,6	;RP1=0, select bank0
  8081  0432  083F               	movf	ldexp@newexp+1,w
  8082  0433  00C1               	movwf	??_ldexp+1
  8083  0434  083E               	movf	ldexp@newexp,w
  8084  0435  00C0               	movwf	??_ldexp
  8085  0436  0D41               	rlf	??_ldexp+1,w
  8086  0437  0CC1               	rrf	??_ldexp+1,f
  8087  0438  0CC0               	rrf	??_ldexp,f
  8088  0439  083D               	movf	ldexp@value+2,w
  8089  043A  0640               	xorwf	??_ldexp,w
  8090  043B  3980               	andlw	-128
  8091  043C  0640               	xorwf	??_ldexp,w
  8092  043D  00BD               	movwf	ldexp@value+2
  8093  043E  083E               	movf	ldexp@newexp,w
  8094  043F  3901               	andlw	1
  8095  0440  00C0               	movwf	??_ldexp
  8096  0441  0CC0               	rrf	??_ldexp,f
  8097  0442  0CC0               	rrf	??_ldexp,f
  8098  0443  083C               	movf	ldexp@value+1,w
  8099  0444  0640               	xorwf	??_ldexp,w
  8100  0445  397F               	andlw	-129
  8101  0446  0640               	xorwf	??_ldexp,w
  8102  0447  00BC               	movwf	ldexp@value+1
  8103  0448  0008               	return
  8104  0449                     __end_of_ldexp:	
  8105  0449                     __ptext1222:	
  8106 ;; =============== function _eval_poly ends ============
  8107                           
  8108                           
  8109 ;; *************** function _floor *****************
  8110 ;; Defined at:
  8111 ;;		line 14 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\floor.c"
  8112 ;; Parameters:    Size  Location     Type
  8113 ;;  x               3   27[BANK0 ] int 
  8114 ;; Auto vars:     Size  Location     Type
  8115 ;;  i               3   30[BANK0 ] int 
  8116 ;;  expon           2   33[BANK0 ] int 
  8117 ;; Return value:  Size  Location     Type
  8118 ;;                  3   27[BANK0 ] int 
  8119 ;; Registers used:
  8120 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8121 ;; Tracked objects:
  8122 ;;		On entry : 60/0
  8123 ;;		On exit  : 160/0
  8124 ;;		Unchanged: FFE9F/0
  8125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8126 ;;      Params:         0       3       0       0       0
  8127 ;;      Locals:         0       5       0       0       0
  8128 ;;      Temps:          0       0       0       0       0
  8129 ;;      Totals:         0       8       0       0       0
  8130 ;;Total ram usage:        8 bytes
  8131 ;; Hardware stack levels used:    1
  8132 ;; Hardware stack levels required when called:    2
  8133 ;; This function calls:
  8134 ;;		_frexp
  8135 ;;		___ftge
  8136 ;;		___fttol
  8137 ;;		___altoft
  8138 ;;		___ftadd
  8139 ;; This function is called by:
  8140 ;;		_exp
  8141 ;; This function uses a non-reentrant model
  8142 ;;
  8143  0449                     _floor:	
  8144                           
  8145 ;; hardware stack exceeded
  8146                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8147  0449  083B               	movf	floor@x,w
  8148  044A  00F1               	movwf	?_frexp
  8149  044B  083C               	movf	floor@x+1,w
  8150  044C  00F2               	movwf	?_frexp+1
  8151  044D  083D               	movf	floor@x+2,w
  8152  044E  00F3               	movwf	?_frexp+2
  8153  044F  3041               	movlw	floor@expon& (0+255)
  8154  0450  00F4               	movwf	?_frexp+3
  8155  0451  2795  120A  118A   	fcall	_frexp
  8156  0454  1FC2               	btfss	floor@expon+1,7
  8157  0455  2C6D               	goto	i1l10171
  8158  0456  083B               	movf	floor@x,w
  8159  0457  00F1               	movwf	?___ftge
  8160  0458  083C               	movf	floor@x+1,w
  8161  0459  00F2               	movwf	?___ftge+1
  8162  045A  083D               	movf	floor@x+2,w
  8163  045B  00F3               	movwf	?___ftge+2
  8164  045C  01F4               	clrf	?___ftge+3
  8165  045D  01F5               	clrf	?___ftge+4
  8166  045E  01F6               	clrf	?___ftge+5
  8167  045F  2753  120A  118A   	fcall	___ftge
  8168  0462  01BB               	clrf	?_floor
  8169  0463  1803               	btfsc	3,0
  8170  0464  2C6A               	goto	L4
  8171  0465  3080               	movlw	128
  8172  0466  00BC               	movwf	?_floor+1
  8173  0467  30BF               	movlw	191
  8174  0468  00BD               	movwf	?_floor+2
  8175  0469  0008               	return
  8176  046A                     L4:	
  8177  046A  01BC               	clrf	?_floor+1
  8178  046B  01BD               	clrf	?_floor+2
  8179  046C  0008               	return
  8180  046D                     i1l10171:	
  8181  046D  3000               	movlw	0
  8182  046E  0242               	subwf	floor@expon+1,w
  8183  046F  3015               	movlw	21
  8184  0470  1903               	skipnz
  8185  0471  0241               	subwf	floor@expon,w
  8186  0472  1803               	btfsc	3,0
  8187  0473  0008               	return
  8188  0474  083B               	movf	floor@x,w
  8189  0475  00F9               	movwf	?___fttol
  8190  0476  083C               	movf	floor@x+1,w
  8191  0477  00FA               	movwf	?___fttol+1
  8192  0478  083D               	movf	floor@x+2,w
  8193  0479  00FB               	movwf	?___fttol+2
  8194  047A  2350  120A  118A   	fcall	___fttol
  8195  047D  087C               	movf	?___fttol+3,w
  8196  047E  00AC               	movwf	?___altoft+3
  8197  047F  087B               	movf	?___fttol+2,w
  8198  0480  00AB               	movwf	?___altoft+2
  8199  0481  087A               	movf	?___fttol+1,w
  8200  0482  00AA               	movwf	?___altoft+1
  8201  0483  0879               	movf	?___fttol,w
  8202  0484  00A9               	movwf	?___altoft
  8203  0485  27D1  120A  118A   	fcall	___altoft
  8204  0488  0829               	movf	?___altoft,w
  8205  0489  00BE               	movwf	floor@i
  8206  048A  082A               	movf	?___altoft+1,w
  8207  048B  00BF               	movwf	floor@i+1
  8208  048C  082B               	movf	?___altoft+2,w
  8209  048D  00C0               	movwf	floor@i+2
  8210  048E  083B               	movf	floor@x,w
  8211  048F  00F1               	movwf	?___ftge
  8212  0490  083C               	movf	floor@x+1,w
  8213  0491  00F2               	movwf	?___ftge+1
  8214  0492  083D               	movf	floor@x+2,w
  8215  0493  00F3               	movwf	?___ftge+2
  8216  0494  083E               	movf	floor@i,w
  8217  0495  00F4               	movwf	?___ftge+3
  8218  0496  083F               	movf	floor@i+1,w
  8219  0497  00F5               	movwf	?___ftge+4
  8220  0498  0840               	movf	floor@i+2,w
  8221  0499  00F6               	movwf	?___ftge+5
  8222  049A  2753  120A  118A   	fcall	___ftge
  8223  049D  1803               	btfsc	3,0
  8224  049E  2CB2               	goto	i1l10181
  8225  049F  01AF               	clrf	?___ftadd
  8226  04A0  3080               	movlw	128
  8227  04A1  00B0               	movwf	?___ftadd+1
  8228  04A2  30BF               	movlw	191
  8229  04A3  00B1               	movwf	?___ftadd+2
  8230  04A4  083E               	movf	floor@i,w
  8231  04A5  00B2               	movwf	?___ftadd+3
  8232  04A6  083F               	movf	floor@i+1,w
  8233  04A7  00B3               	movwf	?___ftadd+4
  8234  04A8  0840               	movf	floor@i+2,w
  8235  04A9  00B4               	movwf	?___ftadd+5
  8236  04AA  25DA               	fcall	___ftadd
  8237  04AB  082F               	movf	?___ftadd,w
  8238  04AC  00BB               	movwf	?_floor
  8239  04AD  0830               	movf	?___ftadd+1,w
  8240  04AE  00BC               	movwf	?_floor+1
  8241  04AF  0831               	movf	?___ftadd+2,w
  8242  04B0  00BD               	movwf	?_floor+2
  8243  04B1  0008               	return
  8244  04B2                     i1l10181:	
  8245  04B2  083E               	movf	floor@i,w
  8246  04B3  00BB               	movwf	?_floor
  8247  04B4  083F               	movf	floor@i+1,w
  8248  04B5  00BC               	movwf	?_floor+1
  8249  04B6  0840               	movf	floor@i+2,w
  8250  04B7  00BD               	movwf	?_floor+2
  8251  04B8  0008               	return
  8252  04B9                     __end_of_floor:	
  8253  04B9                     __ptext1218:	
  8254 ;; =============== function _log ends ============
  8255                           
  8256                           
  8257 ;; *************** function _sqrt *****************
  8258 ;; Defined at:
  8259 ;;		line 14 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\sqrt.c"
  8260 ;; Parameters:    Size  Location     Type
  8261 ;;  y               3   62[BANK0 ] int 
  8262 ;; Auto vars:     Size  Location     Type
  8263 ;;  x               3   75[BANK0 ] int 
  8264 ;;  q               3   72[BANK0 ] int 
  8265 ;;  z               3   68[BANK0 ] int 
  8266 ;;  og              3    0        int 
  8267 ;;  i               1   71[BANK0 ] unsigned char 
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  3   62[BANK0 ] unsigned char 
  8270 ;; Registers used:
  8271 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8272 ;; Tracked objects:
  8273 ;;		On entry : 60/0
  8274 ;;		On exit  : 60/0
  8275 ;;		Unchanged: FFF9F/0
  8276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8277 ;;      Params:         0       3       0       0       0
  8278 ;;      Locals:         0      10       0       0       0
  8279 ;;      Temps:          0       3       0       0       0
  8280 ;;      Totals:         0      16       0       0       0
  8281 ;;Total ram usage:       16 bytes
  8282 ;; Hardware stack levels used:    1
  8283 ;; Hardware stack levels required when called:    3
  8284 ;; This function calls:
  8285 ;;		___ftge
  8286 ;;		___ftmul
  8287 ;;		___ftsub
  8288 ;; This function is called by:
  8289 ;;		_Calc_DistanceLevel
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292  04B9                     _sqrt:	
  8293                           
  8294 ;; hardware stack exceeded
  8295                           ; Regs used in _sqrt: [allreg]
  8296  04B9  01F1               	clrf	?___ftge
  8297  04BA  01F2               	clrf	?___ftge+1
  8298  04BB  01F3               	clrf	?___ftge+2
  8299  04BC  085E               	movf	sqrt@y,w
  8300  04BD  00F4               	movwf	?___ftge+3
  8301  04BE  085F               	movf	sqrt@y+1,w
  8302  04BF  00F5               	movwf	?___ftge+4
  8303  04C0  0860               	movf	sqrt@y+2,w
  8304  04C1  00F6               	movwf	?___ftge+5
  8305  04C2  2753  120A  118A   	fcall	___ftge
  8306  04C5  085E               	movf	sqrt@y,w
  8307  04C6  1C03               	btfss	3,0
  8308  04C7  2CD5               	goto	L2
  8309  04C8  00F1               	movwf	?___ftge
  8310  04C9  085F               	movf	sqrt@y+1,w
  8311  04CA  00F2               	movwf	?___ftge+1
  8312  04CB  0860               	movf	sqrt@y+2,w
  8313  04CC  00F3               	movwf	?___ftge+2
  8314  04CD  01F4               	clrf	?___ftge+3
  8315  04CE  01F5               	clrf	?___ftge+4
  8316  04CF  01F6               	clrf	?___ftge+5
  8317  04D0  2753               	fcall	___ftge
  8318  04D1  01DE               	clrf	?_sqrt
  8319  04D2  01DF               	clrf	?_sqrt+1
  8320  04D3  01E0               	clrf	?_sqrt+2
  8321  04D4  0008               	return
  8322  04D5                     L2:	
  8323  04D5  00E4               	movwf	sqrt@z
  8324  04D6  085F               	movf	sqrt@y+1,w
  8325  04D7  00E5               	movwf	sqrt@z+1
  8326  04D8  0860               	movf	sqrt@y+2,w
  8327  04D9  00E6               	movwf	sqrt@z+2
  8328  04DA  30C8               	movlw	200
  8329  04DB  00EB               	movwf	sqrt@x
  8330  04DC  306E               	movlw	110
  8331  04DD  00EC               	movwf	sqrt@x+1
  8332  04DE  30BE               	movlw	190
  8333  04DF  00ED               	movwf	sqrt@x+2
  8334  04E0  085E               	movf	sqrt@y,w
  8335  04E1  02EB               	subwf	sqrt@x,f
  8336  04E2  085F               	movf	sqrt@y+1,w
  8337  04E3  1C03               	skipc
  8338  04E4  0F5F               	incfsz	sqrt@y+1,w
  8339  04E5  02EC               	subwf	sqrt@x+1,f
  8340  04E6  0860               	movf	sqrt@y+2,w
  8341  04E7  1C03               	skipc
  8342  04E8  0A60               	incf	sqrt@y+2,w
  8343  04E9  02ED               	subwf	sqrt@x+2,f
  8344  04EA  1003               	clrc
  8345  04EB  0CED               	rrf	sqrt@x+2,f
  8346  04EC  0CEC               	rrf	sqrt@x+1,f
  8347  04ED  0CEB               	rrf	sqrt@x,f
  8348  04EE  01E1               	clrf	??_sqrt
  8349  04EF  3080               	movlw	128
  8350  04F0  00E2               	movwf	??_sqrt+1
  8351  04F1  01E3               	clrf	??_sqrt+2
  8352  04F2  0861               	movf	??_sqrt,w
  8353  04F3  02E4               	subwf	sqrt@z,f
  8354  04F4  0862               	movf	??_sqrt+1,w
  8355  04F5  1C03               	skipc
  8356  04F6  0F62               	incfsz	??_sqrt+1,w
  8357  04F7  02E5               	subwf	sqrt@z+1,f
  8358  04F8  0863               	movf	??_sqrt+2,w
  8359  04F9  1C03               	skipc
  8360  04FA  0A63               	incf	??_sqrt+2,w
  8361  04FB  02E6               	subwf	sqrt@z+2,f
  8362  04FC  3004               	movlw	4
  8363  04FD  00E7               	movwf	sqrt@i
  8364  04FE                     i1l9659:	
  8365  04FE  0864               	movf	sqrt@z,w
  8366  04FF  00A0               	movwf	?___ftmul
  8367  0500  0865               	movf	sqrt@z+1,w
  8368  0501  00A1               	movwf	?___ftmul+1
  8369  0502  0866               	movf	sqrt@z+2,w
  8370  0503  00A2               	movwf	?___ftmul+2
  8371  0504  086B               	movf	sqrt@x,w
  8372  0505  00A3               	movwf	?___ftmul+3
  8373  0506  086C               	movf	sqrt@x+1,w
  8374  0507  00A4               	movwf	?___ftmul+4
  8375  0508  086D               	movf	sqrt@x+2,w
  8376  0509  00A5               	movwf	?___ftmul+5
  8377  050A  269A  120A  118A   	fcall	___ftmul
  8378  050D  0820               	movf	?___ftmul,w
  8379  050E  00E8               	movwf	sqrt@q
  8380  050F  0821               	movf	?___ftmul+1,w
  8381  0510  00E9               	movwf	sqrt@q+1
  8382  0511  0822               	movf	?___ftmul+2,w
  8383  0512  00EA               	movwf	sqrt@q+2
  8384  0513  086B               	movf	sqrt@x,w
  8385  0514  00A0               	movwf	?___ftmul
  8386  0515  086C               	movf	sqrt@x+1,w
  8387  0516  00A1               	movwf	?___ftmul+1
  8388  0517  086D               	movf	sqrt@x+2,w
  8389  0518  00A2               	movwf	?___ftmul+2
  8390  0519  0868               	movf	sqrt@q,w
  8391  051A  00A3               	movwf	?___ftmul+3
  8392  051B  0869               	movf	sqrt@q+1,w
  8393  051C  00A4               	movwf	?___ftmul+4
  8394  051D  086A               	movf	sqrt@q+2,w
  8395  051E  00A5               	movwf	?___ftmul+5
  8396  051F  269A  120A  118A   	fcall	___ftmul
  8397  0522  0820               	movf	?___ftmul,w
  8398  0523  00E8               	movwf	sqrt@q
  8399  0524  0821               	movf	?___ftmul+1,w
  8400  0525  00E9               	movwf	sqrt@q+1
  8401  0526  0822               	movf	?___ftmul+2,w
  8402  0527  00EA               	movwf	sqrt@q+2
  8403  0528  086B               	movf	sqrt@x,w
  8404  0529  00A0               	movwf	?___ftmul
  8405  052A  086C               	movf	sqrt@x+1,w
  8406  052B  00A1               	movwf	?___ftmul+1
  8407  052C  086D               	movf	sqrt@x+2,w
  8408  052D  00A2               	movwf	?___ftmul+2
  8409  052E  0868               	movf	sqrt@q,w
  8410  052F  00A3               	movwf	?___ftmul+3
  8411  0530  0869               	movf	sqrt@q+1,w
  8412  0531  00A4               	movwf	?___ftmul+4
  8413  0532  086A               	movf	sqrt@q+2,w
  8414  0533  00A5               	movwf	?___ftmul+5
  8415  0534  269A  120A  118A   	fcall	___ftmul
  8416  0537  0820               	movf	?___ftmul,w
  8417  0538  00E8               	movwf	sqrt@q
  8418  0539  0821               	movf	?___ftmul+1,w
  8419  053A  00E9               	movwf	sqrt@q+1
  8420  053B  0822               	movf	?___ftmul+2,w
  8421  053C  00EA               	movwf	sqrt@q+2
  8422  053D  01A0               	clrf	?___ftmul
  8423  053E  30C0               	movlw	192
  8424  053F  00A1               	movwf	?___ftmul+1
  8425  0540  303F               	movlw	63
  8426  0541  00A2               	movwf	?___ftmul+2
  8427  0542  086B               	movf	sqrt@x,w
  8428  0543  00A3               	movwf	?___ftmul+3
  8429  0544  086C               	movf	sqrt@x+1,w
  8430  0545  00A4               	movwf	?___ftmul+4
  8431  0546  086D               	movf	sqrt@x+2,w
  8432  0547  00A5               	movwf	?___ftmul+5
  8433  0548  269A  120A  118A   	fcall	___ftmul
  8434  054B  0820               	movf	?___ftmul,w
  8435  054C  00EB               	movwf	sqrt@x
  8436  054D  0821               	movf	?___ftmul+1,w
  8437  054E  00EC               	movwf	sqrt@x+1
  8438  054F  0822               	movf	?___ftmul+2,w
  8439  0550  00ED               	movwf	sqrt@x+2
  8440  0551  0868               	movf	sqrt@q,w
  8441  0552  00BB               	movwf	?___ftsub
  8442  0553  0869               	movf	sqrt@q+1,w
  8443  0554  00BC               	movwf	?___ftsub+1
  8444  0555  086A               	movf	sqrt@q+2,w
  8445  0556  00BD               	movwf	?___ftsub+2
  8446  0557  086B               	movf	sqrt@x,w
  8447  0558  00BE               	movwf	?___ftsub+3
  8448  0559  086C               	movf	sqrt@x+1,w
  8449  055A  00BF               	movwf	?___ftsub+4
  8450  055B  086D               	movf	sqrt@x+2,w
  8451  055C  00C0               	movwf	?___ftsub+5
  8452  055D  277F  120A  118A   	fcall	___ftsub
  8453  0560  083B               	movf	?___ftsub,w
  8454  0561  00EB               	movwf	sqrt@x
  8455  0562  083C               	movf	?___ftsub+1,w
  8456  0563  00EC               	movwf	sqrt@x+1
  8457  0564  083D               	movf	?___ftsub+2,w
  8458  0565  00ED               	movwf	sqrt@x+2
  8459  0566  0BE7               	decfsz	sqrt@i,f
  8460  0567  2CFE               	goto	i1l9659
  8461  0568  085E               	movf	sqrt@y,w
  8462  0569  00A0               	movwf	?___ftmul
  8463  056A  085F               	movf	sqrt@y+1,w
  8464  056B  00A1               	movwf	?___ftmul+1
  8465  056C  0860               	movf	sqrt@y+2,w
  8466  056D  00A2               	movwf	?___ftmul+2
  8467  056E  086B               	movf	sqrt@x,w
  8468  056F  00A3               	movwf	?___ftmul+3
  8469  0570  086C               	movf	sqrt@x+1,w
  8470  0571  00A4               	movwf	?___ftmul+4
  8471  0572  086D               	movf	sqrt@x+2,w
  8472  0573  00A5               	movwf	?___ftmul+5
  8473  0574  269A               	fcall	___ftmul
  8474  0575  0820               	movf	?___ftmul,w
  8475  0576  00DE               	movwf	?_sqrt
  8476  0577  0821               	movf	?___ftmul+1,w
  8477  0578  00DF               	movwf	?_sqrt+1
  8478  0579  0822               	movf	?___ftmul+2,w
  8479  057A  00E0               	movwf	?_sqrt+2
  8480  057B  0008               	return
  8481  057C                     __end_of_sqrt:	
  8482  057C                     __ptext1221:	
  8483 ;; =============== function i1_Digitron_Display ends ============
  8484                           
  8485                           
  8486 ;; *************** function _eval_poly *****************
  8487 ;; Defined at:
  8488 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\evalpoly.c"
  8489 ;; Parameters:    Size  Location     Type
  8490 ;;  x               3   37[BANK0 ] unsigned char 
  8491 ;;  d               1   40[BANK0 ] PTR const 
  8492 ;;		 -> log@coeff(27), exp@coeff(30), 
  8493 ;;  n               2   41[BANK0 ] int 
  8494 ;; Auto vars:     Size  Location     Type
  8495 ;;  res             3   45[BANK0 ] int 
  8496 ;; Return value:  Size  Location     Type
  8497 ;;                  3   37[BANK0 ] int 
  8498 ;; Registers used:
  8499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8500 ;; Tracked objects:
  8501 ;;		On entry : 160/0
  8502 ;;		On exit  : 160/0
  8503 ;;		Unchanged: FFE9F/0
  8504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8505 ;;      Params:         0       6       0       0       0
  8506 ;;      Locals:         0       3       0       0       0
  8507 ;;      Temps:          0       2       0       0       0
  8508 ;;      Totals:         0      11       0       0       0
  8509 ;;Total ram usage:       11 bytes
  8510 ;; Hardware stack levels used:    1
  8511 ;; Hardware stack levels required when called:    2
  8512 ;; This function calls:
  8513 ;;		___ftmul
  8514 ;;		___ftadd
  8515 ;; This function is called by:
  8516 ;;		_exp
  8517 ;;		_log
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520  057C                     _eval_poly:	
  8521                           
  8522 ;; hardware stack exceeded
  8523                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8524  057C  0849               	movf	eval_poly@n,w
  8525  057D  0749               	addwf	eval_poly@n,w
  8526  057E  0749               	addwf	eval_poly@n,w
  8527  057F  0748               	addwf	eval_poly@d,w
  8528  0580  0084               	movwf	4
  8529  0581  120A  118A  2021   	fcall	stringdir
      +       120A  118A         
  8530  0586  00CD               	movwf	eval_poly@res
  8531  0587  120A  118A  2021   	fcall	stringdir
      +       120A  118A         
  8532  058C  00CE               	movwf	eval_poly@res+1
  8533  058D  120A  118A  2021   	fcall	stringdir
      +       120A  118A         
  8534  0592                     L3:	
  8535  0592  00CF               	movwf	eval_poly@res+2
  8536  0593  084A               	movf	eval_poly@n+1,w
  8537  0594  0449               	iorwf	eval_poly@n,w
  8538  0595  1903               	btfsc	3,2
  8539  0596  2DD3               	goto	i1l10191
  8540  0597  30FF               	movlw	-1
  8541  0598  07C9               	addwf	eval_poly@n,f
  8542  0599  1C03               	skipc
  8543  059A  03CA               	decf	eval_poly@n+1,f
  8544  059B  084A               	movf	eval_poly@n+1,w
  8545  059C  00CC               	movwf	??_eval_poly+1
  8546  059D  0849               	movf	eval_poly@n,w
  8547  059E  00CB               	movwf	??_eval_poly
  8548  059F  074B               	addwf	??_eval_poly,w
  8549  05A0  074B               	addwf	??_eval_poly,w
  8550  05A1  0748               	addwf	eval_poly@d,w
  8551  05A2  0084               	movwf	4
  8552  05A3  120A  118A  2021   	fcall	stringdir
      +       120A  118A         
  8553  05A8  00AF               	movwf	?___ftadd
  8554  05A9  120A  118A  2021   	fcall	stringdir
      +       120A  118A         
  8555  05AE  00B0               	movwf	?___ftadd+1
  8556  05AF  120A  118A  2021   	fcall	stringdir
      +       120A  118A         
  8557  05B4  00B1               	movwf	?___ftadd+2
  8558  05B5  084D               	movf	eval_poly@res,w
  8559  05B6  00A0               	movwf	?___ftmul
  8560  05B7  084E               	movf	eval_poly@res+1,w
  8561  05B8  00A1               	movwf	?___ftmul+1
  8562  05B9  084F               	movf	eval_poly@res+2,w
  8563  05BA  00A2               	movwf	?___ftmul+2
  8564  05BB  0845               	movf	eval_poly@x,w
  8565  05BC  00A3               	movwf	?___ftmul+3
  8566  05BD  0846               	movf	eval_poly@x+1,w
  8567  05BE  00A4               	movwf	?___ftmul+4
  8568  05BF  0847               	movf	eval_poly@x+2,w
  8569  05C0  00A5               	movwf	?___ftmul+5
  8570  05C1  269A  120A  118A   	fcall	___ftmul
  8571  05C4  0820               	movf	?___ftmul,w
  8572  05C5  00B2               	movwf	?___ftadd+3
  8573  05C6  0821               	movf	?___ftmul+1,w
  8574  05C7  00B3               	movwf	?___ftadd+4
  8575  05C8  0822               	movf	?___ftmul+2,w
  8576  05C9  00B4               	movwf	?___ftadd+5
  8577  05CA  25DA  120A  118A   	fcall	___ftadd
  8578  05CD  082F               	movf	?___ftadd,w
  8579  05CE  00CD               	movwf	eval_poly@res
  8580  05CF  0830               	movf	?___ftadd+1,w
  8581  05D0  00CE               	movwf	eval_poly@res+1
  8582  05D1  0831               	movf	?___ftadd+2,w
  8583  05D2  2D92               	goto	L3
  8584  05D3                     i1l10191:	
  8585  05D3  084D               	movf	eval_poly@res,w
  8586  05D4  00C5               	movwf	?_eval_poly
  8587  05D5  084E               	movf	eval_poly@res+1,w
  8588  05D6  00C6               	movwf	?_eval_poly+1
  8589  05D7  084F               	movf	eval_poly@res+2,w
  8590  05D8  00C7               	movwf	?_eval_poly+2
  8591  05D9  0008               	return
  8592  05DA                     __end_of_eval_poly:	
  8593  05DA                     __ptext1231:	
  8594 ;; =============== function ___ftdiv ends ============
  8595                           
  8596                           
  8597 ;; *************** function ___ftadd *****************
  8598 ;; Defined at:
  8599 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\ftadd.c"
  8600 ;; Parameters:    Size  Location     Type
  8601 ;;  f1              3   15[BANK0 ] float 
  8602 ;;  f2              3   18[BANK0 ] float 
  8603 ;; Auto vars:     Size  Location     Type
  8604 ;;  exp1            1   26[BANK0 ] unsigned char 
  8605 ;;  exp2            1   25[BANK0 ] unsigned char 
  8606 ;;  sign            1   24[BANK0 ] unsigned char 
  8607 ;; Return value:  Size  Location     Type
  8608 ;;                  3   15[BANK0 ] float 
  8609 ;; Registers used:
  8610 ;;		wreg, status,2, status,0, pclath, cstack
  8611 ;; Tracked objects:
  8612 ;;		On entry : 60/0
  8613 ;;		On exit  : 60/0
  8614 ;;		Unchanged: FFF9F/0
  8615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8616 ;;      Params:         0       6       0       0       0
  8617 ;;      Locals:         0       3       0       0       0
  8618 ;;      Temps:          0       3       0       0       0
  8619 ;;      Totals:         0      12       0       0       0
  8620 ;;Total ram usage:       12 bytes
  8621 ;; Hardware stack levels used:    1
  8622 ;; Hardware stack levels required when called:    1
  8623 ;; This function calls:
  8624 ;;		___ftpack
  8625 ;; This function is called by:
  8626 ;;		_Calc_DistanceLevel
  8627 ;;		___ftsub
  8628 ;;		_floor
  8629 ;;		_log
  8630 ;;		_eval_poly
  8631 ;; This function uses a non-reentrant model
  8632 ;;
  8633  05DA                     ___ftadd:	
  8634                           
  8635 ;; hardware stack exceeded
  8636                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8637  05DA  082F               	movf	___ftadd@f1,w
  8638  05DB  00B5               	movwf	??___ftadd
  8639  05DC  0830               	movf	___ftadd@f1+1,w
  8640  05DD  00B6               	movwf	??___ftadd+1
  8641  05DE  0831               	movf	___ftadd@f1+2,w
  8642  05DF  00B7               	movwf	??___ftadd+2
  8643  05E0  1003               	clrc
  8644  05E1  0D36               	rlf	??___ftadd+1,w
  8645  05E2  0D37               	rlf	??___ftadd+2,w
  8646  05E3  00BA               	movwf	___ftadd@exp1
  8647  05E4  0832               	movf	___ftadd@f2,w
  8648  05E5  00B5               	movwf	??___ftadd
  8649  05E6  0833               	movf	___ftadd@f2+1,w
  8650  05E7  00B6               	movwf	??___ftadd+1
  8651  05E8  0834               	movf	___ftadd@f2+2,w
  8652  05E9  00B7               	movwf	??___ftadd+2
  8653  05EA  1003               	clrc
  8654  05EB  0D36               	rlf	??___ftadd+1,w
  8655  05EC  0D37               	rlf	??___ftadd+2,w
  8656  05ED  00B9               	movwf	___ftadd@exp2
  8657  05EE  083A               	movf	___ftadd@exp1,w
  8658  05EF  1903               	btfsc	3,2
  8659  05F0  2DFD               	goto	i1l9837
  8660  05F1  0839               	movf	___ftadd@exp2,w
  8661  05F2  023A               	subwf	___ftadd@exp1,w
  8662  05F3  0839               	movf	___ftadd@exp2,w
  8663  05F4  1803               	skipnc
  8664  05F5  2E05               	goto	L6
  8665  05F6  00B5               	movwf	??___ftadd
  8666  05F7  083A               	movf	___ftadd@exp1,w
  8667  05F8  02B5               	subwf	??___ftadd,f
  8668  05F9  3019               	movlw	25
  8669  05FA  0235               	subwf	??___ftadd,w
  8670  05FB  1C03               	skipc
  8671  05FC  2E04               	goto	i1l9841
  8672  05FD                     i1l9837:	
  8673  05FD  0832               	movf	___ftadd@f2,w
  8674  05FE  00AF               	movwf	?___ftadd
  8675  05FF  0833               	movf	___ftadd@f2+1,w
  8676  0600  00B0               	movwf	?___ftadd+1
  8677  0601  0834               	movf	___ftadd@f2+2,w
  8678  0602  00B1               	movwf	?___ftadd+2
  8679  0603  0008               	return
  8680  0604                     i1l9841:	
  8681  0604  0839               	movf	___ftadd@exp2,w
  8682  0605                     L6:	
  8683  0605  1903               	btfsc	3,2
  8684  0606  0008               	return
  8685  0607  083A               	movf	___ftadd@exp1,w
  8686  0608  0239               	subwf	___ftadd@exp2,w
  8687  0609  1803               	skipnc
  8688  060A  2E13               	goto	i1l9847
  8689  060B  083A               	movf	___ftadd@exp1,w
  8690  060C  00B5               	movwf	??___ftadd
  8691  060D  0839               	movf	___ftadd@exp2,w
  8692  060E  02B5               	subwf	??___ftadd,f
  8693  060F  3019               	movlw	25
  8694  0610  0235               	subwf	??___ftadd,w
  8695  0611  1803               	btfsc	3,0
  8696  0612  0008               	return
  8697  0613                     i1l9847:	
  8698  0613  3006               	movlw	6
  8699  0614  00B8               	movwf	___ftadd@sign
  8700  0615  1BB1               	btfsc	___ftadd@f1+2,7
  8701  0616  17B8               	bsf	___ftadd@sign,7
  8702  0617  1BB4               	btfsc	___ftadd@f2+2,7
  8703  0618  1738               	bsf	___ftadd@sign,6
  8704  0619  17B0               	bsf	___ftadd@f1+1,7
  8705  061A  01B1               	clrf	___ftadd@f1+2
  8706  061B  17B3               	bsf	___ftadd@f2+1,7
  8707  061C  01B4               	clrf	___ftadd@f2+2
  8708  061D  0839               	movf	___ftadd@exp2,w
  8709  061E  023A               	subwf	___ftadd@exp1,w
  8710  061F  1803               	skipnc
  8711  0620  2E3A               	goto	i1l9869
  8712  0621                     i1l9859:	
  8713  0621  1003               	clrc
  8714  0622  0DB2               	rlf	___ftadd@f2,f
  8715  0623  0DB3               	rlf	___ftadd@f2+1,f
  8716  0624  0DB4               	rlf	___ftadd@f2+2,f
  8717  0625  03B9               	decf	___ftadd@exp2,f
  8718  0626  0839               	movf	___ftadd@exp2,w
  8719  0627  063A               	xorwf	___ftadd@exp1,w
  8720  0628  1903               	skipnz
  8721  0629  2E35               	goto	i1l9867
  8722  062A  03B8               	decf	___ftadd@sign,f
  8723  062B  0838               	movf	___ftadd@sign,w
  8724  062C  3907               	andlw	7
  8725  062D  1903               	btfsc	3,2
  8726  062E  2E35               	goto	i1l9867
  8727  062F  2E21               	goto	i1l9859
  8728  0630                     i1l9865:	
  8729  0630  1003               	clrc
  8730  0631  0CB1               	rrf	___ftadd@f1+2,f
  8731  0632  0CB0               	rrf	___ftadd@f1+1,f
  8732  0633  0CAF               	rrf	___ftadd@f1,f
  8733  0634  0ABA               	incf	___ftadd@exp1,f
  8734  0635                     i1l9867:	
  8735  0635  083A               	movf	___ftadd@exp1,w
  8736  0636  0639               	xorwf	___ftadd@exp2,w
  8737  0637  1903               	btfsc	3,2
  8738  0638  2E56               	goto	i1l6187
  8739  0639  2E30               	goto	i1l9865
  8740  063A                     i1l9869:	
  8741  063A  083A               	movf	___ftadd@exp1,w
  8742  063B  0239               	subwf	___ftadd@exp2,w
  8743  063C  1803               	skipnc
  8744  063D  2E56               	goto	i1l6187
  8745  063E                     i1l9871:	
  8746  063E  1003               	clrc
  8747  063F  0DAF               	rlf	___ftadd@f1,f
  8748  0640  0DB0               	rlf	___ftadd@f1+1,f
  8749  0641  0DB1               	rlf	___ftadd@f1+2,f
  8750  0642  03BA               	decf	___ftadd@exp1,f
  8751  0643  0839               	movf	___ftadd@exp2,w
  8752  0644  063A               	xorwf	___ftadd@exp1,w
  8753  0645  1903               	skipnz
  8754  0646  2E52               	goto	i1l9879
  8755  0647  03B8               	decf	___ftadd@sign,f
  8756  0648  0838               	movf	___ftadd@sign,w
  8757  0649  3907               	andlw	7
  8758  064A  1903               	btfsc	3,2
  8759  064B  2E52               	goto	i1l9879
  8760  064C  2E3E               	goto	i1l9871
  8761  064D                     i1l9877:	
  8762  064D  1003               	clrc
  8763  064E  0CB4               	rrf	___ftadd@f2+2,f
  8764  064F  0CB3               	rrf	___ftadd@f2+1,f
  8765  0650  0CB2               	rrf	___ftadd@f2,f
  8766  0651  0AB9               	incf	___ftadd@exp2,f
  8767  0652                     i1l9879:	
  8768  0652  083A               	movf	___ftadd@exp1,w
  8769  0653  0639               	xorwf	___ftadd@exp2,w
  8770  0654  1D03               	skipz
  8771  0655  2E4D               	goto	i1l9877
  8772  0656                     i1l6187:	
  8773  0656  1FB8               	btfss	___ftadd@sign,7
  8774  0657  2E61               	goto	i1l9885
  8775  0658  30FF               	movlw	255
  8776  0659  06AF               	xorwf	___ftadd@f1,f
  8777  065A  06B0               	xorwf	___ftadd@f1+1,f
  8778  065B  06B1               	xorwf	___ftadd@f1+2,f
  8779  065C  0AAF               	incf	___ftadd@f1,f
  8780  065D  1903               	skipnz
  8781  065E  0AB0               	incf	___ftadd@f1+1,f
  8782  065F  1903               	skipnz
  8783  0660  0AB1               	incf	___ftadd@f1+2,f
  8784  0661                     i1l9885:	
  8785  0661  1F38               	btfss	___ftadd@sign,6
  8786  0662  2E6C               	goto	i1l9891
  8787  0663  30FF               	movlw	255
  8788  0664  06B2               	xorwf	___ftadd@f2,f
  8789  0665  06B3               	xorwf	___ftadd@f2+1,f
  8790  0666  06B4               	xorwf	___ftadd@f2+2,f
  8791  0667  0AB2               	incf	___ftadd@f2,f
  8792  0668  1903               	skipnz
  8793  0669  0AB3               	incf	___ftadd@f2+1,f
  8794  066A  1903               	skipnz
  8795  066B  0AB4               	incf	___ftadd@f2+2,f
  8796  066C                     i1l9891:	
  8797  066C  01B8               	clrf	___ftadd@sign
  8798  066D  082F               	movf	___ftadd@f1,w
  8799  066E  07B2               	addwf	___ftadd@f2,f
  8800  066F  0830               	movf	___ftadd@f1+1,w
  8801  0670  1103               	clrz
  8802  0671  1803               	skipnc
  8803  0672  0A30               	incf	___ftadd@f1+1,w
  8804  0673  1D03               	btfss	3,2
  8805  0674  07B3               	addwf	___ftadd@f2+1,f
  8806  0675  0831               	movf	___ftadd@f1+2,w
  8807  0676  1103               	clrz
  8808  0677  1803               	skipnc
  8809  0678  0A31               	incf	___ftadd@f1+2,w
  8810  0679  1D03               	btfss	3,2
  8811  067A  07B4               	addwf	___ftadd@f2+2,f
  8812  067B  1FB4               	btfss	___ftadd@f2+2,7
  8813  067C  2E88               	goto	i1l9903
  8814  067D  30FF               	movlw	255
  8815  067E  06B2               	xorwf	___ftadd@f2,f
  8816  067F  06B3               	xorwf	___ftadd@f2+1,f
  8817  0680  06B4               	xorwf	___ftadd@f2+2,f
  8818  0681  0AB2               	incf	___ftadd@f2,f
  8819  0682  1903               	skipnz
  8820  0683  0AB3               	incf	___ftadd@f2+1,f
  8821  0684  1903               	skipnz
  8822  0685  0AB4               	incf	___ftadd@f2+2,f
  8823  0686  01B8               	clrf	___ftadd@sign
  8824  0687  0AB8               	incf	___ftadd@sign,f
  8825  0688                     i1l9903:	
  8826  0688  0832               	movf	___ftadd@f2,w
  8827  0689  00F1               	movwf	?___ftpack
  8828  068A  0833               	movf	___ftadd@f2+1,w
  8829  068B  00F2               	movwf	?___ftpack+1
  8830  068C  0834               	movf	___ftadd@f2+2,w
  8831  068D  00F3               	movwf	?___ftpack+2
  8832  068E  083A               	movf	___ftadd@exp1,w
  8833  068F  00F4               	movwf	?___ftpack+3
  8834  0690  0838               	movf	___ftadd@sign,w
  8835  0691  00F5               	movwf	?___ftpack+4
  8836  0692  2715               	fcall	___ftpack
  8837  0693  0871               	movf	?___ftpack,w
  8838  0694  00AF               	movwf	?___ftadd
  8839  0695  0872               	movf	?___ftpack+1,w
  8840  0696  00B0               	movwf	?___ftadd+1
  8841  0697  0873               	movf	?___ftpack+2,w
  8842  0698  00B1               	movwf	?___ftadd+2
  8843  0699  0008               	return
  8844  069A                     __end_of___ftadd:	
  8845  069A                     __ptext1229:	
  8846 ;; =============== function ___awtoft ends ============
  8847                           
  8848                           
  8849 ;; *************** function ___ftmul *****************
  8850 ;; Defined at:
  8851 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\ftmul.c"
  8852 ;; Parameters:    Size  Location     Type
  8853 ;;  f1              3    0[BANK0 ] float 
  8854 ;;  f2              3    3[BANK0 ] float 
  8855 ;; Auto vars:     Size  Location     Type
  8856 ;;  f3_as_produc    3   10[BANK0 ] unsigned um
  8857 ;;  sign            1   14[BANK0 ] unsigned char 
  8858 ;;  cntr            1   13[BANK0 ] unsigned char 
  8859 ;;  exp             1    9[BANK0 ] unsigned char 
  8860 ;; Return value:  Size  Location     Type
  8861 ;;                  3    0[BANK0 ] float 
  8862 ;; Registers used:
  8863 ;;		wreg, status,2, status,0, pclath, cstack
  8864 ;; Tracked objects:
  8865 ;;		On entry : 60/0
  8866 ;;		On exit  : 60/0
  8867 ;;		Unchanged: FFF9F/0
  8868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8869 ;;      Params:         0       6       0       0       0
  8870 ;;      Locals:         0       6       0       0       0
  8871 ;;      Temps:          0       3       0       0       0
  8872 ;;      Totals:         0      15       0       0       0
  8873 ;;Total ram usage:       15 bytes
  8874 ;; Hardware stack levels used:    1
  8875 ;; Hardware stack levels required when called:    1
  8876 ;; This function calls:
  8877 ;;		___ftpack
  8878 ;; This function is called by:
  8879 ;;		_pow
  8880 ;;		_sqrt
  8881 ;;		_exp
  8882 ;;		_log
  8883 ;;		_eval_poly
  8884 ;; This function uses a non-reentrant model
  8885 ;;
  8886  069A                     ___ftmul:	
  8887                           
  8888 ;; hardware stack exceeded
  8889                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8890  069A  0820               	movf	___ftmul@f1,w
  8891  069B  00A6               	movwf	??___ftmul
  8892  069C  0821               	movf	___ftmul@f1+1,w
  8893  069D  00A7               	movwf	??___ftmul+1
  8894  069E  0822               	movf	___ftmul@f1+2,w
  8895  069F  00A8               	movwf	??___ftmul+2
  8896  06A0  1003               	clrc
  8897  06A1  0D27               	rlf	??___ftmul+1,w
  8898  06A2  0D28               	rlf	??___ftmul+2,w
  8899  06A3  00A9               	movwf	___ftmul@exp
  8900  06A4  08A9               	movf	___ftmul@exp,f
  8901  06A5  1D03               	skipz
  8902  06A6  2EAB               	goto	i1l10003
  8903  06A7  01A0               	clrf	?___ftmul
  8904  06A8  01A1               	clrf	?___ftmul+1
  8905  06A9  01A2               	clrf	?___ftmul+2
  8906  06AA  0008               	return
  8907  06AB                     i1l10003:	
  8908  06AB  0823               	movf	___ftmul@f2,w
  8909  06AC  00A6               	movwf	??___ftmul
  8910  06AD  0824               	movf	___ftmul@f2+1,w
  8911  06AE  00A7               	movwf	??___ftmul+1
  8912  06AF  0825               	movf	___ftmul@f2+2,w
  8913  06B0  00A8               	movwf	??___ftmul+2
  8914  06B1  1003               	clrc
  8915  06B2  0D27               	rlf	??___ftmul+1,w
  8916  06B3  0D28               	rlf	??___ftmul+2,w
  8917  06B4  00AE               	movwf	___ftmul@sign
  8918  06B5  08AE               	movf	___ftmul@sign,f
  8919  06B6  1D03               	skipz
  8920  06B7  2EBC               	goto	i1l10009
  8921  06B8  01A0               	clrf	?___ftmul
  8922  06B9  01A1               	clrf	?___ftmul+1
  8923  06BA  01A2               	clrf	?___ftmul+2
  8924  06BB  0008               	return
  8925  06BC                     i1l10009:	
  8926  06BC  082E               	movf	___ftmul@sign,w
  8927  06BD  3E7B               	addlw	123
  8928  06BE  07A9               	addwf	___ftmul@exp,f
  8929  06BF  0822               	movf	___ftmul@f1+2,w
  8930  06C0  00AE               	movwf	___ftmul@sign
  8931  06C1  0825               	movf	___ftmul@f2+2,w
  8932  06C2  06AE               	xorwf	___ftmul@sign,f
  8933  06C3  3080               	movlw	128
  8934  06C4  05AE               	andwf	___ftmul@sign,f
  8935  06C5  17A1               	bsf	___ftmul@f1+1,7
  8936  06C6  17A4               	bsf	___ftmul@f2+1,7
  8937  06C7  01A5               	clrf	___ftmul@f2+2
  8938  06C8  01AA               	clrf	___ftmul@f3_as_product
  8939  06C9  01AB               	clrf	___ftmul@f3_as_product+1
  8940  06CA  01AC               	clrf	___ftmul@f3_as_product+2
  8941  06CB  3007               	movlw	7
  8942  06CC  00AD               	movwf	___ftmul@cntr
  8943  06CD                     i1l10027:	
  8944  06CD  1C20               	btfss	___ftmul@f1,0
  8945  06CE  2EDD               	goto	i1l10031
  8946  06CF  0823               	movf	___ftmul@f2,w
  8947  06D0  07AA               	addwf	___ftmul@f3_as_product,f
  8948  06D1  0824               	movf	___ftmul@f2+1,w
  8949  06D2  1103               	clrz
  8950  06D3  1803               	skipnc
  8951  06D4  0A24               	incf	___ftmul@f2+1,w
  8952  06D5  1D03               	btfss	3,2
  8953  06D6  07AB               	addwf	___ftmul@f3_as_product+1,f
  8954  06D7  0825               	movf	___ftmul@f2+2,w
  8955  06D8  1103               	clrz
  8956  06D9  1803               	skipnc
  8957  06DA  0A25               	incf	___ftmul@f2+2,w
  8958  06DB  1D03               	btfss	3,2
  8959  06DC  07AC               	addwf	___ftmul@f3_as_product+2,f
  8960  06DD                     i1l10031:	
  8961  06DD  1003               	clrc
  8962  06DE  0CA2               	rrf	___ftmul@f1+2,f
  8963  06DF  0CA1               	rrf	___ftmul@f1+1,f
  8964  06E0  0CA0               	rrf	___ftmul@f1,f
  8965  06E1  1003               	clrc
  8966  06E2  0DA3               	rlf	___ftmul@f2,f
  8967  06E3  0DA4               	rlf	___ftmul@f2+1,f
  8968  06E4  0DA5               	rlf	___ftmul@f2+2,f
  8969  06E5  0BAD               	decfsz	___ftmul@cntr,f
  8970  06E6  2ECD               	goto	i1l10027
  8971  06E7  3009               	movlw	9
  8972  06E8  00AD               	movwf	___ftmul@cntr
  8973  06E9                     i1l10039:	
  8974  06E9  1C20               	btfss	___ftmul@f1,0
  8975  06EA  2EF9               	goto	i1l10043
  8976  06EB  0823               	movf	___ftmul@f2,w
  8977  06EC  07AA               	addwf	___ftmul@f3_as_product,f
  8978  06ED  0824               	movf	___ftmul@f2+1,w
  8979  06EE  1103               	clrz
  8980  06EF  1803               	skipnc
  8981  06F0  0A24               	incf	___ftmul@f2+1,w
  8982  06F1  1D03               	btfss	3,2
  8983  06F2  07AB               	addwf	___ftmul@f3_as_product+1,f
  8984  06F3  0825               	movf	___ftmul@f2+2,w
  8985  06F4  1103               	clrz
  8986  06F5  1803               	skipnc
  8987  06F6  0A25               	incf	___ftmul@f2+2,w
  8988  06F7  1D03               	btfss	3,2
  8989  06F8  07AC               	addwf	___ftmul@f3_as_product+2,f
  8990  06F9                     i1l10043:	
  8991  06F9  1003               	clrc
  8992  06FA  0CA2               	rrf	___ftmul@f1+2,f
  8993  06FB  0CA1               	rrf	___ftmul@f1+1,f
  8994  06FC  0CA0               	rrf	___ftmul@f1,f
  8995  06FD  1003               	clrc
  8996  06FE  0CAC               	rrf	___ftmul@f3_as_product+2,f
  8997  06FF  0CAB               	rrf	___ftmul@f3_as_product+1,f
  8998  0700  0CAA               	rrf	___ftmul@f3_as_product,f
  8999  0701  0BAD               	decfsz	___ftmul@cntr,f
  9000  0702  2EE9               	goto	i1l10039
  9001  0703  082A               	movf	___ftmul@f3_as_product,w
  9002  0704  00F1               	movwf	?___ftpack
  9003  0705  082B               	movf	___ftmul@f3_as_product+1,w
  9004  0706  00F2               	movwf	?___ftpack+1
  9005  0707  082C               	movf	___ftmul@f3_as_product+2,w
  9006  0708  00F3               	movwf	?___ftpack+2
  9007  0709  0829               	movf	___ftmul@exp,w
  9008  070A  00F4               	movwf	?___ftpack+3
  9009  070B  082E               	movf	___ftmul@sign,w
  9010  070C  00F5               	movwf	?___ftpack+4
  9011  070D  2715               	fcall	___ftpack
  9012  070E  0871               	movf	?___ftpack,w
  9013  070F  00A0               	movwf	?___ftmul
  9014  0710  0872               	movf	?___ftpack+1,w
  9015  0711  00A1               	movwf	?___ftmul+1
  9016  0712  0873               	movf	?___ftpack+2,w
  9017  0713  00A2               	movwf	?___ftmul+2
  9018  0714  0008               	return
  9019  0715                     __end_of___ftmul:	
  9020  0715                     __ptext1241:	
  9021 ;; =============== function ___lmul ends ============
  9022                           
  9023                           
  9024 ;; *************** function ___ftpack *****************
  9025 ;; Defined at:
  9026 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\float.c"
  9027 ;; Parameters:    Size  Location     Type
  9028 ;;  arg             3    0[COMMON] unsigned um
  9029 ;;  exp             1    3[COMMON] unsigned char 
  9030 ;;  sign            1    4[COMMON] unsigned char 
  9031 ;; Auto vars:     Size  Location     Type
  9032 ;;		None
  9033 ;; Return value:  Size  Location     Type
  9034 ;;                  3    0[COMMON] float 
  9035 ;; Registers used:
  9036 ;;		wreg, status,2, status,0
  9037 ;; Tracked objects:
  9038 ;;		On entry : 40/20
  9039 ;;		On exit  : 40/20
  9040 ;;		Unchanged: FFFBF/0
  9041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9042 ;;      Params:         5       0       0       0       0
  9043 ;;      Locals:         0       0       0       0       0
  9044 ;;      Temps:          3       0       0       0       0
  9045 ;;      Totals:         8       0       0       0       0
  9046 ;;Total ram usage:        8 bytes
  9047 ;; Hardware stack levels used:    1
  9048 ;; This function calls:
  9049 ;;		Nothing
  9050 ;; This function is called by:
  9051 ;;		___ftadd
  9052 ;;		___ftdiv
  9053 ;;		___ftmul
  9054 ;;		___awtoft
  9055 ;;		___altoft
  9056 ;;		___lltoft
  9057 ;; This function uses a non-reentrant model
  9058 ;;
  9059  0715                     ___ftpack:	
  9060                           
  9061 ;; hardware stack exceeded
  9062                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9063  0715  0874               	movf	___ftpack@exp,w
  9064  0716  1903               	btfsc	3,2
  9065  0717  2F1D               	goto	i1l9911
  9066  0718  0873               	movf	___ftpack@arg+2,w
  9067  0719  0472               	iorwf	___ftpack@arg+1,w
  9068  071A  0471               	iorwf	___ftpack@arg,w
  9069  071B  1D03               	skipz
  9070  071C  2F26               	goto	i1l9917
  9071  071D                     i1l9911:	
  9072  071D  01F1               	clrf	?___ftpack
  9073  071E  01F2               	clrf	?___ftpack+1
  9074  071F  01F3               	clrf	?___ftpack+2
  9075  0720  0008               	return
  9076  0721                     i1l9915:	
  9077  0721  0AF4               	incf	___ftpack@exp,f
  9078  0722  1003               	clrc
  9079  0723  0CF3               	rrf	___ftpack@arg+2,f
  9080  0724  0CF2               	rrf	___ftpack@arg+1,f
  9081  0725  0CF1               	rrf	___ftpack@arg,f
  9082  0726                     i1l9917:	
  9083  0726  30FE               	movlw	254
  9084  0727  0573               	andwf	___ftpack@arg+2,w
  9085  0728  1903               	btfsc	3,2
  9086  0729  2F35               	goto	i1l9921
  9087  072A  2F21               	goto	i1l9915
  9088  072B                     i1l9919:	
  9089  072B  0AF4               	incf	___ftpack@exp,f
  9090  072C  0AF1               	incf	___ftpack@arg,f
  9091  072D  1903               	skipnz
  9092  072E  0AF2               	incf	___ftpack@arg+1,f
  9093  072F  1903               	skipnz
  9094  0730  0AF3               	incf	___ftpack@arg+2,f
  9095  0731  1003               	clrc
  9096  0732  0CF3               	rrf	___ftpack@arg+2,f
  9097  0733  0CF2               	rrf	___ftpack@arg+1,f
  9098  0734  0CF1               	rrf	___ftpack@arg,f
  9099  0735                     i1l9921:	
  9100  0735  30FF               	movlw	255
  9101  0736  0573               	andwf	___ftpack@arg+2,w
  9102  0737  1903               	btfsc	3,2
  9103  0738  2F3F               	goto	i1l9925
  9104  0739  2F2B               	goto	i1l9919
  9105  073A                     i1l9923:	
  9106  073A  03F4               	decf	___ftpack@exp,f
  9107  073B  1003               	clrc
  9108  073C  0DF1               	rlf	___ftpack@arg,f
  9109  073D  0DF2               	rlf	___ftpack@arg+1,f
  9110  073E  0DF3               	rlf	___ftpack@arg+2,f
  9111  073F                     i1l9925:	
  9112  073F  1FF2               	btfss	___ftpack@arg+1,7
  9113  0740  2F3A               	goto	i1l9923
  9114  0741  1C74               	btfss	___ftpack@exp,0
  9115  0742  13F2               	bcf	___ftpack@arg+1,7
  9116  0743  1003               	clrc
  9117  0744  0CF4               	rrf	___ftpack@exp,f
  9118  0745  0874               	movf	___ftpack@exp,w
  9119  0746  00F8               	movwf	??___ftpack+2
  9120  0747  01F7               	clrf	??___ftpack+1
  9121  0748  01F6               	clrf	??___ftpack
  9122  0749  0876               	movf	??___ftpack,w
  9123  074A  04F1               	iorwf	___ftpack@arg,f
  9124  074B  0877               	movf	??___ftpack+1,w
  9125  074C  04F2               	iorwf	___ftpack@arg+1,f
  9126  074D  0878               	movf	??___ftpack+2,w
  9127  074E  04F3               	iorwf	___ftpack@arg+2,f
  9128  074F  0875               	movf	___ftpack@sign,w
  9129  0750  1D03               	skipz
  9130  0751  17F3               	bsf	___ftpack@arg+2,7
  9131  0752  0008               	return
  9132  0753                     __end_of___ftpack:	
  9133  0753                     __ptext1237:	
  9134 ;; =============== function _frexp ends ============
  9135                           
  9136                           
  9137 ;; *************** function ___ftge *****************
  9138 ;; Defined at:
  9139 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\ftge.c"
  9140 ;; Parameters:    Size  Location     Type
  9141 ;;  ff1             3    0[COMMON] float 
  9142 ;;  ff2             3    3[COMMON] float 
  9143 ;; Auto vars:     Size  Location     Type
  9144 ;;		None
  9145 ;; Return value:  Size  Location     Type
  9146 ;;		None               void
  9147 ;; Registers used:
  9148 ;;		wreg, status,2, status,0
  9149 ;; Tracked objects:
  9150 ;;		On entry : 40/20
  9151 ;;		On exit  : 40/20
  9152 ;;		Unchanged: FFFBF/0
  9153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9154 ;;      Params:         6       0       0       0       0
  9155 ;;      Locals:         0       0       0       0       0
  9156 ;;      Temps:          0       0       0       0       0
  9157 ;;      Totals:         6       0       0       0       0
  9158 ;;Total ram usage:        6 bytes
  9159 ;; Hardware stack levels used:    1
  9160 ;; This function calls:
  9161 ;;		Nothing
  9162 ;; This function is called by:
  9163 ;;		_pow
  9164 ;;		_sqrt
  9165 ;;		_exp
  9166 ;;		_floor
  9167 ;;		_log
  9168 ;;		_ldexp
  9169 ;; This function uses a non-reentrant model
  9170 ;;
  9171  0753                     ___ftge:	
  9172                           
  9173 ;; hardware stack exceeded
  9174                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9175  0753  1FF3               	btfss	___ftge@ff1+2,7
  9176  0754  2F62               	goto	i1l10115
  9177  0755  0871               	movf	___ftge@ff1,w
  9178  0756  3C00               	sublw	0
  9179  0757  00F1               	movwf	___ftge@ff1
  9180  0758  0872               	movf	___ftge@ff1+1,w
  9181  0759  1C03               	skipc
  9182  075A  0F72               	incfsz	___ftge@ff1+1,w
  9183  075B  3C00               	sublw	0
  9184  075C  00F2               	movwf	___ftge@ff1+1
  9185  075D  0873               	movf	___ftge@ff1+2,w
  9186  075E  1C03               	skipc
  9187  075F  0F73               	incfsz	___ftge@ff1+2,w
  9188  0760  3C80               	sublw	128
  9189  0761  00F3               	movwf	___ftge@ff1+2
  9190  0762                     i1l10115:	
  9191  0762  1FF6               	btfss	___ftge@ff2+2,7
  9192  0763  2F71               	goto	i1l10119
  9193  0764  0874               	movf	___ftge@ff2,w
  9194  0765  3C00               	sublw	0
  9195  0766  00F4               	movwf	___ftge@ff2
  9196  0767  0875               	movf	___ftge@ff2+1,w
  9197  0768  1C03               	skipc
  9198  0769  0F75               	incfsz	___ftge@ff2+1,w
  9199  076A  3C00               	sublw	0
  9200  076B  00F5               	movwf	___ftge@ff2+1
  9201  076C  0876               	movf	___ftge@ff2+2,w
  9202  076D  1C03               	skipc
  9203  076E  0F76               	incfsz	___ftge@ff2+2,w
  9204  076F  3C80               	sublw	128
  9205  0770  00F6               	movwf	___ftge@ff2+2
  9206  0771                     i1l10119:	
  9207  0771  3080               	movlw	128
  9208  0772  06F3               	xorwf	___ftge@ff1+2,f
  9209  0773  06F6               	xorwf	___ftge@ff2+2,f
  9210  0774  0876               	movf	___ftge@ff2+2,w
  9211  0775  0273               	subwf	___ftge@ff1+2,w
  9212  0776  1D03               	skipz
  9213  0777  0008               	return
  9214  0778  0875               	movf	___ftge@ff2+1,w
  9215  0779  0272               	subwf	___ftge@ff1+1,w
  9216  077A  1D03               	skipz
  9217  077B  0008               	return
  9218  077C  0874               	movf	___ftge@ff2,w
  9219  077D  0271               	subwf	___ftge@ff1,w
  9220  077E  0008               	return
  9221  077F                     __end_of___ftge:	
  9222  077F                     __ptext1223:	
  9223 ;; =============== function _floor ends ============
  9224                           
  9225                           
  9226 ;; *************** function ___ftsub *****************
  9227 ;; Defined at:
  9228 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\ftsub.c"
  9229 ;; Parameters:    Size  Location     Type
  9230 ;;  f2              3   27[BANK0 ] float 
  9231 ;;  f1              3   30[BANK0 ] float 
  9232 ;; Auto vars:     Size  Location     Type
  9233 ;;		None
  9234 ;; Return value:  Size  Location     Type
  9235 ;;                  3   27[BANK0 ] float 
  9236 ;; Registers used:
  9237 ;;		wreg, status,2, status,0, pclath, cstack
  9238 ;; Tracked objects:
  9239 ;;		On entry : 60/0
  9240 ;;		On exit  : 60/0
  9241 ;;		Unchanged: FFF9F/0
  9242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9243 ;;      Params:         0       6       0       0       0
  9244 ;;      Locals:         0       0       0       0       0
  9245 ;;      Temps:          0       0       0       0       0
  9246 ;;      Totals:         0       6       0       0       0
  9247 ;;Total ram usage:        6 bytes
  9248 ;; Hardware stack levels used:    1
  9249 ;; Hardware stack levels required when called:    2
  9250 ;; This function calls:
  9251 ;;		___ftadd
  9252 ;; This function is called by:
  9253 ;;		_sqrt
  9254 ;;		_exp
  9255 ;; This function uses a non-reentrant model
  9256 ;;
  9257  077F                     ___ftsub:	
  9258                           
  9259 ;; hardware stack exceeded
  9260                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  9261  077F  3080               	movlw	128
  9262  0780  06BD               	xorwf	___ftsub@f2+2,f
  9263  0781  083E               	movf	___ftsub@f1,w
  9264  0782  00AF               	movwf	?___ftadd
  9265  0783  083F               	movf	___ftsub@f1+1,w
  9266  0784  00B0               	movwf	?___ftadd+1
  9267  0785  0840               	movf	___ftsub@f1+2,w
  9268  0786  00B1               	movwf	?___ftadd+2
  9269  0787  083B               	movf	___ftsub@f2,w
  9270  0788  00B2               	movwf	?___ftadd+3
  9271  0789  083C               	movf	___ftsub@f2+1,w
  9272  078A  00B3               	movwf	?___ftadd+4
  9273  078B  083D               	movf	___ftsub@f2+2,w
  9274  078C  00B4               	movwf	?___ftadd+5
  9275  078D  25DA               	fcall	___ftadd
  9276  078E  082F               	movf	?___ftadd,w
  9277  078F  00BB               	movwf	?___ftsub
  9278  0790  0830               	movf	?___ftadd+1,w
  9279  0791  00BC               	movwf	?___ftsub+1
  9280  0792  0831               	movf	?___ftadd+2,w
  9281  0793  00BD               	movwf	?___ftsub+2
  9282  0794  0008               	return
  9283  0795                     __end_of___ftsub:	
  9284  0795                     __ptext1236:	
  9285 ;; =============== function i1_Digitron_Send_8bit ends ============
  9286                           
  9287                           
  9288 ;; *************** function _frexp *****************
  9289 ;; Defined at:
  9290 ;;		line 255 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\frexp.c"
  9291 ;; Parameters:    Size  Location     Type
  9292 ;;  value           3    0[COMMON] unsigned char 
  9293 ;;  eptr            1    3[COMMON] PTR int 
  9294 ;;		 -> log@exp(2), floor@expon(2), 
  9295 ;; Auto vars:     Size  Location     Type
  9296 ;;		None
  9297 ;; Return value:  Size  Location     Type
  9298 ;;                  3    0[COMMON] PTR int 
  9299 ;; Registers used:
  9300 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  9301 ;; Tracked objects:
  9302 ;;		On entry : 60/0
  9303 ;;		On exit  : 160/0
  9304 ;;		Unchanged: FFE9F/0
  9305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9306 ;;      Params:         4       0       0       0       0
  9307 ;;      Locals:         0       0       0       0       0
  9308 ;;      Temps:          2       0       0       0       0
  9309 ;;      Totals:         6       0       0       0       0
  9310 ;;Total ram usage:        6 bytes
  9311 ;; Hardware stack levels used:    1
  9312 ;; This function calls:
  9313 ;;		Nothing
  9314 ;; This function is called by:
  9315 ;;		_floor
  9316 ;;		_log
  9317 ;; This function uses a non-reentrant model
  9318 ;;
  9319  0795                     _frexp:	
  9320                           
  9321 ;; hardware stack exceeded
  9322                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  9323  0795  0873               	movf	frexp@value+2,w
  9324  0796  0472               	iorwf	frexp@value+1,w
  9325  0797  0471               	iorwf	frexp@value,w
  9326  0798  1D03               	skipz
  9327  0799  2FA4               	goto	i1l10243
  9328  079A  0874               	movf	frexp@eptr,w
  9329  079B  0084               	movwf	4
  9330  079C  1383               	bcf	3,7	;select IRP bank0
  9331  079D  0180               	clrf	0
  9332  079E  0A84               	incf	4,f
  9333  079F  0180               	clrf	0
  9334  07A0  01F1               	clrf	?_frexp
  9335  07A1  01F2               	clrf	?_frexp+1
  9336  07A2  01F3               	clrf	?_frexp+2
  9337  07A3  0008               	return
  9338  07A4                     i1l10243:	
  9339  07A4  0873               	movf	frexp@value+2,w
  9340  07A5  397F               	andlw	127
  9341  07A6  00F5               	movwf	??_frexp
  9342  07A7  01F6               	clrf	??_frexp+1
  9343  07A8  1003               	clrc
  9344  07A9  0DF5               	rlf	??_frexp,f
  9345  07AA  0DF6               	rlf	??_frexp+1,f
  9346  07AB  0874               	movf	frexp@eptr,w
  9347  07AC  0084               	movwf	4
  9348  07AD  0875               	movf	??_frexp,w
  9349  07AE  1383               	bcf	3,7	;select IRP bank0
  9350  07AF  0080               	movwf	0
  9351  07B0  0A84               	incf	4,f
  9352  07B1  0876               	movf	??_frexp+1,w
  9353  07B2  0080               	movwf	0
  9354  07B3  0D72               	rlf	frexp@value+1,w
  9355  07B4  0D72               	rlf	frexp@value+1,w
  9356  07B5  3901               	andlw	1
  9357  07B6  00F5               	movwf	??_frexp
  9358  07B7  01F6               	clrf	??_frexp+1
  9359  07B8  0874               	movf	frexp@eptr,w
  9360  07B9  0084               	movwf	4
  9361  07BA  0875               	movf	??_frexp,w
  9362  07BB  0480               	iorwf	0,f
  9363  07BC  0A84               	incf	4,f
  9364  07BD  0876               	movf	??_frexp+1,w
  9365  07BE  0480               	iorwf	0,f
  9366  07BF  0874               	movf	frexp@eptr,w
  9367  07C0  0084               	movwf	4
  9368  07C1  3082               	movlw	130
  9369  07C2  0780               	addwf	0,f
  9370  07C3  0F84               	incfsz	4,f
  9371  07C4  0800               	movf	0,w
  9372  07C5  1803               	skipnc
  9373  07C6  0A00               	incf	0,w
  9374  07C7  00FF               	movwf	127
  9375  07C8  3EFF               	addlw	255
  9376  07C9  0080               	movwf	0
  9377  07CA  0384               	decf	4,f
  9378  07CB  0873               	movf	frexp@value+2,w
  9379  07CC  3980               	andlw	-128
  9380  07CD  383F               	iorlw	63
  9381  07CE  00F3               	movwf	frexp@value+2
  9382  07CF  13F2               	bcf	frexp@value+1,7
  9383  07D0  0008               	return
  9384  07D1                     __end_of_frexp:	
  9385  07D1                     __ptext1227:	
  9386 ;; =============== function ___lltoft ends ============
  9387                           
  9388                           
  9389 ;; *************** function ___altoft *****************
  9390 ;; Defined at:
  9391 ;;		line 43 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\altoft.c"
  9392 ;; Parameters:    Size  Location     Type
  9393 ;;  c               4    9[BANK0 ] long 
  9394 ;; Auto vars:     Size  Location     Type
  9395 ;;  sign            1   14[BANK0 ] unsigned char 
  9396 ;;  exp             1   13[BANK0 ] unsigned char 
  9397 ;; Return value:  Size  Location     Type
  9398 ;;                  3    9[BANK0 ] float 
  9399 ;; Registers used:
  9400 ;;		wreg, status,2, status,0, pclath, cstack
  9401 ;; Tracked objects:
  9402 ;;		On entry : 160/0
  9403 ;;		On exit  : 160/0
  9404 ;;		Unchanged: FFE9F/0
  9405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9406 ;;      Params:         0       4       0       0       0
  9407 ;;      Locals:         0       2       0       0       0
  9408 ;;      Temps:          0       0       0       0       0
  9409 ;;      Totals:         0       6       0       0       0
  9410 ;;Total ram usage:        6 bytes
  9411 ;; Hardware stack levels used:    1
  9412 ;; Hardware stack levels required when called:    1
  9413 ;; This function calls:
  9414 ;;		___ftpack
  9415 ;; This function is called by:
  9416 ;;		_Calc_DistanceLevel
  9417 ;;		_floor
  9418 ;; This function uses a non-reentrant model
  9419 ;;
  9420  07D1                     ___altoft:	
  9421                           
  9422 ;; hardware stack exceeded
  9423                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  9424  07D1  01AE               	clrf	___altoft@sign
  9425  07D2  308E               	movlw	142
  9426  07D3  00AD               	movwf	___altoft@exp
  9427  07D4  1FAC               	btfss	___altoft@c+3,7
  9428  07D5  2FE3               	goto	i1l10141
  9429  07D6  09A9               	comf	___altoft@c,f
  9430  07D7  09AA               	comf	___altoft@c+1,f
  9431  07D8  09AB               	comf	___altoft@c+2,f
  9432  07D9  09AC               	comf	___altoft@c+3,f
  9433  07DA  0AA9               	incf	___altoft@c,f
  9434  07DB  1903               	skipnz
  9435  07DC  0AAA               	incf	___altoft@c+1,f
  9436  07DD  1903               	skipnz
  9437  07DE  0AAB               	incf	___altoft@c+2,f
  9438  07DF  1903               	skipnz
  9439  07E0  0AAC               	incf	___altoft@c+3,f
  9440  07E1  01AE               	clrf	___altoft@sign
  9441  07E2  0AAE               	incf	___altoft@sign,f
  9442  07E3                     i1l10141:	
  9443  07E3  30FF               	movlw	255
  9444  07E4  052C               	andwf	___altoft@c+3,w
  9445  07E5  1903               	btfsc	3,2
  9446  07E6  2FEE               	goto	i1l10143
  9447  07E7  1003               	clrc
  9448  07E8  0CAC               	rrf	___altoft@c+3,f
  9449  07E9  0CAB               	rrf	___altoft@c+2,f
  9450  07EA  0CAA               	rrf	___altoft@c+1,f
  9451  07EB  0CA9               	rrf	___altoft@c,f
  9452  07EC  0AAD               	incf	___altoft@exp,f
  9453  07ED  2FE3               	goto	i1l10141
  9454  07EE                     i1l10143:	
  9455  07EE  0829               	movf	___altoft@c,w
  9456  07EF  00F1               	movwf	?___ftpack
  9457  07F0  082A               	movf	___altoft@c+1,w
  9458  07F1  00F2               	movwf	?___ftpack+1
  9459  07F2  082B               	movf	___altoft@c+2,w
  9460  07F3  00F3               	movwf	?___ftpack+2
  9461  07F4  082D               	movf	___altoft@exp,w
  9462  07F5  00F4               	movwf	?___ftpack+3
  9463  07F6  082E               	movf	___altoft@sign,w
  9464  07F7  00F5               	movwf	?___ftpack+4
  9465  07F8  2715               	fcall	___ftpack
  9466  07F9  0871               	movf	?___ftpack,w
  9467  07FA  00A9               	movwf	?___altoft
  9468  07FB  0872               	movf	?___ftpack+1,w
  9469  07FC  00AA               	movwf	?___altoft+1
  9470  07FD  0873               	movf	?___ftpack+2,w
  9471  07FE  00AB               	movwf	?___altoft+2
  9472  07FF  0008               	return
  9473  0800                     __end_of___altoft:	
  9474                           
  9475                           	psect	text1226
  9476  176B                     __ptext1226:	
  9477 ;; =============== function _ldexp ends ============
  9478                           
  9479                           
  9480 ;; *************** function ___lltoft *****************
  9481 ;; Defined at:
  9482 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\lltoft.c"
  9483 ;; Parameters:    Size  Location     Type
  9484 ;;  c               4    8[COMMON] unsigned long 
  9485 ;; Auto vars:     Size  Location     Type
  9486 ;;  exp             1   12[COMMON] unsigned char 
  9487 ;; Return value:  Size  Location     Type
  9488 ;;                  3    8[COMMON] float 
  9489 ;; Registers used:
  9490 ;;		wreg, status,2, status,0, pclath, cstack
  9491 ;; Tracked objects:
  9492 ;;		On entry : 60/20
  9493 ;;		On exit  : 60/20
  9494 ;;		Unchanged: FFF9F/0
  9495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9496 ;;      Params:         4       0       0       0       0
  9497 ;;      Locals:         1       0       0       0       0
  9498 ;;      Temps:          0       0       0       0       0
  9499 ;;      Totals:         5       0       0       0       0
  9500 ;;Total ram usage:        5 bytes
  9501 ;; Hardware stack levels used:    1
  9502 ;; Hardware stack levels required when called:    1
  9503 ;; This function calls:
  9504 ;;		___ftpack
  9505 ;; This function is called by:
  9506 ;;		_pow
  9507 ;; This function uses a non-reentrant model
  9508 ;;
  9509  176B                     ___lltoft:	
  9510                           
  9511 ;; hardware stack exceeded
  9512                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  9513  176B  308E               	movlw	142
  9514  176C  00FD               	movwf	___lltoft@exp
  9515  176D                     i1l10151:	
  9516  176D  30FF               	movlw	255
  9517  176E  057C               	andwf	___lltoft@c+3,w
  9518  176F  1903               	btfsc	3,2
  9519  1770  2F78               	goto	i1l10153
  9520  1771  1003               	clrc
  9521  1772  0CFC               	rrf	___lltoft@c+3,f
  9522  1773  0CFB               	rrf	___lltoft@c+2,f
  9523  1774  0CFA               	rrf	___lltoft@c+1,f
  9524  1775  0CF9               	rrf	___lltoft@c,f
  9525  1776  0AFD               	incf	___lltoft@exp,f
  9526  1777  2F6D               	goto	i1l10151
  9527  1778                     i1l10153:	
  9528  1778  0879               	movf	___lltoft@c,w
  9529  1779  00F1               	movwf	?___ftpack
  9530  177A  087A               	movf	___lltoft@c+1,w
  9531  177B  00F2               	movwf	?___ftpack+1
  9532  177C  087B               	movf	___lltoft@c+2,w
  9533  177D  00F3               	movwf	?___ftpack+2
  9534  177E  087D               	movf	___lltoft@exp,w
  9535  177F  00F4               	movwf	?___ftpack+3
  9536  1780  01F5               	clrf	?___ftpack+4
  9537  1781  120A  118A  2715   	fcall	___ftpack
  9538  1784  0871               	movf	?___ftpack,w
  9539  1785  00F9               	movwf	?___lltoft
  9540  1786  0872               	movf	?___ftpack+1,w
  9541  1787  00FA               	movwf	?___lltoft+1
  9542  1788  0873               	movf	?___ftpack+2,w
  9543  1789  00FB               	movwf	?___lltoft+2
  9544  178A  0008               	return
  9545  178B                     __end_of___lltoft:	
  9546                           
  9547                           	psect	text1230
  9548  0807                     __ptext1230:	
  9549 ;; =============== function ___ftmul ends ============
  9550                           
  9551                           
  9552 ;; *************** function ___ftdiv *****************
  9553 ;; Defined at:
  9554 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\ftdiv.c"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;  f2              3    0[BANK0 ] float 
  9557 ;;  f1              3    3[BANK0 ] float 
  9558 ;; Auto vars:     Size  Location     Type
  9559 ;;  f3              3    7[BANK0 ] float 
  9560 ;;  sign            1   11[BANK0 ] unsigned char 
  9561 ;;  exp             1   10[BANK0 ] unsigned char 
  9562 ;;  cntr            1    6[BANK0 ] unsigned char 
  9563 ;; Return value:  Size  Location     Type
  9564 ;;                  3    0[BANK0 ] float 
  9565 ;; Registers used:
  9566 ;;		wreg, status,2, status,0, pclath, cstack
  9567 ;; Tracked objects:
  9568 ;;		On entry : 60/0
  9569 ;;		On exit  : 60/0
  9570 ;;		Unchanged: FFF9F/0
  9571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9572 ;;      Params:         0       6       0       0       0
  9573 ;;      Locals:         0       6       0       0       0
  9574 ;;      Temps:          3       0       0       0       0
  9575 ;;      Totals:         3      12       0       0       0
  9576 ;;Total ram usage:       15 bytes
  9577 ;; Hardware stack levels used:    1
  9578 ;; Hardware stack levels required when called:    1
  9579 ;; This function calls:
  9580 ;;		___ftpack
  9581 ;; This function is called by:
  9582 ;;		_exp
  9583 ;; This function uses a non-reentrant model
  9584 ;;
  9585  0807                     ___ftdiv:	
  9586                           
  9587 ;; hardware stack exceeded
  9588                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  9589  0807  0823               	movf	___ftdiv@f1,w
  9590  0808  00F9               	movwf	??___ftdiv
  9591  0809  0824               	movf	___ftdiv@f1+1,w
  9592  080A  00FA               	movwf	??___ftdiv+1
  9593  080B  0825               	movf	___ftdiv@f1+2,w
  9594  080C  00FB               	movwf	??___ftdiv+2
  9595  080D  1003               	clrc
  9596  080E  0D7A               	rlf	??___ftdiv+1,w
  9597  080F  0D7B               	rlf	??___ftdiv+2,w
  9598  0810  00AA               	movwf	___ftdiv@exp
  9599  0811  08AA               	movf	___ftdiv@exp,f
  9600  0812  1D03               	skipz
  9601  0813  2818               	goto	i1l9959
  9602  0814  01A0               	clrf	?___ftdiv
  9603  0815  01A1               	clrf	?___ftdiv+1
  9604  0816  01A2               	clrf	?___ftdiv+2
  9605  0817  0008               	return
  9606  0818                     i1l9959:	
  9607  0818  0820               	movf	___ftdiv@f2,w
  9608  0819  00F9               	movwf	??___ftdiv
  9609  081A  0821               	movf	___ftdiv@f2+1,w
  9610  081B  00FA               	movwf	??___ftdiv+1
  9611  081C  0822               	movf	___ftdiv@f2+2,w
  9612  081D  00FB               	movwf	??___ftdiv+2
  9613  081E  1003               	clrc
  9614  081F  0D7A               	rlf	??___ftdiv+1,w
  9615  0820  0D7B               	rlf	??___ftdiv+2,w
  9616  0821  00AB               	movwf	___ftdiv@sign
  9617  0822  08AB               	movf	___ftdiv@sign,f
  9618  0823  1D03               	skipz
  9619  0824  2829               	goto	i1l6216
  9620  0825  01A0               	clrf	?___ftdiv
  9621  0826  01A1               	clrf	?___ftdiv+1
  9622  0827  01A2               	clrf	?___ftdiv+2
  9623  0828  0008               	return
  9624  0829                     i1l6216:	
  9625  0829  01A7               	clrf	___ftdiv@f3
  9626  082A  01A8               	clrf	___ftdiv@f3+1
  9627  082B  01A9               	clrf	___ftdiv@f3+2
  9628  082C  3089               	movlw	137
  9629  082D  072B               	addwf	___ftdiv@sign,w
  9630  082E  00F9               	movwf	??___ftdiv
  9631  082F  02AA               	subwf	___ftdiv@exp,f
  9632  0830  0825               	movf	___ftdiv@f1+2,w
  9633  0831  00AB               	movwf	___ftdiv@sign
  9634  0832  0822               	movf	___ftdiv@f2+2,w
  9635  0833  06AB               	xorwf	___ftdiv@sign,f
  9636  0834  3080               	movlw	128
  9637  0835  05AB               	andwf	___ftdiv@sign,f
  9638  0836  17A4               	bsf	___ftdiv@f1+1,7
  9639  0837  01A5               	clrf	___ftdiv@f1+2
  9640  0838  17A1               	bsf	___ftdiv@f2+1,7
  9641  0839  01A2               	clrf	___ftdiv@f2+2
  9642  083A  3018               	movlw	24
  9643  083B  00A6               	movwf	___ftdiv@cntr
  9644  083C                     i1l9983:	
  9645  083C  1003               	clrc
  9646  083D  0DA7               	rlf	___ftdiv@f3,f
  9647  083E  0DA8               	rlf	___ftdiv@f3+1,f
  9648  083F  0DA9               	rlf	___ftdiv@f3+2,f
  9649  0840  0822               	movf	___ftdiv@f2+2,w
  9650  0841  0225               	subwf	___ftdiv@f1+2,w
  9651  0842  1D03               	skipz
  9652  0843  284A               	goto	u336_25
  9653  0844  0821               	movf	___ftdiv@f2+1,w
  9654  0845  0224               	subwf	___ftdiv@f1+1,w
  9655  0846  1D03               	skipz
  9656  0847  284A               	goto	u336_25
  9657  0848  0820               	movf	___ftdiv@f2,w
  9658  0849  0223               	subwf	___ftdiv@f1,w
  9659  084A                     u336_25:	
  9660  084A  1C03               	skipc
  9661  084B  2858               	goto	L5
  9662  084C  0820               	movf	___ftdiv@f2,w
  9663  084D  02A3               	subwf	___ftdiv@f1,f
  9664  084E  0821               	movf	___ftdiv@f2+1,w
  9665  084F  1C03               	skipc
  9666  0850  0F21               	incfsz	___ftdiv@f2+1,w
  9667  0851  02A4               	subwf	___ftdiv@f1+1,f
  9668  0852  0822               	movf	___ftdiv@f2+2,w
  9669  0853  1C03               	skipc
  9670  0854  0A22               	incf	___ftdiv@f2+2,w
  9671  0855  02A5               	subwf	___ftdiv@f1+2,f
  9672  0856  1427               	bsf	___ftdiv@f3,0
  9673  0857  1003               	clrc
  9674  0858                     L5:	
  9675  0858  0DA3               	rlf	___ftdiv@f1,f
  9676  0859  0DA4               	rlf	___ftdiv@f1+1,f
  9677  085A  0DA5               	rlf	___ftdiv@f1+2,f
  9678  085B  0BA6               	decfsz	___ftdiv@cntr,f
  9679  085C  283C               	goto	i1l9983
  9680  085D  0827               	movf	___ftdiv@f3,w
  9681  085E  00F1               	movwf	?___ftpack
  9682  085F  0828               	movf	___ftdiv@f3+1,w
  9683  0860  00F2               	movwf	?___ftpack+1
  9684  0861  0829               	movf	___ftdiv@f3+2,w
  9685  0862  00F3               	movwf	?___ftpack+2
  9686  0863  082A               	movf	___ftdiv@exp,w
  9687  0864  00F4               	movwf	?___ftpack+3
  9688  0865  082B               	movf	___ftdiv@sign,w
  9689  0866  00F5               	movwf	?___ftpack+4
  9690  0867  120A  118A  2715   	fcall	___ftpack
  9691  086A  0871               	movf	?___ftpack,w
  9692  086B  00A0               	movwf	?___ftdiv
  9693  086C  0872               	movf	?___ftpack+1,w
  9694  086D  00A1               	movwf	?___ftdiv+1
  9695  086E  0873               	movf	?___ftpack+2,w
  9696  086F  00A2               	movwf	?___ftdiv+2
  9697  0870  0008               	return
  9698  0871                     __end_of___ftdiv:	
  9699                           
  9700                           	psect	text1233
  9701  178B                     __ptext1233:	
  9702 ;; =============== function _atol ends ============
  9703                           
  9704                           
  9705 ;; *************** function _atoi *****************
  9706 ;; Defined at:
  9707 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\atoi.c"
  9708 ;; Parameters:    Size  Location     Type
  9709 ;;  s               1    wreg     PTR const unsigned char 
  9710 ;;		 -> arr_rcv_len(3), Get_GpsDataLen@len_arr(3), 
  9711 ;; Auto vars:     Size  Location     Type
  9712 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  9713 ;;		 -> arr_rcv_len(3), Get_GpsDataLen@len_arr(3), 
  9714 ;;  a               2    1[BANK0 ] int 
  9715 ;;  sign            1    0[BANK0 ] unsigned char 
  9716 ;; Return value:  Size  Location     Type
  9717 ;;                  2    6[COMMON] int 
  9718 ;; Registers used:
  9719 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9720 ;; Tracked objects:
  9721 ;;		On entry : 160/100
  9722 ;;		On exit  : 160/100
  9723 ;;		Unchanged: FFE9F/0
  9724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9725 ;;      Params:         2       0       0       0       0
  9726 ;;      Locals:         0       4       0       0       0
  9727 ;;      Temps:          2       0       0       0       0
  9728 ;;      Totals:         4       4       0       0       0
  9729 ;;Total ram usage:        8 bytes
  9730 ;; Hardware stack levels used:    1
  9731 ;; Hardware stack levels required when called:    1
  9732 ;; This function calls:
  9733 ;;		___wmul
  9734 ;;		_isdigit
  9735 ;; This function is called by:
  9736 ;;		_Pos_meet
  9737 ;; This function uses a non-reentrant model
  9738 ;;
  9739  178B                     _atoi:	
  9740                           
  9741                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9742                           ;atoi@s stored from wreg
  9743  178B  00A3               	movwf	atoi@s
  9744  178C                     i1l9271:	
  9745  178C  0823               	movf	atoi@s,w
  9746  178D  0084               	movwf	4
  9747  178E  0800               	movf	0,w
  9748  178F  3A20               	xorlw	32
  9749  1790  1D03               	btfss	3,2
  9750  1791  2F94               	goto	i1l9273
  9751  1792                     i1l9269:	
  9752  1792  0AA3               	incf	atoi@s,f
  9753  1793  2F8C               	goto	i1l9271
  9754  1794                     i1l9273:	
  9755  1794  0823               	movf	atoi@s,w
  9756  1795  0084               	movwf	4
  9757  1796  0800               	movf	0,w
  9758  1797  3A09               	xorlw	9
  9759  1798  1903               	skipnz
  9760  1799  2F92               	goto	i1l9269
  9761  179A  01A1               	clrf	atoi@a
  9762  179B  01A2               	clrf	atoi@a+1
  9763  179C  01A0               	clrf	atoi@sign
  9764  179D  0823               	movf	atoi@s,w
  9765  179E  0084               	movwf	4
  9766  179F  0800               	movf	0,w
  9767  17A0  3A2D               	xorlw	45
  9768  17A1  1D03               	skipz
  9769  17A2  2FA5               	goto	i1l9281
  9770  17A3  0AA0               	incf	atoi@sign,f
  9771  17A4  2FD1               	goto	i1l9283
  9772  17A5                     i1l9281:	
  9773  17A5  0823               	movf	atoi@s,w
  9774  17A6  0084               	movwf	4
  9775  17A7  0800               	movf	0,w
  9776  17A8  3A2B               	xorlw	43
  9777  17A9  1903               	btfsc	3,2
  9778  17AA  2FD1               	goto	i1l9283
  9779  17AB                     i1l9289:	
  9780  17AB  0823               	movf	atoi@s,w
  9781  17AC  0084               	movwf	4
  9782  17AD  0800               	movf	0,w
  9783  17AE  120A  158A  266F   	fcall	_isdigit
      +       160A  118A         
  9784  17B3  1C03               	btfss	3,0
  9785  17B4  2FD3               	goto	i1l9291
  9786  17B5  0823               	movf	atoi@s,w
  9787  17B6  0084               	movwf	4
  9788  17B7  0822               	movf	atoi@a+1,w
  9789  17B8  00F2               	movwf	?___wmul+1
  9790  17B9  0821               	movf	atoi@a,w
  9791  17BA  00F1               	movwf	?___wmul
  9792  17BB  300A               	movlw	10
  9793  17BC  00F3               	movwf	?___wmul+2
  9794  17BD  01F4               	clrf	?___wmul+3
  9795  17BE  27E7  160A  118A   	fcall	___wmul
  9796  17C1  0800               	movf	0,w
  9797  17C2  0771               	addwf	?___wmul,w
  9798  17C3  00F9               	movwf	??_atoi
  9799  17C4  3000               	movlw	0
  9800  17C5  1803               	skipnc
  9801  17C6  3001               	movlw	1
  9802  17C7  0772               	addwf	?___wmul+1,w
  9803  17C8  00FA               	movwf	??_atoi+1
  9804  17C9  0879               	movf	??_atoi,w
  9805  17CA  3ED0               	addlw	208
  9806  17CB  00A1               	movwf	atoi@a
  9807  17CC  087A               	movf	??_atoi+1,w
  9808  17CD  1803               	skipnc
  9809  17CE  3E01               	addlw	1
  9810  17CF  3EFF               	addlw	255
  9811  17D0  00A2               	movwf	atoi@a+1
  9812  17D1                     i1l9283:	
  9813  17D1  0AA3               	incf	atoi@s,f
  9814  17D2  2FAB               	goto	i1l9289
  9815  17D3                     i1l9291:	
  9816  17D3  0820               	movf	atoi@sign,w
  9817  17D4  1903               	btfsc	3,2
  9818  17D5  2FE2               	goto	i1l9297
  9819  17D6  0921               	comf	atoi@a,w
  9820  17D7  00F9               	movwf	??_atoi
  9821  17D8  0922               	comf	atoi@a+1,w
  9822  17D9  00FA               	movwf	??_atoi+1
  9823  17DA  0AF9               	incf	??_atoi,f
  9824  17DB  1903               	skipnz
  9825  17DC  0AFA               	incf	??_atoi+1,f
  9826  17DD  0879               	movf	??_atoi,w
  9827  17DE  00F7               	movwf	?_atoi
  9828  17DF  087A               	movf	??_atoi+1,w
  9829  17E0  00F8               	movwf	?_atoi+1
  9830  17E1  0008               	return
  9831  17E2                     i1l9297:	
  9832  17E2  0822               	movf	atoi@a+1,w
  9833  17E3  00F8               	movwf	?_atoi+1
  9834  17E4  0821               	movf	atoi@a,w
  9835  17E5  00F7               	movwf	?_atoi
  9836  17E6  0008               	return
  9837  17E7                     __end_of_atoi:	
  9838  17E7                     __ptext1243:	
  9839 ;; =============== function ___lwdiv ends ============
  9840                           
  9841                           
  9842 ;; *************** function ___wmul *****************
  9843 ;; Defined at:
  9844 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\wmul.c"
  9845 ;; Parameters:    Size  Location     Type
  9846 ;;  multiplier      2    0[COMMON] unsigned int 
  9847 ;;  multiplicand    2    2[COMMON] unsigned int 
  9848 ;; Auto vars:     Size  Location     Type
  9849 ;;  product         2    4[COMMON] unsigned int 
  9850 ;; Return value:  Size  Location     Type
  9851 ;;                  2    0[COMMON] unsigned int 
  9852 ;; Registers used:
  9853 ;;		wreg, status,2, status,0
  9854 ;; Tracked objects:
  9855 ;;		On entry : 160/100
  9856 ;;		On exit  : 160/100
  9857 ;;		Unchanged: FFE9F/0
  9858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9859 ;;      Params:         4       0       0       0       0
  9860 ;;      Locals:         2       0       0       0       0
  9861 ;;      Temps:          0       0       0       0       0
  9862 ;;      Totals:         6       0       0       0       0
  9863 ;;Total ram usage:        6 bytes
  9864 ;; Hardware stack levels used:    1
  9865 ;; This function calls:
  9866 ;;		Nothing
  9867 ;; This function is called by:
  9868 ;;		_atoi
  9869 ;; This function uses a non-reentrant model
  9870 ;;
  9871  17E7                     ___wmul:	
  9872                           
  9873                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9874  17E7  01F5               	clrf	___wmul@product
  9875  17E8  01F6               	clrf	___wmul@product+1
  9876  17E9                     i1l9789:	
  9877  17E9  1C71               	btfss	___wmul@multiplier,0
  9878  17EA  2FF1               	goto	i1l9793
  9879  17EB  0873               	movf	___wmul@multiplicand,w
  9880  17EC  07F5               	addwf	___wmul@product,f
  9881  17ED  1803               	skipnc
  9882  17EE  0AF6               	incf	___wmul@product+1,f
  9883  17EF  0874               	movf	___wmul@multiplicand+1,w
  9884  17F0  07F6               	addwf	___wmul@product+1,f
  9885  17F1                     i1l9793:	
  9886  17F1  1003               	clrc
  9887  17F2  0DF3               	rlf	___wmul@multiplicand,f
  9888  17F3  0DF4               	rlf	___wmul@multiplicand+1,f
  9889  17F4  1003               	clrc
  9890  17F5  0CF2               	rrf	___wmul@multiplier+1,f
  9891  17F6  0CF1               	rrf	___wmul@multiplier,f
  9892  17F7  0872               	movf	___wmul@multiplier+1,w
  9893  17F8  0471               	iorwf	___wmul@multiplier,w
  9894  17F9  1D03               	skipz
  9895  17FA  2FE9               	goto	i1l9789
  9896  17FB  0876               	movf	___wmul@product+1,w
  9897  17FC  00F2               	movwf	?___wmul+1
  9898  17FD  0875               	movf	___wmul@product,w
  9899  17FE  00F1               	movwf	?___wmul
  9900  17FF  0008               	return
  9901  1800                     __end_of___wmul:	
  9902                           
  9903                           	psect	text1248
  9904  0000                     __ptext1248:	
  9905 ;; =============== function _Register_SendData ends ============
  9906                           
  9907  007E                     btemp	set	126	;btemp
  9908  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.80 build 6738 
Symbol Table                                                                                   Sun Jan 28 19:36:22 2018

                 ___altoft@exp 002D              ??_Interrupt_Gross 01CB                              _t 00E3  
                            pc 0002                  ___altoft@sign 002E                             fsr 0004  
          ___wmul@multiplicand 0073    __size_of_Digitron_Send_8bit 001B                   ___ftadd@exp1 003A  
                 ___ftadd@exp2 0039                   ___ftadd@sign 0038                            _GIE 005F  
                          _RC2 003A                            _RC3 003B                            _RE0 0048  
                          _RE1 0049                            _RE2 004A                            _RX9 00C6  
                          _TX9 04C6                     i1_delay_us 0FC3                            _exp 025E  
                          _log 01D5                            _pos 00EA                            _pow 0110  
                          fsr0 0004                            indf 0000        __end_of_queueArray_init 097D  
                 ___ftdiv@cntr 0026                 ?_queueArray_in 0071                   ___ftdiv@sign 002B  
                         l1145 0000                           l1155 0000                           l2320 08F3  
                         l2312 08AC                           l2330 093E                           l4100 0000  
                         l2332 093D                           l2324 0906                           l2316 08CD  
                         l2335 0941                           l2328 092A                           l1730 0000  
                         l4106 0000                           l1733 0000                           l1726 09DE  
                         l1728 09E4                           l1729 09E7                           l6100 0000  
                         l2902 0000                           l2908 0000                           l3487 0000  
                         l2896 0000                           l9001 0000                           l2899 0A7F  
                         l9011 0000                           l9003 0000                           l6508 0B29  
                         ?_exp 0055                           l9013 0000                           l9101 0000  
                         ?_log 0050                           l9015 0000                           l9007 0000  
                         l9111 0000                           l9103 0000                           l9017 0000  
                         l9009 0000                           l9113 0000                           l9105 0000  
                         l9027 0000                           l9019 0000                           l9211 0A36  
                         l9203 0000                           l9131 0000                           l9123 08AD  
                         l9115 0000                           l9107 0000                           l5941 0000  
                         l9029 0000                           l9221 0000                           l9301 0000  
                         l9213 0000                           l9141 0000                           l9117 0000  
                         l9109 0000                           l9223 0A63                           l9207 0A34  
                         l9143 0000                           l9135 08F4                           l9127 08CE  
                         l9119 0000                           l9081 0000                           l9153 0000  
                         l9161 0000                           l9225 0000                           l9241 0AC3  
                         l9217 0000                           l9313 0000                           l9209 0A18  
                         l9145 0000                           l9129 0000                           l9083 0000  
                         l9155 0000                           l9163 0000                           l9171 0000  
                         l9235 0A8E                           l9227 0000                           l9139 0907  
                         l9093 0A11                           l9157 0000                           l9173 0A3E  
                         l9181 0A52                           l9309 0AB1                           l9149 092B  
                         l9095 0000                           l9087 0A0F                           l9159 0000  
                         l9167 0000                           l9183 0000                           l9175 0000  
                         l9239 0000                           l9191 0000                           l9169 0000  
                         l9185 0000                           l9097 0000                           l9195 0A22  
                         l9099 0000                           l9197 0A26                           l9189 0000  
                         l9199 0000                           l8941 0000                           ?_pow 00A0  
                         l8943 0000                           l8963 0000                           l8955 0964  
                         l9771 0B25                           l9763 0B11                           l8939 0000  
                         l8957 0000                           l8949 0963                           l9757 0000  
                         l9781 0B32                           l8981 0000                           l8973 0983  
                         l8965 0000                           l8959 0000                           l9767 0B22  
                         l9775 0000                           l8991 09A2                           l8983 0000  
                         l8967 0000                           STR_1 00E5                           STR_2 00EA  
                         l9769 0AF2                           l8993 0000                           l8985 0000  
                         l8977 098E                           STR_3 00DE                           STR_4 00EA  
                         l8979 0990                           STR_5 00AE                           STR_6 00EA  
                         l8997 09B8                           STR_7 00D5                           STR_8 00EA  
                         l8999 0000                           STR_9 00BC                           _CODE 0027  
                         _BRGH 04C2                           _T0IE 005D                           _T0IF 005A  
                         _CREN 00C4                           _FERR 00C2                           _CSRC 04C7  
                         u2195 0A4B                           _PEIE 005E                           _RCIE 0465  
                         _RCIF 0065                           _OERR 00C1                           _RX9D 00C0  
                         _TMR0 0001                           _SPEN 00C7                           _TX9D 04C0  
                         _SREN 00C5          __end_of_Uart_1SendStr 0A7A                           _TRMT 04C1  
                         _TXEN 04C5                           _SYNC 04C4                           _atoi 178B  
                         _atol 0DFC                           _main 0871             _Calc_DistanceLevel 0BD5  
                 ___ftpack@arg 0071                   ___ftpack@exp 0074                           btemp 007E  
                         _sqrt 04B9                           exp@x 0055                           log@x 0050  
                         pow@x 00A0                           pow@y 00A3                           start 0014  
     __size_of_Digitron_Update 0042                   ___ftmul@cntr 002D                   ___ftmul@sign 002E  
          ?_Calc_DistanceLevel 0071                  ??_Init_Timer0 01CB                   ___fttol@exp1 0028  
                        ??_exp 007D                   ___fttol@lval 0024                          ??_log 007D  
                        ??_pow 007E             i1_Digitron_Command 0FB6             i1_Digitron_Display 0F4A  
                        ?_atoi 0077                          ?_atol 0020                          _ADDEN 00C3  
                        ?_main 0071                __end_of___ftadd 069A                          STR_10 00EA  
                        STR_11 006A                          STR_12 00EA                          STR_13 00CA  
                        STR_14 0088                          STR_15 00EA                          STR_16 009E  
                        STR_17 00EA                __end_of___ftdiv 0871                __end_of___ftneg 03BA  
                        ?_sqrt 005E                __end_of___ftmul 0715                __end_of___ftsub 0795  
              __end_of___fttol 03B2                __end_of___lwdiv 0CCB                          i1l561 0BC8  
                        i1l562 0BCA                          i1l563 0BD1                          i1l564 0000  
                        _RCREG 001A          __end_of_SerialService 0D57                          _SPBRG 0099  
                        _PORTA 0005                          _PORTD 0008                          _TRISA 0085  
                        _TRISB 0086                          _TRISC 0087                          _TRISD 0088  
                        _TRISE 0089           Uart_1SendStr@data_at 01CC                          _TXREG 0019  
     i1Digitron_Command@device 0075            ___lmul@multiplicand 0075                          _Match 0A83  
                 ___lltoft@exp 007D            ?i1_Digitron_Command 0074            ?i1_Digitron_Display 0071  
         ??_Calc_DistanceLevel 007E                  ___awtoft@sign 007C                          _floor 0449  
                        _ldexp 03D5                          _frexp 0795                    i1delay_us@i 0072  
                  i1delay_us@j 0073                __end_of_isdigit 0E7D                    _CleanGpsRcv 0FCF  
                ___ftpack@sign 0075                          atoi@a 0021                          atol@a 0029  
                        atol@c 002E                          atoi@s 0023                          atol@s 002D  
                        pclath 000A                     _LatiRcvCnt 00E5                          pow@yi 00AA  
                        sqrt@i 0067                          sqrt@q 0068                          sqrt@x 006B  
                        sqrt@y 005E                          sqrt@z 0064                          status 0003  
           Distance_Update@dat 00B8                          wtemp0 007E                 _Init_Digitrons 0942  
              __end_of_strncmp 0B28               __end_of_DelaySec 0A4E        i1Digitron_Send_8bit@dat 0071  
         ??i1_Digitron_Command 0075                  ??_Send_ATComm 01DD           ??i1_Digitron_Display 0076  
                  ldexp@newexp 003E     __size_of_UART_1SendOneByte 0009       __end_of_Digitron_Command 0A08  
     __end_of_Digitron_Display 09DC          i1Digitron_Command@com 0074                   __end_of_atoi 17E7  
                 __end_of_atol 0E6F                   __end_of_main 0942                   __end_of_sqrt 057C  
        i1Digitron_Display@fro 007B          i1Digitron_Display@num 007A          i1Digitron_Display@que 0079  
                       ??_atoi 0079                         ??_atol 0024                         ??_main 01DF  
                ___fttol@sign1 0023               SerialService@tmp 006E            __end_of_Init_Timer0 174A  
                       ??_sqrt 0061                    ?i1_delay_us 0071           Pos_meet@arr_rcv_lati 00C8  
             __end_of_Pos_meet 0DFC               ?_queueArray_init 0071                         ?_Match 0071  
              ??_queueArray_in 0072                         ?_floor 003B                         ?_ldexp 003B  
                       ?_frexp 0071               __end_of___altoft 0800               __end_of___awtoft 03D5  
             __end_of___ftpack 0753          __size_of_CleanWifiRcv 0012               __end_of___lltoft 178B  
       __end_of_Init_Digitrons 0958                         i1l1162 0ED4                         i1l1155 0000  
                       i1l1163 0EDE                         i1l1730 0000                         i1l1733 0000  
                       i1l1726 0FA7                         i1l1728 0FAB                         i1l1729 0FAC  
                       i1l6201 0E81                         i1l6051 0DFF                         i1l6204 0000  
                CleanWifiRcv@i 01CB                         i1l6216 0829                         i1l4704 0D39  
                       i1l6065 0000                         i1l6129 0000                         i1l6209 0000  
                       i1l4722 0D49                         i1l6139 0000                         i1l6243 0391  
                       i1l5365 0000                         i1l6263 0000                         i1l5368 0000  
                       i1l6290 0000                         i1l6187 0656                         i1l6358 0000  
                       i1l6366 0000                         i1l9031 0000                         i1l6480 0000  
                       i1l9041 0000                         u302_25 0CB8                         i1l6565 0000  
                       i1l9045 0ECA                         i1l9037 0EB2                         i1l9063 0000  
                       i1l9055 0EF4                         i1l9047 0EE7                         i1l9039 0000  
                       i1l9073 0F34                         i1l9065 0000                         i1l9057 0000  
                       i1l9049 0000                         i1l9075 0F3C                         i1l9067 0F1B  
                       i1l9059 0000                         i1l9411 0D96                         i1l9331 0000  
                       i1l9501 0000                         i1l9421 0D9C                         i1l9413 0000  
                       i1l9405 0D80                         i1l9325 0000                         i1l9079 0F46  
                       i1l9271 178C                         i1l9511 0000                         i1l9503 0000  
                       i1l9431 0000                         i1l9415 0D9B                         i1l9407 0000  
                       i1l9351 0000                         i1l9327 0000                         i1l9319 0000  
                       i1l9281 17A5                         i1l9273 1794                         i1l9521 0000  
                       i1l9513 0000                         i1l9505 0000                         i1l9441 0DF8  
                       i1l9433 0000                         i1l9409 0000                         i1l9361 0D14  
                       i1l9353 0D01                         i1l9345 0CF1                         i1l9337 0000  
                       i1l9329 0000                         i1l9291 17D3                         i1l9283 17D1  
                       i1l9267 0000                         i1l9451 0000                         i1l9603 0000  
                       i1l9531 0000                         i1l9523 0000                         i1l9515 0000  
                       i1l9507 0000                         i1l9435 0DBB                         i1l9363 0000  
                       i1l9355 0000                         i1l9347 0000                         i1l9293 0000  
                       i1l9277 0000                         i1l9269 1792                         i1l9461 0000  
                       i1l9453 0000                         i1l9701 0000                         i1l9613 0124  
                       i1l9605 0000                         i1l9533 0000                         i1l9525 0B96  
                       i1l9517 0000                         i1l9509 0B6B                         i1l9437 0000  
                       i1l9429 0DA5                         i1l9365 0000                         i1l9357 0D0B  
                       i1l9349 0CF8                         i1l9373 0D28                         i1l9551 0000  
                       i1l9543 0FCF                         i1l9455 0000                         i1l9703 0000  
                       i1l9631 0000                         i1l9535 0000                         i1l9527 0000  
                       i1l9519 0000                         i1l9447 0DFB                         i1l9439 0DC0  
                       i1l9391 0D77                         i1l9383 0000                         i1l9359 0000  
                       i1l9561 0FDC                         i1l9553 0000                         i1l9297 17E2  
                       i1l9289 17AB                         i1l9481 0E1B                         i1l9465 0E4D  
                       i1l9705 0000                         i1l9633 017D                         i1l9609 0000  
                       i1l9537 0000                         i1l9529 0000                         i1l9385 0000  
                       i1l9377 0000                         i1l9369 0000                         i1l9563 0000  
                       i1l9803 0000                         i1l9483 0E53                         i1l9467 0000  
                       i1l9459 0000                         i1l9643 0000                         i1l9731 0295  
                       i1l9715 0269                         i1l9635 0000                         i1l9627 016A  
                       i1l9619 012F                         i1l9539 0000                         i1l9387 0D6D  
                       i1l9379 0000                         i1l8933 0000                         i1l9573 0FE6  
                       i1l9565 0000                         i1l9549 0FD1                         i1l9813 0CAF  
                       i1l9805 0000                         i1l9485 0000                         i1l9469 0E17  
                       i1l9901 0000                         i1l9661 0000                         i1l9653 0000  
                       i1l9741 0000                         i1l9733 0000                         i1l9725 0280  
                       i1l9709 0000                         i1l9637 0000                         i1l9629 0000  
                       i1l9493 0000                         i1l9397 0D78                         i1l9389 0000  
                       i1l8935 0000                         i1l9575 0000                         i1l9823 0000  
                       i1l9815 0000                         i1l9911 071D                         i1l9903 0688  
                       i1l9831 0000                         i1l9671 0000                         i1l9663 0000  
                       i1l9655 0000                         i1l9647 0000                         i1l9743 0000  
                       i1l9735 0000                         i1l9639 0000                         i1l9495 0000  
                       i1l8937 0BBF                         i1l8929 0BBE                         i1l9585 0FF0  
                       i1l9577 0000                         i1l9825 0CC6                         i1l9921 0735  
                       i1l9489 0E66                         i1l9841 0604                         i1l9833 0000  
                       i1l9665 0000                         i1l9657 0000                         i1l9753 033B  
                       i1l9745 0000                         i1l9737 02B7                         i1l9593 0000  
                       i1l9497 0B49                         i1l9587 0000                         i1l9683 0E7B  
                       i1l9675 0000                         i1l9819 0000                         i1l9931 0000  
                       i1l9923 073A                         i1l9915 0721                         i1l9907 0000  
                       i1l9843 0000                         i1l9667 0000                         i1l9659 04FE  
                       i1l9747 0000                         i1l9739 0000                         i1l9595 0000  
                       i1l9499 0000                         i1l9589 0000                         i1l9677 0000  
                       i1l9933 0000                         i1l9925 073F                         i1l9917 0726  
                       i1l9909 0000                         i1l9941 0000                         i1l9861 0000  
                       i1l9837 05FD                         i1l9829 0000                         i1l9669 0000  
                       i1l9693 01E7                         i1l9597 0000                         i1l9919 072B  
                       i1l9935 0000                         i1l9871 063E                         i1l9855 0000  
                       i1l9847 0613                         i1l9687 0000                         i1l9599 0000  
                       i1l9793 17F1                         i1l9929 0000                         i1l9873 0000  
                       i1l9865 0630                         i1l9857 0000                         i1l9849 0000  
                       i1l9953 0000                         i1l9795 0000                         i1l9787 0000  
                       i1l9939 0E97                         i1l9891 066C                         i1l9883 0000  
                       i1l9867 0635                         i1l9859 0621                         i1l9971 0000  
                       i1l9947 0000                         i1l9699 01F0                         i1l9797 0000  
                       i1l9789 17E9                         i1l9893 0000                         i1l9885 0661  
                       i1l9877 064D                         i1l9869 063A                         i1l9981 0000  
                       i1l9973 0000                         i1l9965 0000                         i1l9949 0000  
                       i1l9895 0000                         i1l9879 0652                         i1l9991 0000  
                       i1l9983 083C                         i1l9975 0000                         i1l9967 0000  
                       i1l9959 0818                         i1l9889 0000                         i1l9993 0000  
                       i1l9977 0000                         i1l9969 0000                         i1l9899 0000  
                       i1l9987 0000                         i1l9979 0000                         i1l9997 0000  
                       u270_25 0BA7                         u336_25 084A                         u266_20 0B55  
                       u266_25 0B52                         u347_20 0000                         u267_20 0B77  
                       u347_25 036A                         u267_25 0B74                         u292_25 0335  
                       u268_25 0B7B                         u269_20 0BA3                         u269_25 0BA0  
                       u278_25 0164                         u369_25 0400                         _OPTION 0081  
                       Match@a 01D9               __end_of_delay_us 0A16   __end_ofi1_Digitron_Send_8bit 0FB6  
                       ___ftge 0753                         ___lmul 0E7D                         ___wmul 17E7  
                    ??___ftadd 0035                      ??___ftdiv 0079                      ??___ftneg 0074  
             __end_of_initUART 176B                      ??___ftmul 0026                      ??___ftsub 007D  
                    ??___fttol 0020                      ??___lwdiv 0075                     _WifiRcvCnt 006F  
            ??_Digitron_Update 0020            __end_of_Send_ATComm 0A38                _Distance_Update 0B39  
                       _strchr 0B28                         clrloop 174B                         _strlen 0ABF  
                       _strstr 0A90                         floor@i 003E                         floor@x 003B  
                       exp@exp 005B          ___ftmul@f3_as_product 002A                         log@exp 0053  
                    ??_isdigit 0071                   _CleanWifiRcv 0A4E                         saved_w 007E  
               Pos_meet@i_2818 00D7                 Pos_meet@j_2819 00D8            Distance_Update@mask 00BA  
                    ??_strncmp 01D4                ?_Init_Digitrons 0071                _Interrupt_Gross 0800  
                   ___altoft@c 0029                     ___ftadd@f1 002F                     ___ftadd@f2 0032  
                   ___ftge@ff1 0071                     ___ftge@ff2 0074                   eval_poly@res 004D  
                   ___ftdiv@f1 0023                     ___ftdiv@f2 0020                     ___ftdiv@f3 0027  
                   ___ftneg@f1 0071                     ___awtoft@c 0079            __size_ofi1_delay_us 000C  
                   ___ftmul@f1 0020                     ___ftmul@f2 0023                     ___ftsub@f1 003E  
                   ___ftsub@f2 003B                  __end_of_Match 0A90                     ___fttol@f1 0079  
               __pcstackCOMMON 0071          Digitron_Send_8bit@dat 01CB                   __pidataBANK1 0000  
                  _Init_Timer0 1743                     ___lltoft@c 0079                  __end_of_floor 04B9  
                __end_of_ldexp 0449                  __end_of_frexp 07D1          i1Digitron_Send_8bit@i 0072  
          i1Digitron_Display@i 007D            i1Digitron_Display@j 007C                      ?_DelaySec 0071  
                      ??_Match 01D9                        ??_floor 007D                        ??_ldexp 0040  
                      ??_frexp 0075                     __pbssBANK0 006F                     __pbssBANK1 00DD  
                   __pbssBANK2 0110                     __pbssBANK3 0190             __size_of_eval_poly 005E  
        Pos_meet@arr_rcv_longi 00CE                    _Send_ATComm 0A16                    _LongiRcvCnt 00E7  
                   __pmaintext 0871        __end_of_Distance_Update 0BBE                      ?_Pos_meet 0071  
                      ?___ftge 0071                        ?___lmul 0071                        ?___wmul 0071  
   __end_of_Digitron_Send_8bit 09F7                     __pintentry 0004                      ?___altoft 0029  
                   __ptext1200 0AF1                     __ptext1201 0ABF                     __ptext1210 0958  
                   __ptext1202 0A7A                     __ptext1211 0CCB                     __ptext1203 0A4E  
                   __ptext1220 0F4A                     __ptext1212 0D57                     __ptext1204 0A38  
                   __ptext1221 057C                     __ptext1213 0B39                     __ptext1205 0800  
                   __ptext1230 0807                     __ptext1222 0449                     __ptext1214 0BD5  
                   __ptext1206 1743                     __ptext1231 05DA                     __ptext1223 077F  
                   __ptext1215 0110                     __ptext1207 1752                     __ptext1240 0E7D  
                   __ptext1232 0DFC                     __ptext1224 0FB6                     __ptext1216 025E  
                   __ptext1208 0A08                     __ptext1241 0715                     __ptext1233 178B  
                   __ptext1225 03D5                     __ptext1217 01D5                     __ptext1209 09DC  
                   __ptext1242 0CA1                     __ptext1234 0FC3                     __ptext1226 176B  
                   __ptext1218 04B9                     __ptext1243 17E7                     __ptext1235 0FA5  
                   __ptext1227 07D1                     __ptext1219 0EB0                     __ptext1244 0E6F  
                   __ptext1236 0795                     __ptext1228 03BA                     __ptext1245 0FCF  
                   __ptext1237 0753                     __ptext1229 069A                     __ptext1246 0EF2  
                   __ptext1238 03B2                     __ptext1247 0BBE                     __ptext1239 0350  
                   __ptext1248 0000                     __ptext1192 0A16                     __ptext1193 0942  
                   __ptext1194 0A83                     __ptext1195 097D                     __ptext1196 0A90  
                   __ptext1197 0A60                     __ptext1198 09F7                     __ptext1199 0B28  
               ___lmul@product 0079                      ?___awtoft 0079                      ?___ftpack 0071  
                    ?___lltoft 0079                        ?_strchr 01CB                        ?_strlen 01CB  
                      ?_strstr 01D7                        i1l10011 0000                        i1l10003 06AB  
                      i1l10021 0000                        i1l10013 0000                        i1l10103 0000  
                      i1l10111 0000                        i1l10031 06DD                        i1l10023 0000  
                      i1l10015 0000                        i1l10121 0000                        i1l10033 0000  
                      i1l10025 0000                        i1l10017 0000                        i1l10009 06BC  
                      i1l10201 03DE                        i1l10123 0000                        i1l10115 0762  
                      i1l10043 06F9                        i1l10035 0000                        i1l10027 06CD  
                      i1l10019 0000                        i1l10131 0000                        i1l10211 03F7  
                      i1l10203 0000                        i1l10061 0000                        i1l10053 0000  
                      i1l10045 0000                        i1l10037 0000                        i1l10141 07E3  
                      i1l10133 0000                        i1l10301 0000                        i1l10063 0000  
                      i1l10055 035E                        i1l10119 0771                        i1l10311 0000  
                      i1l10303 0000                        i1l10047 0000                        i1l10039 06E9  
                      i1l10143 07EE                        i1l10135 0000                        i1l10151 176D  
                      i1l10231 0000                        i1l10073 0385                        i1l10065 0000  
                      i1l10057 0363                        i1l10313 0000                        i1l10321 0000  
                      i1l10049 0000                        i1l10153 1778                        i1l10217 0000  
                      i1l10225 042A                        i1l10083 039B                        i1l10075 0000  
                      i1l10067 0000                        i1l10059 0000                        i1l10251 0000  
                      i1l10243 07A4                        i1l10235 0000                        i1l10323 0000  
                      i1l10091 0000                        i1l10147 0000                        i1l10315 0000  
                      i1l10171 046D                        i1l10085 0000                        i1l10077 038D  
                      i1l10245 0000                        i1l10333 0FCA                        i1l10093 0000  
                      i1l10229 0430                        i1l10317 0000                        i1l10181 04B2  
                      i1l10173 0000                        i1l10157 0000                        i1l10087 03A9  
                      i1l10247 0000                        i1l10239 0000                        i1l10335 0000  
                      i1l10327 0FC8                        i1l10319 0000                        i1l10159 0000  
                      i1l10191 05D3                        i1l10271 0000                        i1l10263 0F50  
                      i1l10255 0000                        i1l10249 0000                        i1l10097 0000  
                      i1l10185 0000                        i1l10281 0F6F                        i1l10273 0000  
                      i1l10257 0000                        i1l10099 03C4                        i1l10195 0000  
                      i1l10291 0000                        i1l10283 0000                        i1l10275 0000  
                      i1l10267 0F5B                        i1l10293 0000                        i1l10269 0F5D  
                      i1l10287 0F85                        i1l10297 0000                        i1l10289 0000  
                      i1l10299 0000                     ??_DelaySec 01CB           i1_Digitron_Send_8bit 0FA5  
           Register_SendData@i 0074                      ?_delay_us 0071        __end_of_Interrupt_Gross 0807  
                   _ldexp$3469 0042                   ?_CleanGpsRcv 0071         Digitron_Command@device 01CF  
                    ?_initUART 0071                     _first_time 00ED             UART_1SendOneByte@c 01CB  
                   ??_Pos_meet 00C5              ?_Digitron_Command 01CE              ?_Digitron_Display 0071  
              __size_of___ftge 002C                __size_of___lmul 0033                        ___ftadd 05DA  
                  Pos_meet@pos 00D4                        ___ftdiv 0807                        ___ftneg 03B2  
              __size_of___wmul 0019                        ___ftmul 069A                        ___ftsub 077F  
                      ___fttol 0350                        ___lwdiv 0CA1             ??_Digitron_Command 01CF  
           ??_Digitron_Display 01D0                     ??___altoft 007D                     ??___awtoft 007C  
                   ??___ftpack 0076              __end_of_eval_poly 05DA                     ??___lltoft 007D  
       __size_of_Uart_1SendStr 001A                __size_of_strchr 0011                __size_of_strlen 0032  
                 ??i1_delay_us 0071                __size_of_strstr 002F                   __size_of_exp 00F2  
                 __size_of_log 0089                        _isdigit 0E6F                   __size_of_pow 00C5  
                      _sec_cnt 00E1          ?i1_Digitron_Send_8bit 0071                     ??_delay_us 01CB  
  __size_of_Calc_DistanceLevel 00CC                        _strncmp 0AF1           end_of_initialization 010C  
                      exp@sign 005D                     ??_initUART 01CB                 queueArray_in@Q 0078  
               queueArray_in@i 0077                _Digitron_Update 0EB0                        pow@sign 00A9  
       __size_of_SerialService 008C           Register_SendData@dat 0071    __size_ofi1_Digitron_Command 000D  
           __end_ofi1_delay_us 0FCF    __size_ofi1_Digitron_Display 005B                   Send_ATComm@i 01DE  
             ?_Distance_Update 0071                     _timer0_cnt 00EB                        strlen@s 01CB  
         Distance_Update@level 00C4               Send_ATComm@delay 01DB               ??_Init_Digitrons 01D8  
             ?_Interrupt_Gross 0071          __end_of_queueArray_in 0F4A       __size_of_queueArray_init 0025  
                _Uart_1SendStr 0A60                    ___ftdiv@exp 002A                    ___ftmul@exp 0029  
                 ?_Init_Timer0 0071                 __end_of___ftge 077F                 __end_of___lmul 0EB0  
               __end_of___wmul 1800                      _LenRcvCnt 00E6                     floor@expon 0041  
       ??i1_Digitron_Send_8bit 0071                 __end_of_strchr 0B39                 __end_of_strlen 0AF1  
               __end_of_strstr 0ABF                  _SerialService 0CCB            start_initialization 00F0  
                   eval_poly@d 0048                     eval_poly@n 0049                     eval_poly@x 0045  
                   ldexp@value 003B                   CleanGpsRcv@i 0071                    __end_of_exp 0350  
                  __end_of_log 025E                    __end_of_pow 01D5              __size_of_DelaySec 0016  
      __end_of_Digitron_Update 0EF2                 ?_Uart_1SendStr 0071           __size_of_CleanGpsRcv 0031  
                   frexp@value 0071                   ?_Send_ATComm 01DA                      Pos_meet@i 00D5  
                    Pos_meet@j 00D6                       ??___ftge 0077                       ??___lmul 0079  
             _arr_rcv_section1 0190               _arr_rcv_section2 019A                       ??___wmul 0075  
                    _WhoRcvCnt 00E8                    __pdataBANK1 00ED              __size_of_Pos_meet 00A5  
                     ??_strchr 01CD                       ??_strlen 01CD                       ??_strstr 01D8  
            __size_of___altoft 002F                 ?_SerialService 0071              __size_of___awtoft 001B  
            __size_of___ftpack 003E              __size_of___lltoft 0020             Interrupt_Gross@mov 01CB  
                __pcstackBANK0 0020                  __pcstackBANK1 00A0                  __pcstackBANK3 01CB  
           _Digitron_Send_8bit 09DC                   _isdigit$3171 0071              __size_of_delay_us 000E  
                 _gps_location 00DF            ?_Digitron_Send_8bit 0071              __size_of_initUART 0019  
             ___lwdiv@dividend 0073        _Calc_DistanceLevel$3685 00AE        _Calc_DistanceLevel$3686 00B1  
      _Calc_DistanceLevel$3687 00B4              ??_queueArray_init 01CB            Digitron_Command@com 01CE  
                    _digitron1 01AC                      _digitron2 01BA                      _digitron3 0142  
                     ?___ftadd 002F                       ?___ftdiv 0020                       ?___ftneg 0071  
                     ?___ftmul 0020                       ?___ftsub 003B                       ?___fttol 0079  
                     ?___lwdiv 0071            Digitron_Display@fro 01D5              _Register_SendData 0BBE  
         ??_Digitron_Send_8bit 01CB            Digitron_Display@num 01D4            Digitron_Display@que 01D3  
                    _config_ok 00E9                      __pstrings 0017             ?_Register_SendData 0071  
                     ?_isdigit 0071                  _val_rcv_longi 01A8                      _eval_poly 057C  
               __size_of_Match 000D      __size_of_Digitron_Command 0011      __size_of_Digitron_Display 005F  
             ___lwdiv@quotient 0075            ??_Register_SendData 0074                ??_Uart_1SendStr 01CC  
               __size_of_floor 0070                 __size_of_ldexp 0074                 __size_of_frexp 003C  
                     ?_strncmp 01D1               ?_Digitron_Update 0071        Register_SendData@length 0073  
            interrupt_function 0004                 ___wmul@product 0075                      delay_us@i 01CC  
                    delay_us@j 01CD       Distance_Update@mask_2831 00BE       Distance_Update@mask_2829 00BC  
                  _arr_rcv_len 01C8                    _arr_rcv_who 00DD      __end_of_Register_SendData 0BD5  
              Send_ATComm@comm 01DD                Send_ATComm@wait 01DC           __size_of_Init_Timer0 0007  
              ??_SerialService 00D9                    __stringbase 0026              ___wmul@multiplier 0071  
                ?_CleanWifiRcv 0071     __end_of_Calc_DistanceLevel 0CA1                     ?_eval_poly 0045  
                     _DelaySec 0A38              ___lmul@multiplier 0071                    DelaySec@sec 01CC  
                 delay_us@usec 01CB     __end_ofi1_Digitron_Command 0FC3     __end_ofi1_Digitron_Display 0FA5  
                    frexp@eptr 0074                       _Pos_meet 0D57               queueArray_in@buf 0071  
             queueArray_init@Q 01CE           __size_of_Send_ATComm 0022               queueArray_init@i 01CF  
             queueArray_init@j 01D0               __size_of___ftadd 00C0               __size_of___ftdiv 006A  
             __size_of___ftneg 0008                       ___altoft 07D1               __size_of___ftmul 007B  
             __size_of___ftsub 0016               __size_of___fttol 0062               __size_of___lwdiv 002A  
                     ___awtoft 03BA                       ___ftpack 0715            Digitron_Send_8bit@i 01CC  
                     ___lltoft 176B                 ??_CleanWifiRcv 01CB       __size_of_Distance_Update 0085  
                     _exp$3416 0058               __size_of_isdigit 000E                       _delay_us 0A08  
              ___lwdiv@divisor 0071                ___lwdiv@counter 0077        Distance_Update@dat_2830 00C2  
      Distance_Update@dat_2828 00C0                       _pow$3688 00A6                   _val_rcv_lati 01A4  
             __size_of_strncmp 0037                       _initUART 1752                  __size_of_atoi 005C  
                __size_of_atol 0073                  __size_of_main 00D1       __size_of_Interrupt_Gross 0007  
                __size_of_sqrt 00C3                 i1delay_us@usec 0071                     strncmp@len 01D2  
                     clear_ram 174A                       _rcv_wifi 0110           Digitron_Update@rider 0025  
   __size_of_Register_SendData 0017                 Send_ATComm@ret 01DA                       atoi@sign 0020  
                     atol@sign 0028         __size_of_queueArray_in 0058                       exp@coeff 0031  
                     log@coeff 004F                    ??_eval_poly 004B  __size_ofi1_Digitron_Send_8bit 0011  
             _Digitron_Command 09F7               _Digitron_Display 097D                       isdigit@c 0072  
                ??_CleanGpsRcv 0071                       intlevel1 0000                _queueArray_init 0958  
     Digitron_Update@order_num 0021                      strchr@chr 01CB                      strchr@ptr 01CD  
            Digitron_Display@i 01D7              Digitron_Display@j 01D6                    _val_rcv_len 00EC  
      __size_of_Init_Digitrons 0016                      strncmp@s1 01D6                      strncmp@s2 01D1  
                    stringcode 0021        Calc_DistanceLevel@level 00B7              _UART_1SendOneByte 0A7A  
           ?_UART_1SendOneByte 0071                       strlen@cp 01CF            ??_UART_1SendOneByte 01CB  
                     stringdir 0021                       stringtab 0017                       strstr@s1 01D8  
                     strstr@s2 01D7              ??_Distance_Update 007E                  _queueArray_in 0EF2  
          __end_of_CleanGpsRcv 1000               Digitron_Update@i 0026           __end_of_CleanWifiRcv 0A60  
    __end_of_UART_1SendOneByte 0A83  
